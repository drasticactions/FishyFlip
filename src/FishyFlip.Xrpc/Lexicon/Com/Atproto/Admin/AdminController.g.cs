// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Xrpc.Lexicon.Com.Atproto.Admin
{

    /// <summary>
    /// com.atproto.admin XRPC Group.
    /// </summary>
    [ApiController]
    public abstract class AdminController : ControllerBase
    {

        /// <summary>
        /// Delete a user account as an administrator.
        /// </summary>
        /// <param name="did"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/com.atproto.admin.deleteAccount")]
        public abstract Task<Results<Ok, BadRequest>> DeleteAccountAsync ([FromBody] FishyFlip.Models.ATDid did, CancellationToken cancellationToken = default);

        /// <summary>
        /// Disable an account from receiving new invite codes, but does not invalidate existing codes.
        /// </summary>
        /// <param name="account"></param>
        /// <param name="note">Optional reason for disabled invites.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/com.atproto.admin.disableAccountInvites")]
        public abstract Task<Results<Ok, BadRequest>> DisableAccountInvitesAsync ([FromBody] FishyFlip.Models.ATDid account, [FromBody] string? note = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Disable some set of codes and/or all codes associated with a set of users.
        /// </summary>
        /// <param name="codes"></param>
        /// <param name="accounts"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/com.atproto.admin.disableInviteCodes")]
        public abstract Task<Results<Ok, BadRequest>> DisableInviteCodesAsync ([FromBody] List<string>? codes = default, [FromBody] List<string>? accounts = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Re-enable an account's ability to receive invite codes.
        /// </summary>
        /// <param name="account"></param>
        /// <param name="note">Optional reason for enabled invites.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/com.atproto.admin.enableAccountInvites")]
        public abstract Task<Results<Ok, BadRequest>> EnableAccountInvitesAsync ([FromBody] FishyFlip.Models.ATDid account, [FromBody] string? note = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get details about an account.
        /// </summary>
        /// <param name="did"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.AccountView"/></returns>
        [HttpGet("/xrpc/com.atproto.admin.getAccountInfo")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Atproto.Admin.AccountView>, BadRequest>> GetAccountInfoAsync ([FromQuery] FishyFlip.Models.ATDid did, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get details about some accounts.
        /// </summary>
        /// <param name="dids"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.GetAccountInfosOutput"/></returns>
        [HttpGet("/xrpc/com.atproto.admin.getAccountInfos")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Atproto.Admin.GetAccountInfosOutput>, BadRequest>> GetAccountInfosAsync ([FromQuery] List<FishyFlip.Models.ATDid> dids, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get an admin view of invite codes.
        /// </summary>
        /// <param name="sort"></param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.GetInviteCodesOutput"/></returns>
        [HttpGet("/xrpc/com.atproto.admin.getInviteCodes")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Atproto.Admin.GetInviteCodesOutput>, BadRequest>> GetInviteCodesAsync ([FromQuery] string? sort = default, [FromQuery] int? limit = 100, [FromQuery] string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get the service-specific admin status of a subject (account, record, or blob).
        /// </summary>
        /// <param name="did"></param>
        /// <param name="uri"></param>
        /// <param name="blob"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.GetSubjectStatusOutput"/></returns>
        [HttpGet("/xrpc/com.atproto.admin.getSubjectStatus")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Atproto.Admin.GetSubjectStatusOutput>, BadRequest>> GetSubjectStatusAsync ([FromQuery] FishyFlip.Models.ATDid? did = default, [FromQuery] FishyFlip.Models.ATUri? uri = default, [FromQuery] string? blob = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get list of accounts that matches your search query.
        /// </summary>
        /// <param name="email"></param>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.SearchAccountsOutput"/></returns>
        [HttpGet("/xrpc/com.atproto.admin.searchAccounts")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Atproto.Admin.SearchAccountsOutput>, BadRequest>> SearchAccountsAsync ([FromQuery] string? email = default, [FromQuery] string? cursor = default, [FromQuery] int? limit = 50, CancellationToken cancellationToken = default);

        /// <summary>
        /// Send email to a user's account email address.
        /// </summary>
        /// <param name="recipientDid"></param>
        /// <param name="content"></param>
        /// <param name="senderDid"></param>
        /// <param name="subject"></param>
        /// <param name="comment">Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.SendEmailOutput"/></returns>
        [HttpPost("/xrpc/com.atproto.admin.sendEmail")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Atproto.Admin.SendEmailOutput>, BadRequest>> SendEmailAsync ([FromBody] FishyFlip.Models.ATDid recipientDid, [FromBody] string content, [FromBody] FishyFlip.Models.ATDid senderDid, [FromBody] string? subject = default, [FromBody] string? comment = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Administrative action to update an account's email.
        /// </summary>
        /// <param name="account">The handle or DID of the repo.</param>
        /// <param name="email"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/com.atproto.admin.updateAccountEmail")]
        public abstract Task<Results<Ok, BadRequest>> UpdateAccountEmailAsync ([FromBody] FishyFlip.Models.ATIdentifier account, [FromBody] string email, CancellationToken cancellationToken = default);

        /// <summary>
        /// Administrative action to update an account's handle.
        /// </summary>
        /// <param name="did"></param>
        /// <param name="handle"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/com.atproto.admin.updateAccountHandle")]
        public abstract Task<Results<Ok, BadRequest>> UpdateAccountHandleAsync ([FromBody] FishyFlip.Models.ATDid did, [FromBody] FishyFlip.Models.ATHandle handle, CancellationToken cancellationToken = default);

        /// <summary>
        /// Update the password for a user account as an administrator.
        /// </summary>
        /// <param name="did"></param>
        /// <param name="password"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/com.atproto.admin.updateAccountPassword")]
        public abstract Task<Results<Ok, BadRequest>> UpdateAccountPasswordAsync ([FromBody] FishyFlip.Models.ATDid did, [FromBody] string password, CancellationToken cancellationToken = default);

        /// <summary>
        /// Administrative action to update an account's signing key in their Did document.
        /// </summary>
        /// <param name="did"></param>
        /// <param name="signingKey">Did-key formatted public key</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/com.atproto.admin.updateAccountSigningKey")]
        public abstract Task<Results<Ok, BadRequest>> UpdateAccountSigningKeyAsync ([FromBody] FishyFlip.Models.ATDid did, [FromBody] FishyFlip.Models.ATDid signingKey, CancellationToken cancellationToken = default);

        /// <summary>
        /// Update the service-specific admin status of a subject (account, record, or blob).
        /// </summary>
        /// <param name="subject">
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.RepoRef"/> (com.atproto.admin.defs#repoRef) <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef) <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.RepoBlobRef"/> (com.atproto.admin.defs#repoBlobRef) <br/>
        /// </param>
        /// <param name="takedown"></param>
        /// <param name="deactivated"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.UpdateSubjectStatusOutput"/></returns>
        [HttpPost("/xrpc/com.atproto.admin.updateSubjectStatus")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Atproto.Admin.UpdateSubjectStatusOutput>, BadRequest>> UpdateSubjectStatusAsync ([FromBody] ATObject subject, [FromBody] FishyFlip.Lexicon.Com.Atproto.Admin.StatusAttr? takedown = default, [FromBody] FishyFlip.Lexicon.Com.Atproto.Admin.StatusAttr? deactivated = default, CancellationToken cancellationToken = default);
    }
}

