// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Xrpc.Lexicon.Com.Whtwnd.Blog
{

    /// <summary>
    /// com.whtwnd.blog XRPC Group.
    /// </summary>
    [ApiController]
    public abstract class BlogController : ControllerBase
    {

        /// <summary>
        /// Get blog posts associated to designated author.
        /// </summary>
        /// <param name="author"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Whtwnd.Blog.GetAuthorPostsOutput"/></returns>
        [HttpGet("/xrpc/com.whtwnd.blog.getAuthorPosts")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Whtwnd.Blog.GetAuthorPostsOutput>, ATErrorResult>> GetAuthorPostsAsync ([FromQuery] FishyFlip.Models.ATDid author, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get AT URI by blog author and entry name. If there are multiple blog entries associated with the name, return the latest one.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.NotFoundError"/> If the associated name isn't registered in the author's repo, this error is returned <br/>
        /// </summary>
        /// <param name="author"></param>
        /// <param name="entryTitle"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Whtwnd.Blog.GetEntryMetadataByNameOutput"/></returns>
        [HttpGet("/xrpc/com.whtwnd.blog.getEntryMetadataByName")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Whtwnd.Blog.GetEntryMetadataByNameOutput>, ATErrorResult>> GetEntryMetadataByNameAsync ([FromQuery] FishyFlip.Models.ATIdentifier author, [FromQuery] string entryTitle, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get comments associated to designated post.
        /// </summary>
        /// <param name="postUri"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Whtwnd.Blog.GetMentionsByEntryOutput"/></returns>
        [HttpGet("/xrpc/com.whtwnd.blog.getMentionsByEntry")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Whtwnd.Blog.GetMentionsByEntryOutput>, ATErrorResult>> GetMentionsByEntryAsync ([FromQuery] FishyFlip.Models.ATUri postUri, CancellationToken cancellationToken = default);

        /// <summary>
        /// Notify AppView of existence of new entry and request indexing
        /// </summary>
        /// <param name="entryUri"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Whtwnd.Blog.NotifyOfNewEntryOutput"/></returns>
        [HttpPost("/xrpc/com.whtwnd.blog.notifyOfNewEntry")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Com.Whtwnd.Blog.NotifyOfNewEntryOutput>, ATErrorResult>> NotifyOfNewEntryAsync ([FromBody] FishyFlip.Models.ATUri entryUri, CancellationToken cancellationToken = default);
    }
}

