// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Xrpc.Lexicon.Blue.Moji.Collection
{

    /// <summary>
    /// blue.moji.collection XRPC Group.
    /// </summary>
    [ApiController]
    public abstract class CollectionController : ControllerBase
    {

        /// <summary>
        /// Get a single emoji from a repository. Requires auth.
        /// </summary>
        /// <param name="repo">The handle or DID of the repo.</param>
        /// <param name="name">The Bluemoji alias/rkey.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.GetItemOutput"/></returns>
        [HttpGet("/xrpc/blue.moji.collection.getItem")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Blue.Moji.Collection.GetItemOutput>, BadRequest>> GetItemAsync ([FromQuery] FishyFlip.Models.ATIdentifier repo, [FromQuery] string name, CancellationToken cancellationToken = default);

        /// <summary>
        /// List a range of Bluemoji in a repository, matching a specific collection. Requires auth.
        /// </summary>
        /// <param name="limit">The number of records to return.</param>
        /// <param name="cursor"></param>
        /// <param name="reverse">Flag to reverse the order of the returned records.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.ListCollectionOutput"/></returns>
        [HttpGet("/xrpc/blue.moji.collection.listCollection")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Blue.Moji.Collection.ListCollectionOutput>, BadRequest>> ListCollectionAsync ([FromQuery] int? limit = 50, [FromQuery] string? cursor = default, [FromQuery] bool? reverse = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Write a Bluemoji record, creating or updating it as needed. Requires auth, implemented by AppView.
        /// </summary>
        /// <param name="repo">The handle or DID of the repo (aka, current account).</param>
        /// <param name="item"></param>
        /// <param name="validate">Can be set to 'false' to skip Lexicon schema validation of record data.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.PutItemOutput"/></returns>
        [HttpPost("/xrpc/blue.moji.collection.putItem")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Blue.Moji.Collection.PutItemOutput>, BadRequest>> PutItemAsync ([FromBody] FishyFlip.Models.ATIdentifier repo, [FromBody] FishyFlip.Lexicon.Blue.Moji.Collection.ItemView item, [FromBody] bool? validate = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Copy a single emoji from another repo. Requires auth.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.EmojiNotFoundError"/> Indicates the named Bluemoji was not found in the source repo. <br/>
        /// <see cref="FishyFlip.Lexicon.DestinationExistsError"/> Indicates another Bluemoji with the same name already exists in the source repo. Set renameTo to rename. <br/>
        /// </summary>
        /// <param name="source">The handle or DID of the repo to copy from.</param>
        /// <param name="name">The source Bluemoji name/rkey.</param>
        /// <param name="renameTo">The alias to save the Bluemoji to in the current logged-in user's repo.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.SaveToCollectionOutput"/></returns>
        [HttpPost("/xrpc/blue.moji.collection.saveToCollection")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Blue.Moji.Collection.SaveToCollectionOutput>, BadRequest>> SaveToCollectionAsync ([FromBody] FishyFlip.Models.ATIdentifier source, [FromBody] string name, [FromBody] string? renameTo = default, CancellationToken cancellationToken = default);
    }
}

