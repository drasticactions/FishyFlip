// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Xrpc.Lexicon.Buzz.Bookhive
{

    /// <summary>
    /// buzz.bookhive XRPC Group.
    /// </summary>
    [ApiController]
    public abstract class BookhiveController : ControllerBase
    {

        /// <summary>
        /// Get a book's info. Requires authentication.
        /// </summary>
        /// <param name="id">The book's hive ID</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Buzz.Bookhive.GetBookOutput"/></returns>
        [HttpGet("/xrpc/buzz.bookhive.getBook")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Buzz.Bookhive.GetBookOutput>, ATErrorResult>> GetBookAsync ([FromQuery] string id, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a profile's info. Does not require authentication.
        /// </summary>
        /// <param name="did">The user's DID to get the profile of</param>
        /// <param name="handle">The user's handle to get the profile of</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Buzz.Bookhive.GetProfileOutput"/></returns>
        [HttpGet("/xrpc/buzz.bookhive.getProfile")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Buzz.Bookhive.GetProfileOutput>, ATErrorResult>> GetProfileAsync ([FromQuery] string? did = default, [FromQuery] string? handle = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Find books matching the search criteria. Requires authentication.
        /// </summary>
        /// <param name="q">Search query string. Will be matched against title and authors fields.</param>
        /// <param name="limit"></param>
        /// <param name="offset">Offset for pagination into the result set</param>
        /// <param name="id">The ID of the book within the hive.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Buzz.Bookhive.SearchBooksOutput"/></returns>
        [HttpGet("/xrpc/buzz.bookhive.searchBooks")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.Buzz.Bookhive.SearchBooksOutput>, ATErrorResult>> SearchBooksAsync ([FromQuery] string q, [FromQuery] int? limit = 25, [FromQuery] int? offset = 0, [FromQuery] string? id = default, CancellationToken cancellationToken = default);
    }
}

