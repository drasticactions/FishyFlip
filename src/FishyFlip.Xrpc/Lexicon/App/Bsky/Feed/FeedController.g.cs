// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Xrpc.Lexicon.App.Bsky.Feed
{

    /// <summary>
    /// app.bsky.feed XRPC Group.
    /// </summary>
    [ApiController]
    public abstract class FeedController : ControllerBase
    {

        /// <summary>
        /// Get information about a feed generator, including policies and offered feed URIs. Does not require auth; implemented by Feed Generator services (not App View).
        /// </summary>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.DescribeFeedGeneratorOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.describeFeedGenerator")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.DescribeFeedGeneratorOutput>, BadRequest>> DescribeFeedGeneratorAsync (CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of feeds (feed generator records) created by the actor (in the actor's repo).
        /// </summary>
        /// <param name="actor"></param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetActorFeedsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getActorFeeds")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetActorFeedsOutput>, BadRequest>> GetActorFeedsAsync (FishyFlip.Models.ATIdentifier actor, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of posts liked by an actor. Requires auth, actor must be the requesting account.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BlockedActorError"/>  <br/>
        /// <see cref="FishyFlip.Lexicon.BlockedByActorError"/>  <br/>
        /// </summary>
        /// <param name="actor"></param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetActorLikesOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getActorLikes")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetActorLikesOutput>, BadRequest>> GetActorLikesAsync (FishyFlip.Models.ATIdentifier actor, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a view of an actor's 'author feed' (post and reposts by the author). Does not require auth.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BlockedActorError"/>  <br/>
        /// <see cref="FishyFlip.Lexicon.BlockedByActorError"/>  <br/>
        /// </summary>
        /// <param name="actor"></param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="filter">Combinations of post/repost types to include in response.</param>
        /// <param name="includePins"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetAuthorFeedOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getAuthorFeed")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetAuthorFeedOutput>, BadRequest>> GetAuthorFeedAsync (FishyFlip.Models.ATIdentifier actor, int? limit = 50, string? cursor = default, string? filter = default, bool? includePins = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a hydrated feed from an actor's selected feed generator. Implemented by App View.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.UnknownFeedError"/>  <br/>
        /// </summary>
        /// <param name="feed"></param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetFeedOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getFeed")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetFeedOutput>, BadRequest>> GetFeedAsync (FishyFlip.Models.ATUri feed, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get information about a feed generator. Implemented by AppView.
        /// </summary>
        /// <param name="feed">AT-URI of the feed generator record.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetFeedGeneratorOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getFeedGenerator")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetFeedGeneratorOutput>, BadRequest>> GetFeedGeneratorAsync (FishyFlip.Models.ATUri feed, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get information about a list of feed generators.
        /// </summary>
        /// <param name="feeds"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetFeedGeneratorsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getFeedGenerators")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetFeedGeneratorsOutput>, BadRequest>> GetFeedGeneratorsAsync (List<FishyFlip.Models.ATUri> feeds, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a skeleton of a feed provided by a feed generator. Auth is optional, depending on provider requirements, and provides the DID of the requester. Implemented by Feed Generator Service.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.UnknownFeedError"/>  <br/>
        /// </summary>
        /// <param name="feed">Reference to feed generator record describing the specific feed being requested.</param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetFeedSkeletonOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getFeedSkeleton")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetFeedSkeletonOutput>, BadRequest>> GetFeedSkeletonAsync (FishyFlip.Models.ATUri feed, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get like records which reference a subject (by AT-URI and CID).
        /// </summary>
        /// <param name="uri">AT-URI of the subject (eg, a post record).</param>
        /// <param name="cid">CID of the subject record (aka, specific version of record), to filter likes.</param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetLikesOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getLikes")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetLikesOutput>, BadRequest>> GetLikesAsync (FishyFlip.Models.ATUri uri, string? cid = default, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a feed of recent posts from a list (posts and reposts from any actors on the list). Does not require auth.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.UnknownListError"/>  <br/>
        /// </summary>
        /// <param name="list">Reference (AT-URI) to the list record.</param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetListFeedOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getListFeed")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetListFeedOutput>, BadRequest>> GetListFeedAsync (FishyFlip.Models.ATUri list, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets post views for a specified list of posts (by AT-URI). This is sometimes referred to as 'hydrating' a 'feed skeleton'.
        /// </summary>
        /// <param name="uris">List of post AT-URIs to return hydrated views for.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetPostsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getPosts")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetPostsOutput>, BadRequest>> GetPostsAsync (List<FishyFlip.Models.ATUri> uris, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get posts in a thread. Does not require auth, but additional metadata and filtering will be applied for authed requests.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.NotFoundError"/>  <br/>
        /// </summary>
        /// <param name="uri">Reference (AT-URI) to post record.</param>
        /// <param name="depth">How many levels of reply depth should be included in response.</param>
        /// <param name="parentHeight">How many levels of parent (and grandparent, etc) post to include.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetPostThreadOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getPostThread")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetPostThreadOutput>, BadRequest>> GetPostThreadAsync (FishyFlip.Models.ATUri uri, int? depth = 6, int? parentHeight = 80, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of quotes for a given post.
        /// </summary>
        /// <param name="uri">Reference (AT-URI) of post record</param>
        /// <param name="cid">If supplied, filters to quotes of specific version (by CID) of the post record.</param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetQuotesOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getQuotes")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetQuotesOutput>, BadRequest>> GetQuotesAsync (FishyFlip.Models.ATUri uri, string? cid = default, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of reposts for a given post.
        /// </summary>
        /// <param name="uri">Reference (AT-URI) of post record</param>
        /// <param name="cid">If supplied, filters to reposts of specific version (by CID) of the post record.</param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetRepostedByOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getRepostedBy")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetRepostedByOutput>, BadRequest>> GetRepostedByAsync (FishyFlip.Models.ATUri uri, string? cid = default, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of suggested feeds (feed generators) for the requesting account.
        /// </summary>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetSuggestedFeedsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getSuggestedFeeds")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetSuggestedFeedsOutput>, BadRequest>> GetSuggestedFeedsAsync (int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a view of the requesting account's home timeline. This is expected to be some form of reverse-chronological feed.
        /// </summary>
        /// <param name="algorithm">Variant 'algorithm' for timeline. Implementation-specific. NOTE: most feed flexibility has been moved to feed generator mechanism.</param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.GetTimelineOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.getTimeline")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.GetTimelineOutput>, BadRequest>> GetTimelineAsync (string? algorithm = default, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Find posts matching search criteria, returning views of those posts.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BadQueryStringError"/>  <br/>
        /// </summary>
        /// <param name="q">Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.</param>
        /// <param name="sort">Specifies the ranking order of results.</param>
        /// <param name="since">Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).</param>
        /// <param name="until">Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).</param>
        /// <param name="mentions">Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.</param>
        /// <param name="author">Filter to posts by the given account. Handles are resolved to DID before query-time.</param>
        /// <param name="lang">Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.</param>
        /// <param name="domain">Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.</param>
        /// <param name="url">Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.</param>
        /// <param name="tag">Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.</param>
        /// <param name="limit"></param>
        /// <param name="cursor">Optional pagination mechanism; may not necessarily allow scrolling through entire result set.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.SearchPostsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.feed.searchPosts")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.SearchPostsOutput>, BadRequest>> SearchPostsAsync (string q, string? sort = default, string? since = default, string? until = default, FishyFlip.Models.ATIdentifier? mentions = default, FishyFlip.Models.ATIdentifier? author = default, string? lang = default, string? domain = default, string? url = default, List<string>? tag = default, int? limit = 25, string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Send information about interactions with feed items back to the feed generator that served them.
        /// </summary>
        /// <param name="interactions"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Feed.SendInteractionsOutput"/></returns>
        [HttpPost("/xrpc/app.bsky.feed.sendInteractions")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Feed.SendInteractionsOutput>, BadRequest>> SendInteractionsAsync (List<FishyFlip.Lexicon.App.Bsky.Feed.Interaction> interactions, CancellationToken cancellationToken = default);
    }
}

