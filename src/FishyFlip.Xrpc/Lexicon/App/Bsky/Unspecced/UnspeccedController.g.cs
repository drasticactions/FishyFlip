// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Xrpc.Lexicon.App.Bsky.Unspecced
{

    /// <summary>
    /// app.bsky.unspecced XRPC Group.
    /// </summary>
    [ApiController]
    public abstract class UnspeccedController : ControllerBase
    {

        /// <summary>
        /// Get miscellaneous runtime configuration.
        /// </summary>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetConfigOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getConfig")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetConfigOutput>, BadRequest>> GetConfigAsync (CancellationToken cancellationToken = default);

        /// <summary>
        /// An unspecced view of globally popular feed generators.
        /// </summary>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="query"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetPopularFeedGeneratorsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getPopularFeedGenerators")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetPopularFeedGeneratorsOutput>, BadRequest>> GetPopularFeedGeneratorsAsync ([FromQuery] int? limit = 50, [FromQuery] string? cursor = default, [FromQuery] string? query = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of suggested feeds
        /// </summary>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedFeedsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getSuggestedFeeds")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedFeedsOutput>, BadRequest>> GetSuggestedFeedsAsync ([FromQuery] int? limit = 10, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a skeleton of suggested feeds. Intended to be called and hydrated by app.bsky.unspecced.getSuggestedFeeds
        /// </summary>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries).</param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedFeedsSkeletonOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getSuggestedFeedsSkeleton")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedFeedsSkeletonOutput>, BadRequest>> GetSuggestedFeedsSkeletonAsync ([FromQuery] FishyFlip.Models.ATDid? viewer = default, [FromQuery] int? limit = 10, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of suggested starterpacks
        /// </summary>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedStarterPacksOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getSuggestedStarterPacks")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedStarterPacksOutput>, BadRequest>> GetSuggestedStarterPacksAsync ([FromQuery] int? limit = 10, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a skeleton of suggested starterpacks. Intended to be called and hydrated by app.bsky.unspecced.getSuggestedStarterpacks
        /// </summary>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries).</param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedStarterPacksSkeletonOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getSuggestedStarterPacksSkeleton")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedStarterPacksSkeletonOutput>, BadRequest>> GetSuggestedStarterPacksSkeletonAsync ([FromQuery] FishyFlip.Models.ATDid? viewer = default, [FromQuery] int? limit = 10, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of suggested users
        /// </summary>
        /// <param name="category">Category of users to get suggestions for.</param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedUsersOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getSuggestedUsers")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedUsersOutput>, BadRequest>> GetSuggestedUsersAsync ([FromQuery] string? category = default, [FromQuery] int? limit = 25, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a skeleton of suggested users. Intended to be called and hydrated by app.bsky.unspecced.getSuggestedUsers
        /// </summary>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries).</param>
        /// <param name="category">Category of users to get suggestions for.</param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedUsersSkeletonOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getSuggestedUsersSkeleton")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestedUsersSkeletonOutput>, BadRequest>> GetSuggestedUsersSkeletonAsync ([FromQuery] FishyFlip.Models.ATDid? viewer = default, [FromQuery] string? category = default, [FromQuery] int? limit = 25, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a skeleton of suggested actors. Intended to be called and then hydrated through app.bsky.actor.getSuggestions
        /// </summary>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.</param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="relativeToDid">DID of the account to get suggestions relative to. If not provided, suggestions will be based on the viewer.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestionsSkeletonOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getSuggestionsSkeleton")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestionsSkeletonOutput>, BadRequest>> GetSuggestionsSkeletonAsync ([FromQuery] FishyFlip.Models.ATDid? viewer = default, [FromQuery] int? limit = 50, [FromQuery] string? cursor = default, [FromQuery] FishyFlip.Models.ATDid? relativeToDid = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of suggestions (feeds and users) tagged with categories
        /// </summary>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetTaggedSuggestionsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getTaggedSuggestions")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetTaggedSuggestionsOutput>, BadRequest>> GetTaggedSuggestionsAsync (CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of trending topics
        /// </summary>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.</param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetTrendingTopicsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getTrendingTopics")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetTrendingTopicsOutput>, BadRequest>> GetTrendingTopicsAsync ([FromQuery] FishyFlip.Models.ATDid? viewer = default, [FromQuery] int? limit = 10, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get the current trends on the network
        /// </summary>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetTrendsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getTrends")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetTrendsOutput>, BadRequest>> GetTrendsAsync ([FromQuery] int? limit = 10, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get the skeleton of trends on the network. Intended to be called and then hydrated through app.bsky.unspecced.getTrends
        /// </summary>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries).</param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.GetTrendsSkeletonOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.getTrendsSkeleton")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.GetTrendsSkeletonOutput>, BadRequest>> GetTrendsSkeletonAsync ([FromQuery] FishyFlip.Models.ATDid? viewer = default, [FromQuery] int? limit = 10, CancellationToken cancellationToken = default);

        /// <summary>
        /// Backend Actors (profile) search, returns only skeleton.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BadQueryStringError"/>  <br/>
        /// </summary>
        /// <param name="q">Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax.</param>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.</param>
        /// <param name="typeahead">If true, acts as fast/simple 'typeahead' query.</param>
        /// <param name="limit"></param>
        /// <param name="cursor">Optional pagination mechanism; may not necessarily allow scrolling through entire result set.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.SearchActorsSkeletonOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.searchActorsSkeleton")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.SearchActorsSkeletonOutput>, BadRequest>> SearchActorsSkeletonAsync ([FromQuery] string q, [FromQuery] FishyFlip.Models.ATDid? viewer = default, [FromQuery] bool? typeahead = default, [FromQuery] int? limit = 25, [FromQuery] string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Backend Posts search, returns only skeleton
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BadQueryStringError"/>  <br/>
        /// </summary>
        /// <param name="q">Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.</param>
        /// <param name="sort">Specifies the ranking order of results.</param>
        /// <param name="since">Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).</param>
        /// <param name="until">Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).</param>
        /// <param name="mentions">Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.</param>
        /// <param name="author">Filter to posts by the given account. Handles are resolved to DID before query-time.</param>
        /// <param name="lang">Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.</param>
        /// <param name="domain">Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.</param>
        /// <param name="url">Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.</param>
        /// <param name="tag">Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.</param>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used for 'from:me' queries.</param>
        /// <param name="limit"></param>
        /// <param name="cursor">Optional pagination mechanism; may not necessarily allow scrolling through entire result set.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.SearchPostsSkeletonOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.searchPostsSkeleton")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.SearchPostsSkeletonOutput>, BadRequest>> SearchPostsSkeletonAsync ([FromQuery] string q, [FromQuery] string? sort = default, [FromQuery] string? since = default, [FromQuery] string? until = default, [FromQuery] FishyFlip.Models.ATIdentifier? mentions = default, [FromQuery] FishyFlip.Models.ATIdentifier? author = default, [FromQuery] string? lang = default, [FromQuery] string? domain = default, [FromQuery] string? url = default, [FromQuery] List<string>? tag = default, [FromQuery] FishyFlip.Models.ATDid? viewer = default, [FromQuery] int? limit = 25, [FromQuery] string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Backend Starter Pack search, returns only skeleton.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BadQueryStringError"/>  <br/>
        /// </summary>
        /// <param name="q">Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.</param>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries).</param>
        /// <param name="limit"></param>
        /// <param name="cursor">Optional pagination mechanism; may not necessarily allow scrolling through entire result set.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Unspecced.SearchStarterPacksSkeletonOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.unspecced.searchStarterPacksSkeleton")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Unspecced.SearchStarterPacksSkeletonOutput>, BadRequest>> SearchStarterPacksSkeletonAsync ([FromQuery] string q, [FromQuery] FishyFlip.Models.ATDid? viewer = default, [FromQuery] int? limit = 25, [FromQuery] string? cursor = default, CancellationToken cancellationToken = default);
    }
}

