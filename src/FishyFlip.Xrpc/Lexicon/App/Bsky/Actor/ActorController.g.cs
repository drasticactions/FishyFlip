// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Xrpc.Lexicon.App.Bsky.Actor
{

    /// <summary>
    /// app.bsky.actor XRPC Group.
    /// </summary>
    [ApiController]
    public abstract class ActorController : ControllerBase
    {

        /// <summary>
        /// Get private preferences attached to the current account. Expected use is synchronization between multiple devices, and import/export during account migration. Requires auth.
        /// </summary>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Actor.GetPreferencesOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.actor.getPreferences")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Actor.GetPreferencesOutput>, ATErrorResult>> GetPreferencesAsync (CancellationToken cancellationToken = default);

        /// <summary>
        /// Get detailed profile view of an actor. Does not require auth, but contains relevant metadata with auth.
        /// </summary>
        /// <param name="actor">Handle or DID of account to fetch profile of.</param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewDetailed"/></returns>
        [HttpGet("/xrpc/app.bsky.actor.getProfile")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewDetailed>, ATErrorResult>> GetProfileAsync ([FromQuery] FishyFlip.Models.ATIdentifier actor, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get detailed profile views of multiple actors.
        /// </summary>
        /// <param name="actors"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Actor.GetProfilesOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.actor.getProfiles")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Actor.GetProfilesOutput>, ATErrorResult>> GetProfilesAsync ([FromQuery] List<FishyFlip.Models.ATIdentifier> actors, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get a list of suggested actors. Expected use is discovery of accounts to follow during new account onboarding.
        /// </summary>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Actor.GetSuggestionsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.actor.getSuggestions")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Actor.GetSuggestionsOutput>, ATErrorResult>> GetSuggestionsAsync ([FromQuery] int? limit = 50, [FromQuery] string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Set the private preferences attached to the account.
        /// </summary>
        /// <param name="preferences">
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.AdultContentPref"/> (app.bsky.actor.defs#adultContentPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ContentLabelPref"/> (app.bsky.actor.defs#contentLabelPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.SavedFeedsPref"/> (app.bsky.actor.defs#savedFeedsPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.SavedFeedsPrefV2"/> (app.bsky.actor.defs#savedFeedsPrefV2) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.PersonalDetailsPref"/> (app.bsky.actor.defs#personalDetailsPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.FeedViewPref"/> (app.bsky.actor.defs#feedViewPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ThreadViewPref"/> (app.bsky.actor.defs#threadViewPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.InterestsPref"/> (app.bsky.actor.defs#interestsPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.MutedWordsPref"/> (app.bsky.actor.defs#mutedWordsPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.HiddenPostsPref"/> (app.bsky.actor.defs#hiddenPostsPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.BskyAppStatePref"/> (app.bsky.actor.defs#bskyAppStatePref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.LabelersPref"/> (app.bsky.actor.defs#labelersPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.PostInteractionSettingsPref"/> (app.bsky.actor.defs#postInteractionSettingsPref) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.VerificationPrefs"/> (app.bsky.actor.defs#verificationPrefs) <br/>
        /// </param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/app.bsky.actor.putPreferences")]
        public abstract Task<Results<Ok, ATErrorResult>> PutPreferencesAsync ([FromBody] List<ATObject> preferences, CancellationToken cancellationToken = default);

        /// <summary>
        /// Find actors (profiles) matching search criteria. Does not require auth.
        /// </summary>
        /// <param name="q">Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.</param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Actor.SearchActorsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.actor.searchActors")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Actor.SearchActorsOutput>, ATErrorResult>> SearchActorsAsync ([FromQuery] string? q = default, [FromQuery] int? limit = 25, [FromQuery] string? cursor = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Find actor suggestions for a prefix search term. Expected use is for auto-completion during text field entry. Does not require auth.
        /// </summary>
        /// <param name="q">Search query prefix; not a full query string.</param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Actor.SearchActorsTypeaheadOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.actor.searchActorsTypeahead")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Actor.SearchActorsTypeaheadOutput>, ATErrorResult>> SearchActorsTypeaheadAsync ([FromQuery] string? q = default, [FromQuery] int? limit = 10, CancellationToken cancellationToken = default);
    }
}

