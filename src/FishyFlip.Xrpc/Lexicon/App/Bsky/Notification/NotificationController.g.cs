// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Xrpc.Lexicon.App.Bsky.Notification
{

    /// <summary>
    /// app.bsky.notification XRPC Group.
    /// </summary>
    [ApiController]
    public abstract class NotificationController : ControllerBase
    {

        /// <summary>
        /// Count the number of unread notifications for the requesting account. Requires auth.
        /// </summary>
        /// <param name="priority"></param>
        /// <param name="seenAt"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Notification.GetUnreadCountOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.notification.getUnreadCount")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Notification.GetUnreadCountOutput>, BadRequest>> GetUnreadCountAsync ([FromQuery] bool? priority = default, [FromQuery] DateTime? seenAt = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Enumerate notifications for the requesting account. Requires auth.
        /// </summary>
        /// <param name="reasons">Notification reasons to include in response.</param>
        /// <param name="limit"></param>
        /// <param name="priority"></param>
        /// <param name="cursor"></param>
        /// <param name="seenAt"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Notification.ListNotificationsOutput"/></returns>
        [HttpGet("/xrpc/app.bsky.notification.listNotifications")]
        public abstract Task<Results<Ok<FishyFlip.Lexicon.App.Bsky.Notification.ListNotificationsOutput>, BadRequest>> ListNotificationsAsync ([FromQuery] List<string>? reasons = default, [FromQuery] int? limit = 50, [FromQuery] bool? priority = default, [FromQuery] string? cursor = default, [FromQuery] DateTime? seenAt = default, CancellationToken cancellationToken = default);

        /// <summary>
        /// Set notification-related preferences for an account. Requires auth.
        /// </summary>
        /// <param name="priority"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/app.bsky.notification.putPreferences")]
        public abstract Task<Results<Ok, BadRequest>> PutPreferencesAsync ([FromBody] bool priority, CancellationToken cancellationToken = default);

        /// <summary>
        /// Register to receive push notifications, via a specified service, for the requesting account. Requires auth.
        /// </summary>
        /// <param name="serviceDid"></param>
        /// <param name="token"></param>
        /// <param name="platform"></param>
        /// <param name="appId"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/app.bsky.notification.registerPush")]
        public abstract Task<Results<Ok, BadRequest>> RegisterPushAsync ([FromBody] FishyFlip.Models.ATDid serviceDid, [FromBody] string token, [FromBody] string platform, [FromBody] string appId, CancellationToken cancellationToken = default);

        /// <summary>
        /// Notify server that the requesting account has seen notifications. Requires auth.
        /// </summary>
        /// <param name="seenAt"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success"/></returns>
        [HttpPost("/xrpc/app.bsky.notification.updateSeen")]
        public abstract Task<Results<Ok, BadRequest>> UpdateSeenAsync ([FromBody] DateTime seenAt, CancellationToken cancellationToken = default);
    }
}

