// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Community.Lexicon.Bookmarks
{
    /// <summary>
    /// Record bookmarking a link to come back to later.
    /// </summary>
    public partial class Bookmark : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Bookmark"/> class.
        /// </summary>
        /// <param name="subject"></param>
        /// <param name="createdAt"></param>
        /// <param name="tags">Tags for content the bookmark may be related to, for example 'news' or 'funny videos'</param>
        public Bookmark(string? subject, DateTime? createdAt = default, List<string>? tags = default)
        {
            this.Subject = subject;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.Tags = tags;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bookmark"/> class.
        /// </summary>
        public Bookmark()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bookmark"/> class.
        /// </summary>
        public Bookmark(CBORObject obj)
        {
            if (obj["subject"] is not null) this.Subject = obj["subject"].AsString();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["tags"] is not null) this.Tags = obj["tags"].Values.Select(n =>n.AsString()).ToList();
        }

        /// <summary>
        /// Gets or sets the subject.
        /// </summary>
        [JsonPropertyName("subject")]
        public string? Subject { get; set; }

        /// <summary>
        /// Gets or sets the createdAt.
        /// </summary>
        [JsonPropertyName("createdAt")]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the tags.
        /// <br/> Tags for content the bookmark may be related to, for example 'news' or 'funny videos'
        /// </summary>
        [JsonPropertyName("tags")]
        public List<string>? Tags { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "community.lexicon.bookmarks.bookmark";

        public const string RecordType = "community.lexicon.bookmarks.bookmark";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<FishyFlip.Lexicon.Community.Lexicon.Bookmarks.Bookmark>(this, (JsonTypeInfo<FishyFlip.Lexicon.Community.Lexicon.Bookmarks.Bookmark>)SourceGenerationContext.Default.CommunityLexiconBookmarksBookmark)!;
        }

        public static Bookmark FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Community.Lexicon.Bookmarks.Bookmark>(json, (JsonTypeInfo<FishyFlip.Lexicon.Community.Lexicon.Bookmarks.Bookmark>)SourceGenerationContext.Default.CommunityLexiconBookmarksBookmark)!;
        }
    }
}

