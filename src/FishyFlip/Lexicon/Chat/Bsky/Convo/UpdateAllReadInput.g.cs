// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Chat.Bsky.Convo
{
    public partial class UpdateAllReadInput : ATObject, ICBOREncodable<UpdateAllReadInput>, IJsonEncodable<UpdateAllReadInput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAllReadInput"/> class.
        /// </summary>
        /// <param name="status">
        /// <br/> Known Values: <br/>
        /// request <br/>
        /// accepted <br/>
        /// </param>
        public UpdateAllReadInput(string? status = default)
        {
            this.Status = status;
            this.Type = "chat.bsky.convo.updateAllRead#UpdateAllReadInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAllReadInput"/> class.
        /// </summary>
        public UpdateAllReadInput()
        {
            this.Type = "chat.bsky.convo.updateAllRead#UpdateAllReadInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAllReadInput"/> class.
        /// </summary>
        public UpdateAllReadInput(CBORObject obj)
        {
            if (obj["status"] is not null) this.Status = obj["status"].AsString();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the status.
        /// <br/> Known Values: <br/>
        /// request <br/>
        /// accepted <br/>
        /// </summary>
        [JsonPropertyName("status")]
        public string? Status { get; set; }

        public const string RecordType = "chat.bsky.convo.updateAllRead#UpdateAllReadInput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateAllReadInput>)SourceGenerationContext.Default.ChatBskyConvoUpdateAllReadInput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateAllReadInput>)SourceGenerationContext.Default.ChatBskyConvoUpdateAllReadInput);
        }

        public static new UpdateAllReadInput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateAllReadInput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateAllReadInput>)SourceGenerationContext.Default.ChatBskyConvoUpdateAllReadInput)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new UpdateAllReadInput FromCBORObject(CBORObject obj)
        {
            return new UpdateAllReadInput(obj);
        }

    }
}

