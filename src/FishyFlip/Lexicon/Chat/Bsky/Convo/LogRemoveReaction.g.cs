// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Chat.Bsky.Convo
{
    public partial class LogRemoveReaction : ATObject, ICBOREncodable<LogRemoveReaction>, IJsonEncodable<LogRemoveReaction>, IParsable<LogRemoveReaction>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="LogRemoveReaction"/> class.
        /// </summary>
        /// <param name="rev"></param>
        /// <param name="convoId"></param>
        /// <param name="message">
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.MessageView"/> (chat.bsky.convo.defs#messageView) <br/>
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.DeletedMessageView"/> (chat.bsky.convo.defs#deletedMessageView) <br/>
        /// </param>
        /// <param name="reaction">
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionView"/> (chat.bsky.convo.defs#reactionView)
        /// </param>
        public LogRemoveReaction(string rev = default, string convoId = default, ATObject message = default, FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionView reaction = default)
        {
            this.Rev = rev;
            this.ConvoId = convoId;
            this.Message = message;
            this.Reaction = reaction;
            this.Type = "chat.bsky.convo.defs#logRemoveReaction";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="LogRemoveReaction"/> class.
        /// </summary>
        public LogRemoveReaction()
        {
            this.Type = "chat.bsky.convo.defs#logRemoveReaction";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="LogRemoveReaction"/> class.
        /// </summary>
        public LogRemoveReaction(CBORObject obj)
        {
            if (obj["rev"] is not null) this.Rev = obj["rev"].AsString();
            if (obj["convoId"] is not null) this.ConvoId = obj["convoId"].AsString();
            if (obj["message"] is not null) this.Message = obj["message"].ToATObject();
            if (obj["reaction"] is not null) this.Reaction = new FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionView(obj["reaction"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the rev.
        /// </summary>
        [JsonPropertyName("rev")]
        [JsonRequired]
        public string Rev { get; set; }

        /// <summary>
        /// Gets or sets the convoId.
        /// </summary>
        [JsonPropertyName("convoId")]
        [JsonRequired]
        public string ConvoId { get; set; }

        /// <summary>
        /// Gets or sets the message.
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.MessageView"/> (chat.bsky.convo.defs#messageView) <br/>
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.DeletedMessageView"/> (chat.bsky.convo.defs#deletedMessageView) <br/>
        /// </summary>
        [JsonPropertyName("message")]
        [JsonRequired]
        public ATObject Message { get; set; }

        /// <summary>
        /// Gets or sets the reaction.
        /// <br/> <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionView"/> (chat.bsky.convo.defs#reactionView)
        /// </summary>
        [JsonPropertyName("reaction")]
        [JsonRequired]
        public FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionView Reaction { get; set; }

        public const string RecordType = "chat.bsky.convo.defs#logRemoveReaction";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.LogRemoveReaction>)SourceGenerationContext.Default.ChatBskyConvoLogRemoveReaction);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.LogRemoveReaction>)SourceGenerationContext.Default.ChatBskyConvoLogRemoveReaction);
        }

        public static new LogRemoveReaction FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Chat.Bsky.Convo.LogRemoveReaction>(json, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.LogRemoveReaction>)SourceGenerationContext.Default.ChatBskyConvoLogRemoveReaction)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new LogRemoveReaction FromCBORObject(CBORObject obj)
        {
            return new LogRemoveReaction(obj);
        }

        /// <inheritdoc/>
        public static LogRemoveReaction Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<LogRemoveReaction>(s, (JsonTypeInfo<LogRemoveReaction>)SourceGenerationContext.Default.ChatBskyConvoLogRemoveReaction)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out LogRemoveReaction result)
        {
            result = JsonSerializer.Deserialize<LogRemoveReaction>(s, (JsonTypeInfo<LogRemoveReaction>)SourceGenerationContext.Default.ChatBskyConvoLogRemoveReaction);
            return result != null;
        }
    }
}

