// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Chat.Bsky.Convo
{
    public partial class MessageInput : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageInput"/> class.
        /// </summary>
        /// <param name="text"></param>
        /// <param name="facets">Annotations of text (mentions, URLs, hashtags, etc)</param>
        /// <param name="embed">
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.EmbedRecord"/> (app.bsky.embed.record)
        /// </param>
        public MessageInput(string? text = default, List<App.Bsky.Richtext.Facet>? facets = default, App.Bsky.Embed.EmbedRecord? embed = default)
        {
            this.Text = text;
            this.Facets = facets;
            this.Embed = embed;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="MessageInput"/> class.
        /// </summary>
        public MessageInput()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="MessageInput"/> class.
        /// </summary>
        public MessageInput(CBORObject obj)
        {
            if (obj["text"] is not null) this.Text = obj["text"].AsString();
            if (obj["facets"] is not null) this.Facets = obj["facets"].Values.Select(n =>new App.Bsky.Richtext.Facet(n)).ToList();
            if (obj["embed"] is not null) this.Embed = new App.Bsky.Embed.EmbedRecord(obj["embed"]);
        }

        /// <summary>
        /// Gets or sets the text.
        /// </summary>
        [JsonPropertyName("text")]
        [JsonRequired]
        public string? Text { get; set; }

        /// <summary>
        /// Gets or sets the facets.
        /// Annotations of text (mentions, URLs, hashtags, etc)
        /// </summary>
        [JsonPropertyName("facets")]
        public List<App.Bsky.Richtext.Facet>? Facets { get; set; }

        /// <summary>
        /// Gets or sets the embed.
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.EmbedRecord"/> (app.bsky.embed.record)
        /// </summary>
        [JsonPropertyName("embed")]
        public App.Bsky.Embed.EmbedRecord? Embed { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "chat.bsky.convo.defs#messageInput";

        public const string RecordType = "chat.bsky.convo.defs#messageInput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Chat.Bsky.Convo.MessageInput>(this, (JsonTypeInfo<Chat.Bsky.Convo.MessageInput>)SourceGenerationContext.Default.ChatBskyConvoMessageInput)!;
        }

        public static MessageInput FromJson(string json)
        {
            return JsonSerializer.Deserialize<Chat.Bsky.Convo.MessageInput>(json, (JsonTypeInfo<Chat.Bsky.Convo.MessageInput>)SourceGenerationContext.Default.ChatBskyConvoMessageInput)!;
        }
    }
}

