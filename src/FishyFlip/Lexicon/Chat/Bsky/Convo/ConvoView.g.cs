// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Chat.Bsky.Convo
{
    public partial class ConvoView : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ConvoView"/> class.
        /// </summary>
        /// <param name="id"></param>
        /// <param name="rev"></param>
        /// <param name="members"></param>
        /// <param name="lastMessage">
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.MessageView"/> (chat.bsky.convo.defs#messageView)
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.DeletedMessageView"/> (chat.bsky.convo.defs#deletedMessageView)
        /// </param>
        /// <param name="muted"></param>
        /// <param name="opened"></param>
        /// <param name="unreadCount"></param>
        public ConvoView(string? id = default, string? rev = default, List<Chat.Bsky.Actor.ProfileViewBasic>? members = default, ATObject? lastMessage = default, bool? muted = default, bool? opened = default, long? unreadCount = default)
        {
            this.Id = id;
            this.Rev = rev;
            this.Members = members;
            this.LastMessage = lastMessage;
            this.Muted = muted;
            this.Opened = opened;
            this.UnreadCount = unreadCount;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ConvoView"/> class.
        /// </summary>
        public ConvoView()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ConvoView"/> class.
        /// </summary>
        public ConvoView(CBORObject obj)
        {
            if (obj["id"] is not null) this.Id = obj["id"].AsString();
            if (obj["rev"] is not null) this.Rev = obj["rev"].AsString();
            if (obj["members"] is not null) this.Members = obj["members"].Values.Select(n =>new Chat.Bsky.Actor.ProfileViewBasic(n)).ToList();
            if (obj["lastMessage"] is not null) this.LastMessage = obj["lastMessage"].ToATObject();
            if (obj["muted"] is not null) this.Muted = obj["muted"].AsBoolean();
            if (obj["opened"] is not null) this.Opened = obj["opened"].AsBoolean();
            if (obj["unreadCount"] is not null) this.UnreadCount = obj["unreadCount"].AsInt64Value();
        }

        /// <summary>
        /// Gets or sets the id.
        /// </summary>
        [JsonPropertyName("id")]
        [JsonRequired]
        public string? Id { get; set; }

        /// <summary>
        /// Gets or sets the rev.
        /// </summary>
        [JsonPropertyName("rev")]
        [JsonRequired]
        public string? Rev { get; set; }

        /// <summary>
        /// Gets or sets the members.
        /// </summary>
        [JsonPropertyName("members")]
        [JsonRequired]
        public List<Chat.Bsky.Actor.ProfileViewBasic>? Members { get; set; }

        /// <summary>
        /// Gets or sets the lastMessage.
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.MessageView"/> (chat.bsky.convo.defs#messageView)
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.DeletedMessageView"/> (chat.bsky.convo.defs#deletedMessageView)
        /// </summary>
        [JsonPropertyName("lastMessage")]
        public ATObject? LastMessage { get; set; }

        /// <summary>
        /// Gets or sets the muted.
        /// </summary>
        [JsonPropertyName("muted")]
        [JsonRequired]
        public bool? Muted { get; set; }

        /// <summary>
        /// Gets or sets the opened.
        /// </summary>
        [JsonPropertyName("opened")]
        public bool? Opened { get; set; }

        /// <summary>
        /// Gets or sets the unreadCount.
        /// </summary>
        [JsonPropertyName("unreadCount")]
        [JsonRequired]
        public long? UnreadCount { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "chat.bsky.convo.defs#convoView";

        public const string RecordType = "chat.bsky.convo.defs#convoView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Chat.Bsky.Convo.ConvoView>(this, (JsonTypeInfo<Chat.Bsky.Convo.ConvoView>)SourceGenerationContext.Default.ChatBskyConvoConvoView)!;
        }

        public static ConvoView FromJson(string json)
        {
            return JsonSerializer.Deserialize<Chat.Bsky.Convo.ConvoView>(json, (JsonTypeInfo<Chat.Bsky.Convo.ConvoView>)SourceGenerationContext.Default.ChatBskyConvoConvoView)!;
        }
    }
}

