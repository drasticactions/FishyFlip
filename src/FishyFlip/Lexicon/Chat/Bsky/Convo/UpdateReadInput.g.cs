// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Chat.Bsky.Convo
{
    public partial class UpdateReadInput : ATObject, ICBOREncodable<UpdateReadInput>, IJsonEncodable<UpdateReadInput>, IParsable<UpdateReadInput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateReadInput"/> class.
        /// </summary>
        /// <param name="convoId"></param>
        /// <param name="messageId"></param>
        public UpdateReadInput(string convoId = default, string? messageId = default)
        {
            this.ConvoId = convoId;
            this.MessageId = messageId;
            this.Type = "chat.bsky.convo.updateRead#UpdateReadInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateReadInput"/> class.
        /// </summary>
        public UpdateReadInput()
        {
            this.Type = "chat.bsky.convo.updateRead#UpdateReadInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateReadInput"/> class.
        /// </summary>
        public UpdateReadInput(CBORObject obj)
        {
            if (obj["convoId"] is not null) this.ConvoId = obj["convoId"].AsString();
            if (obj["messageId"] is not null) this.MessageId = obj["messageId"].AsString();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the convoId.
        /// </summary>
        [JsonPropertyName("convoId")]
        [JsonRequired]
        public string ConvoId { get; set; }

        /// <summary>
        /// Gets or sets the messageId.
        /// </summary>
        [JsonPropertyName("messageId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? MessageId { get; set; }

        public const string RecordType = "chat.bsky.convo.updateRead#UpdateReadInput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateReadInput>)SourceGenerationContext.Default.ChatBskyConvoUpdateReadInput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateReadInput>)SourceGenerationContext.Default.ChatBskyConvoUpdateReadInput);
        }

        public static new UpdateReadInput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateReadInput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateReadInput>)SourceGenerationContext.Default.ChatBskyConvoUpdateReadInput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new UpdateReadInput FromCBORObject(CBORObject obj)
        {
            return new UpdateReadInput(obj);
        }

        /// <inheritdoc/>
        public static UpdateReadInput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<UpdateReadInput>(s, (JsonTypeInfo<UpdateReadInput>)SourceGenerationContext.Default.ChatBskyConvoUpdateReadInput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out UpdateReadInput result)
        {
            result = JsonSerializer.Deserialize<UpdateReadInput>(s, (JsonTypeInfo<UpdateReadInput>)SourceGenerationContext.Default.ChatBskyConvoUpdateReadInput);
            return result != null;
        }
    }
}

