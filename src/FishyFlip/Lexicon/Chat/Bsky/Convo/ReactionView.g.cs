// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Chat.Bsky.Convo
{
    public partial class ReactionView : ATObject, ICBOREncodable<ReactionView>, IJsonEncodable<ReactionView>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ReactionView"/> class.
        /// </summary>
        /// <param name="value"></param>
        /// <param name="sender">
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionViewSender"/> (chat.bsky.convo.defs#reactionViewSender)
        /// </param>
        public ReactionView(string value = default, FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionViewSender sender = default)
        {
            this.Value = value;
            this.Sender = sender;
            this.Type = "chat.bsky.convo.defs#reactionView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ReactionView"/> class.
        /// </summary>
        public ReactionView()
        {
            this.Type = "chat.bsky.convo.defs#reactionView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ReactionView"/> class.
        /// </summary>
        public ReactionView(CBORObject obj)
        {
            if (obj["value"] is not null) this.Value = obj["value"].AsString();
            if (obj["sender"] is not null) this.Sender = new FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionViewSender(obj["sender"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the value.
        /// </summary>
        [JsonPropertyName("value")]
        [JsonRequired]
        public string Value { get; set; }

        /// <summary>
        /// Gets or sets the sender.
        /// <br/> <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionViewSender"/> (chat.bsky.convo.defs#reactionViewSender)
        /// </summary>
        [JsonPropertyName("sender")]
        [JsonRequired]
        public FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionViewSender Sender { get; set; }

        public const string RecordType = "chat.bsky.convo.defs#reactionView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionView>)SourceGenerationContext.Default.ChatBskyConvoReactionView);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionView>)SourceGenerationContext.Default.ChatBskyConvoReactionView);
        }

        public static new ReactionView FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionView>(json, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.ReactionView>)SourceGenerationContext.Default.ChatBskyConvoReactionView)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new ReactionView FromCBORObject(CBORObject obj)
        {
            return new ReactionView(obj);
        }

    }
}

