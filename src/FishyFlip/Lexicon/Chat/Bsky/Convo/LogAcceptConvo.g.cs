// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Chat.Bsky.Convo
{
    public partial class LogAcceptConvo : ATObject, ICBOREncodable<LogAcceptConvo>, IJsonEncodable<LogAcceptConvo>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="LogAcceptConvo"/> class.
        /// </summary>
        /// <param name="rev"></param>
        /// <param name="convoId"></param>
        public LogAcceptConvo(string rev = default, string convoId = default)
        {
            this.Rev = rev;
            this.ConvoId = convoId;
            this.Type = "chat.bsky.convo.defs#logAcceptConvo";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="LogAcceptConvo"/> class.
        /// </summary>
        public LogAcceptConvo()
        {
            this.Type = "chat.bsky.convo.defs#logAcceptConvo";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="LogAcceptConvo"/> class.
        /// </summary>
        public LogAcceptConvo(CBORObject obj)
        {
            if (obj["rev"] is not null) this.Rev = obj["rev"].AsString();
            if (obj["convoId"] is not null) this.ConvoId = obj["convoId"].AsString();
        }

        /// <summary>
        /// Gets or sets the rev.
        /// </summary>
        [JsonPropertyName("rev")]
        [JsonRequired]
        public string Rev { get; set; }

        /// <summary>
        /// Gets or sets the convoId.
        /// </summary>
        [JsonPropertyName("convoId")]
        [JsonRequired]
        public string ConvoId { get; set; }

        public const string RecordType = "chat.bsky.convo.defs#logAcceptConvo";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.LogAcceptConvo>)SourceGenerationContext.Default.ChatBskyConvoLogAcceptConvo);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.LogAcceptConvo>)SourceGenerationContext.Default.ChatBskyConvoLogAcceptConvo);
        }

        public static new LogAcceptConvo FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Chat.Bsky.Convo.LogAcceptConvo>(json, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.LogAcceptConvo>)SourceGenerationContext.Default.ChatBskyConvoLogAcceptConvo)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new LogAcceptConvo FromCBORObject(CBORObject obj)
        {
            return new LogAcceptConvo(obj);
        }

    }
}

