// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Chat.Bsky.Convo
{
    public partial class UpdateAllReadOutput : ATObject, ICBOREncodable<UpdateAllReadOutput>, IJsonEncodable<UpdateAllReadOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAllReadOutput"/> class.
        /// </summary>
        /// <param name="updatedCount">The count of updated convos.</param>
        public UpdateAllReadOutput(long updatedCount = default)
        {
            this.UpdatedCount = updatedCount;
            this.Type = "chat.bsky.convo.updateAllRead#UpdateAllReadOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAllReadOutput"/> class.
        /// </summary>
        public UpdateAllReadOutput()
        {
            this.Type = "chat.bsky.convo.updateAllRead#UpdateAllReadOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAllReadOutput"/> class.
        /// </summary>
        public UpdateAllReadOutput(CBORObject obj)
        {
            if (obj["updatedCount"] is not null) this.UpdatedCount = obj["updatedCount"].AsInt64Value();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the updatedCount.
        /// <br/> The count of updated convos.
        /// </summary>
        [JsonPropertyName("updatedCount")]
        [JsonRequired]
        public long UpdatedCount { get; set; }

        public const string RecordType = "chat.bsky.convo.updateAllRead#UpdateAllReadOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateAllReadOutput>)SourceGenerationContext.Default.ChatBskyConvoUpdateAllReadOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateAllReadOutput>)SourceGenerationContext.Default.ChatBskyConvoUpdateAllReadOutput);
        }

        public static new UpdateAllReadOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateAllReadOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Chat.Bsky.Convo.UpdateAllReadOutput>)SourceGenerationContext.Default.ChatBskyConvoUpdateAllReadOutput)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new UpdateAllReadOutput FromCBORObject(CBORObject obj)
        {
            return new UpdateAllReadOutput(obj);
        }

    }
}

