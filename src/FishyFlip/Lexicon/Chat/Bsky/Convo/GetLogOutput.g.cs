// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Chat.Bsky.Convo
{
    public partial class GetLogOutput : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="GetLogOutput"/> class.
        /// </summary>
        /// <param name="cursor"></param>
        /// <param name="logs">
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.LogBeginConvo"/> (chat.bsky.convo.defs#logBeginConvo)
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.LogLeaveConvo"/> (chat.bsky.convo.defs#logLeaveConvo)
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.LogCreateMessage"/> (chat.bsky.convo.defs#logCreateMessage)
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.LogDeleteMessage"/> (chat.bsky.convo.defs#logDeleteMessage)
        /// </param>
        public GetLogOutput(string? cursor = default, List<ATObject>? logs = default)
        {
            this.Cursor = cursor;
            this.Logs = logs;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetLogOutput"/> class.
        /// </summary>
        public GetLogOutput()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetLogOutput"/> class.
        /// </summary>
        public GetLogOutput(CBORObject obj)
        {
            if (obj["cursor"] is not null) this.Cursor = obj["cursor"].AsString();
            if (obj["logs"] is not null) this.Logs = obj["logs"].Values.Select(n =>n.ToATObject()).ToList();
        }

        /// <summary>
        /// Gets or sets the cursor.
        /// </summary>
        [JsonPropertyName("cursor")]
        public string? Cursor { get; set; }

        /// <summary>
        /// Gets or sets the logs.
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.LogBeginConvo"/> (chat.bsky.convo.defs#logBeginConvo)
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.LogLeaveConvo"/> (chat.bsky.convo.defs#logLeaveConvo)
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.LogCreateMessage"/> (chat.bsky.convo.defs#logCreateMessage)
        /// <see cref="FishyFlip.Lexicon.Chat.Bsky.Convo.LogDeleteMessage"/> (chat.bsky.convo.defs#logDeleteMessage)
        /// </summary>
        [JsonPropertyName("logs")]
        [JsonRequired]
        public List<ATObject>? Logs { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "chat.bsky.convo.getLog#GetLogOutput";

        public const string RecordType = "chat.bsky.convo.getLog#GetLogOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Chat.Bsky.Convo.GetLogOutput>(this, (JsonTypeInfo<Chat.Bsky.Convo.GetLogOutput>)SourceGenerationContext.Default.ChatBskyConvoGetLogOutput)!;
        }

        public static GetLogOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<Chat.Bsky.Convo.GetLogOutput>(json, (JsonTypeInfo<Chat.Bsky.Convo.GetLogOutput>)SourceGenerationContext.Default.ChatBskyConvoGetLogOutput)!;
        }
    }
}

