// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Embed
{
    public partial class EmbedImages : ATObject, ICBOREncodable<EmbedImages>, IJsonEncodable<EmbedImages>, IParsable<EmbedImages>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="EmbedImages"/> class.
        /// </summary>
        /// <param name="images"></param>
        public EmbedImages(List<FishyFlip.Lexicon.App.Bsky.Embed.Image> images = default)
        {
            this.Images = images;
            this.Type = "app.bsky.embed.images";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="EmbedImages"/> class.
        /// </summary>
        public EmbedImages()
        {
            this.Type = "app.bsky.embed.images";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="EmbedImages"/> class.
        /// </summary>
        public EmbedImages(CBORObject obj)
        {
            if (obj["images"] is not null) this.Images = obj["images"].Values.Select(n =>new FishyFlip.Lexicon.App.Bsky.Embed.Image(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the images.
        /// </summary>
        [JsonPropertyName("images")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.App.Bsky.Embed.Image> Images { get; set; }

        public const string RecordType = "app.bsky.embed.images";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Embed.EmbedImages>)SourceGenerationContext.Default.AppBskyEmbedEmbedImages);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Embed.EmbedImages>)SourceGenerationContext.Default.AppBskyEmbedEmbedImages);
        }

        public static new EmbedImages FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Embed.EmbedImages>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Embed.EmbedImages>)SourceGenerationContext.Default.AppBskyEmbedEmbedImages)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new EmbedImages FromCBORObject(CBORObject obj)
        {
            return new EmbedImages(obj);
        }

        /// <inheritdoc/>
        public static EmbedImages Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<EmbedImages>(s, (JsonTypeInfo<EmbedImages>)SourceGenerationContext.Default.AppBskyEmbedEmbedImages)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out EmbedImages result)
        {
            result = JsonSerializer.Deserialize<EmbedImages>(s, (JsonTypeInfo<EmbedImages>)SourceGenerationContext.Default.AppBskyEmbedEmbedImages);
            return result != null;
        }
    }
}

