// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.App.Bsky.Embed
{
    public partial class ViewImage : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ViewImage"/> class.
        /// </summary>
        /// <param name="thumb">Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View.</param>
        /// <param name="fullsize">Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View.</param>
        /// <param name="alt">Alt text description of the image, for accessibility.</param>
        /// <param name="aspectRatio">
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.AspectRatio"/> (app.bsky.embed.defs#aspectRatio)
        /// </param>
        public ViewImage(string? thumb = default, string? fullsize = default, string? alt = default, App.Bsky.Embed.AspectRatio? aspectRatio = default)
        {
            this.Thumb = thumb;
            this.Fullsize = fullsize;
            this.Alt = alt;
            this.AspectRatio = aspectRatio;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ViewImage"/> class.
        /// </summary>
        public ViewImage()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ViewImage"/> class.
        /// </summary>
        public ViewImage(CBORObject obj)
        {
            if (obj["thumb"] is not null) this.Thumb = obj["thumb"].AsString();
            if (obj["fullsize"] is not null) this.Fullsize = obj["fullsize"].AsString();
            if (obj["alt"] is not null) this.Alt = obj["alt"].AsString();
            if (obj["aspectRatio"] is not null) this.AspectRatio = new App.Bsky.Embed.AspectRatio(obj["aspectRatio"]);
        }

        /// <summary>
        /// Gets or sets the thumb.
        /// Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View.
        /// </summary>
        [JsonPropertyName("thumb")]
        [JsonRequired]
        public string? Thumb { get; set; }

        /// <summary>
        /// Gets or sets the fullsize.
        /// Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View.
        /// </summary>
        [JsonPropertyName("fullsize")]
        [JsonRequired]
        public string? Fullsize { get; set; }

        /// <summary>
        /// Gets or sets the alt.
        /// Alt text description of the image, for accessibility.
        /// </summary>
        [JsonPropertyName("alt")]
        [JsonRequired]
        public string? Alt { get; set; }

        /// <summary>
        /// Gets or sets the aspectRatio.
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.AspectRatio"/> (app.bsky.embed.defs#aspectRatio)
        /// </summary>
        [JsonPropertyName("aspectRatio")]
        public App.Bsky.Embed.AspectRatio? AspectRatio { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "app.bsky.embed.images#viewImage";

        public const string RecordType = "app.bsky.embed.images#viewImage";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<App.Bsky.Embed.ViewImage>(this, (JsonTypeInfo<App.Bsky.Embed.ViewImage>)SourceGenerationContext.Default.AppBskyEmbedViewImage)!;
        }

        public static ViewImage FromJson(string json)
        {
            return JsonSerializer.Deserialize<App.Bsky.Embed.ViewImage>(json, (JsonTypeInfo<App.Bsky.Embed.ViewImage>)SourceGenerationContext.Default.AppBskyEmbedViewImage)!;
        }
    }
}

