// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.App.Bsky.Embed
{
    public partial class ViewRecord : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ViewRecord"/> class.
        /// </summary>
        /// <param name="uri"></param>
        /// <param name="cid"></param>
        /// <param name="author">
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewBasic"/> (app.bsky.actor.defs#profileViewBasic)
        /// </param>
        /// <param name="value">The record data itself.</param>
        /// <param name="labels"></param>
        /// <param name="replyCount"></param>
        /// <param name="repostCount"></param>
        /// <param name="likeCount"></param>
        /// <param name="quoteCount"></param>
        /// <param name="embeds">
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewImages"/> (app.bsky.embed.images#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewVideo"/> (app.bsky.embed.video#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewExternal"/> (app.bsky.embed.external#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewRecordDef"/> (app.bsky.embed.record#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewRecordWithMedia"/> (app.bsky.embed.recordWithMedia#view)
        /// </param>
        /// <param name="indexedAt"></param>
        public ViewRecord(FishyFlip.Models.ATUri? uri = default, string? cid = default, App.Bsky.Actor.ProfileViewBasic? author = default, ATObject? value = default, List<Com.Atproto.Label.Label>? labels = default, long? replyCount = default, long? repostCount = default, long? likeCount = default, long? quoteCount = default, List<ATObject>? embeds = default, DateTime? indexedAt = default)
        {
            this.Uri = uri;
            this.Cid = cid;
            this.Author = author;
            this.Value = value;
            this.Labels = labels;
            this.ReplyCount = replyCount;
            this.RepostCount = repostCount;
            this.LikeCount = likeCount;
            this.QuoteCount = quoteCount;
            this.Embeds = embeds;
            this.IndexedAt = indexedAt;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ViewRecord"/> class.
        /// </summary>
        public ViewRecord()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ViewRecord"/> class.
        /// </summary>
        public ViewRecord(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["cid"] is not null) this.Cid = obj["cid"].AsString();
            if (obj["author"] is not null) this.Author = new App.Bsky.Actor.ProfileViewBasic(obj["author"]);
            if (obj["value"] is not null) this.Value = obj["value"].ToATObject();
            if (obj["labels"] is not null) this.Labels = obj["labels"].Values.Select(n =>new Com.Atproto.Label.Label(n)).ToList();
            if (obj["replyCount"] is not null) this.ReplyCount = obj["replyCount"].AsInt64Value();
            if (obj["repostCount"] is not null) this.RepostCount = obj["repostCount"].AsInt64Value();
            if (obj["likeCount"] is not null) this.LikeCount = obj["likeCount"].AsInt64Value();
            if (obj["quoteCount"] is not null) this.QuoteCount = obj["quoteCount"].AsInt64Value();
            if (obj["embeds"] is not null) this.Embeds = obj["embeds"].Values.Select(n =>n.ToATObject()).ToList();
            if (obj["indexedAt"] is not null) this.IndexedAt = obj["indexedAt"].ToDateTime();
        }

        /// <summary>
        /// Gets or sets the uri.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri? Uri { get; set; }

        /// <summary>
        /// Gets or sets the cid.
        /// </summary>
        [JsonPropertyName("cid")]
        [JsonRequired]
        public string? Cid { get; set; }

        /// <summary>
        /// Gets or sets the author.
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewBasic"/> (app.bsky.actor.defs#profileViewBasic)
        /// </summary>
        [JsonPropertyName("author")]
        [JsonRequired]
        public App.Bsky.Actor.ProfileViewBasic? Author { get; set; }

        /// <summary>
        /// Gets or sets the value.
        /// The record data itself.
        /// </summary>
        [JsonPropertyName("value")]
        [JsonRequired]
        public ATObject? Value { get; set; }

        /// <summary>
        /// Gets or sets the labels.
        /// </summary>
        [JsonPropertyName("labels")]
        public List<Com.Atproto.Label.Label>? Labels { get; set; }

        /// <summary>
        /// Gets or sets the replyCount.
        /// </summary>
        [JsonPropertyName("replyCount")]
        public long? ReplyCount { get; set; }

        /// <summary>
        /// Gets or sets the repostCount.
        /// </summary>
        [JsonPropertyName("repostCount")]
        public long? RepostCount { get; set; }

        /// <summary>
        /// Gets or sets the likeCount.
        /// </summary>
        [JsonPropertyName("likeCount")]
        public long? LikeCount { get; set; }

        /// <summary>
        /// Gets or sets the quoteCount.
        /// </summary>
        [JsonPropertyName("quoteCount")]
        public long? QuoteCount { get; set; }

        /// <summary>
        /// Gets or sets the embeds.
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewImages"/> (app.bsky.embed.images#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewVideo"/> (app.bsky.embed.video#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewExternal"/> (app.bsky.embed.external#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewRecordDef"/> (app.bsky.embed.record#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewRecordWithMedia"/> (app.bsky.embed.recordWithMedia#view)
        /// </summary>
        [JsonPropertyName("embeds")]
        public List<ATObject>? Embeds { get; set; }

        /// <summary>
        /// Gets or sets the indexedAt.
        /// </summary>
        [JsonPropertyName("indexedAt")]
        [JsonRequired]
        public DateTime? IndexedAt { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "app.bsky.embed.record#viewRecord";

        public const string RecordType = "app.bsky.embed.record#viewRecord";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<App.Bsky.Embed.ViewRecord>(this, (JsonTypeInfo<App.Bsky.Embed.ViewRecord>)SourceGenerationContext.Default.AppBskyEmbedViewRecord)!;
        }

        public static ViewRecord FromJson(string json)
        {
            return JsonSerializer.Deserialize<App.Bsky.Embed.ViewRecord>(json, (JsonTypeInfo<App.Bsky.Embed.ViewRecord>)SourceGenerationContext.Default.AppBskyEmbedViewRecord)!;
        }
    }
}

