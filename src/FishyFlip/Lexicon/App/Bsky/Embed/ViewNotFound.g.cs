// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Embed
{
    public partial class ViewNotFound : ATObject, ICBOREncodable<ViewNotFound>, IJsonEncodable<ViewNotFound>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ViewNotFound"/> class.
        /// </summary>
        /// <param name="uri"></param>
        /// <param name="notFound"></param>
        public ViewNotFound(FishyFlip.Models.ATUri uri = default, bool notFound = default)
        {
            this.Uri = uri;
            this.NotFound = notFound;
            this.Type = "app.bsky.embed.record#viewNotFound";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ViewNotFound"/> class.
        /// </summary>
        public ViewNotFound()
        {
            this.Type = "app.bsky.embed.record#viewNotFound";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ViewNotFound"/> class.
        /// </summary>
        public ViewNotFound(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["notFound"] is not null) this.NotFound = obj["notFound"].AsBoolean();
        }

        /// <summary>
        /// Gets or sets the uri.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri Uri { get; set; }

        /// <summary>
        /// Gets or sets the notFound.
        /// </summary>
        [JsonPropertyName("notFound")]
        [JsonRequired]
        public bool NotFound { get; set; }

        public const string RecordType = "app.bsky.embed.record#viewNotFound";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Embed.ViewNotFound>)SourceGenerationContext.Default.AppBskyEmbedViewNotFound);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Embed.ViewNotFound>)SourceGenerationContext.Default.AppBskyEmbedViewNotFound);
        }

        public static new ViewNotFound FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Embed.ViewNotFound>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Embed.ViewNotFound>)SourceGenerationContext.Default.AppBskyEmbedViewNotFound)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new ViewNotFound FromCBORObject(CBORObject obj)
        {
            return new ViewNotFound(obj);
        }

    }
}

