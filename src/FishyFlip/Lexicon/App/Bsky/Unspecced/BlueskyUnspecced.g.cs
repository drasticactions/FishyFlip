// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Unspecced
{

    /// <summary>
    /// app.bsky.unspecced Endpoint Class.
    /// </summary>
    public sealed class BlueskyUnspecced
    {

        private ATProtocol atp;

        /// <summary>
        /// Initializes a new instance of the <see cref="BlueskyUnspecced"/> class.
        /// </summary>
        /// <param name="atp"><see cref="ATProtocol"/>.</param>
        internal BlueskyUnspecced(ATProtocol atp)
        {
            this.atp = atp;
        }

        /// <summary>
        /// Gets the ATProtocol.
        /// </summary>
        internal ATProtocol ATProtocol => this.atp;


        /// <summary>
        /// Get miscellaneous runtime configuration.
        /// </summary>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.App.Bsky.Unspecced.GetConfigOutput?>> GetConfigAsync (CancellationToken cancellationToken = default)
        {
            return atp.GetConfigAsync(cancellationToken);
        }


        /// <summary>
        /// An unspecced view of globally popular feed generators.
        /// </summary>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="query"></param>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.App.Bsky.Unspecced.GetPopularFeedGeneratorsOutput?>> GetPopularFeedGeneratorsAsync (int? limit = 50, string? cursor = default, string? query = default, CancellationToken cancellationToken = default)
        {
            return atp.GetPopularFeedGeneratorsAsync(limit, cursor, query, cancellationToken);
        }

        /// <summary>
        /// An unspecced view of globally popular feed generators.
        /// </summary>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="query"></param>
        /// <param name="cancellationToken"></param>
        public GetPopularFeedGeneratorsOutputCollection GetPopularFeedGeneratorsCollectionAsync (int? limit = 50, string? cursor = default, string? query = default, CancellationToken cancellationToken = default)
        {
            return new GetPopularFeedGeneratorsOutputCollection(atp, limit, cursor, query, cancellationToken);
        }


        /// <summary>
        /// Get a skeleton of suggested actors. Intended to be called and then hydrated through app.bsky.actor.getSuggestions
        /// </summary>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.</param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="relativeToDid">DID of the account to get suggestions relative to. If not provided, suggestions will be based on the viewer.</param>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.App.Bsky.Unspecced.GetSuggestionsSkeletonOutput?>> GetSuggestionsSkeletonAsync (FishyFlip.Models.ATDid? viewer = default, int? limit = 50, string? cursor = default, FishyFlip.Models.ATDid? relativeToDid = default, CancellationToken cancellationToken = default)
        {
            return atp.GetSuggestionsSkeletonAsync(viewer, limit, cursor, relativeToDid, cancellationToken);
        }

        /// <summary>
        /// Get a skeleton of suggested actors. Intended to be called and then hydrated through app.bsky.actor.getSuggestions
        /// </summary>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.</param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="relativeToDid">DID of the account to get suggestions relative to. If not provided, suggestions will be based on the viewer.</param>
        /// <param name="cancellationToken"></param>
        public GetSuggestionsSkeletonOutputCollection GetSuggestionsSkeletonCollectionAsync (FishyFlip.Models.ATDid? viewer = default, int? limit = 50, string? cursor = default, FishyFlip.Models.ATDid? relativeToDid = default, CancellationToken cancellationToken = default)
        {
            return new GetSuggestionsSkeletonOutputCollection(atp, viewer, limit, cursor, relativeToDid, cancellationToken);
        }


        /// <summary>
        /// Get a list of suggestions (feeds and users) tagged with categories
        /// </summary>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.App.Bsky.Unspecced.GetTaggedSuggestionsOutput?>> GetTaggedSuggestionsAsync (CancellationToken cancellationToken = default)
        {
            return atp.GetTaggedSuggestionsAsync(cancellationToken);
        }


        /// <summary>
        /// Get a list of trending topics
        /// </summary>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.</param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.App.Bsky.Unspecced.GetTrendingTopicsOutput?>> GetTrendingTopicsAsync (FishyFlip.Models.ATDid? viewer = default, int? limit = 10, CancellationToken cancellationToken = default)
        {
            return atp.GetTrendingTopicsAsync(viewer, limit, cancellationToken);
        }


        /// <summary>
        /// Backend Actors (profile) search, returns only skeleton.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BadQueryStringError"/>  <br/>
        /// </summary>
        /// <param name="q">Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax.</param>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.</param>
        /// <param name="typeahead">If true, acts as fast/simple 'typeahead' query.</param>
        /// <param name="limit"></param>
        /// <param name="cursor">Optional pagination mechanism; may not necessarily allow scrolling through entire result set.</param>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.App.Bsky.Unspecced.SearchActorsSkeletonOutput?>> SearchActorsSkeletonAsync (string q, FishyFlip.Models.ATDid? viewer = default, bool? typeahead = default, int? limit = 25, string? cursor = default, CancellationToken cancellationToken = default)
        {
            return atp.SearchActorsSkeletonAsync(q, viewer, typeahead, limit, cursor, cancellationToken);
        }

        /// <summary>
        /// Backend Actors (profile) search, returns only skeleton.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BadQueryStringError"/>  <br/>
        /// </summary>
        /// <param name="q">Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax.</param>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.</param>
        /// <param name="typeahead">If true, acts as fast/simple 'typeahead' query.</param>
        /// <param name="limit"></param>
        /// <param name="cursor">Optional pagination mechanism; may not necessarily allow scrolling through entire result set.</param>
        /// <param name="cancellationToken"></param>
        public SearchActorsSkeletonOutputCollection SearchActorsSkeletonCollectionAsync (string q, FishyFlip.Models.ATDid? viewer = default, bool? typeahead = default, int? limit = 25, string? cursor = default, CancellationToken cancellationToken = default)
        {
            return new SearchActorsSkeletonOutputCollection(atp, q, viewer, typeahead, limit, cursor, cancellationToken);
        }


        /// <summary>
        /// Backend Posts search, returns only skeleton
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BadQueryStringError"/>  <br/>
        /// </summary>
        /// <param name="q">Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.</param>
        /// <param name="sort">Specifies the ranking order of results.</param>
        /// <param name="since">Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).</param>
        /// <param name="until">Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).</param>
        /// <param name="mentions">Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.</param>
        /// <param name="author">Filter to posts by the given account. Handles are resolved to DID before query-time.</param>
        /// <param name="lang">Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.</param>
        /// <param name="domain">Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.</param>
        /// <param name="url">Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.</param>
        /// <param name="tag">Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.</param>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used for 'from:me' queries.</param>
        /// <param name="limit"></param>
        /// <param name="cursor">Optional pagination mechanism; may not necessarily allow scrolling through entire result set.</param>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.App.Bsky.Unspecced.SearchPostsSkeletonOutput?>> SearchPostsSkeletonAsync (string q, string? sort = default, string? since = default, string? until = default, FishyFlip.Models.ATIdentifier? mentions = default, FishyFlip.Models.ATIdentifier? author = default, string? lang = default, string? domain = default, string? url = default, List<string>? tag = default, FishyFlip.Models.ATDid? viewer = default, int? limit = 25, string? cursor = default, CancellationToken cancellationToken = default)
        {
            return atp.SearchPostsSkeletonAsync(q, sort, since, until, mentions, author, lang, domain, url, tag, viewer, limit, cursor, cancellationToken);
        }

        /// <summary>
        /// Backend Posts search, returns only skeleton
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BadQueryStringError"/>  <br/>
        /// </summary>
        /// <param name="q">Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.</param>
        /// <param name="sort">Specifies the ranking order of results.</param>
        /// <param name="since">Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).</param>
        /// <param name="until">Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).</param>
        /// <param name="mentions">Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.</param>
        /// <param name="author">Filter to posts by the given account. Handles are resolved to DID before query-time.</param>
        /// <param name="lang">Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.</param>
        /// <param name="domain">Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.</param>
        /// <param name="url">Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.</param>
        /// <param name="tag">Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.</param>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries). Used for 'from:me' queries.</param>
        /// <param name="limit"></param>
        /// <param name="cursor">Optional pagination mechanism; may not necessarily allow scrolling through entire result set.</param>
        /// <param name="cancellationToken"></param>
        public SearchPostsSkeletonOutputCollection SearchPostsSkeletonCollectionAsync (string q, string? sort = default, string? since = default, string? until = default, FishyFlip.Models.ATIdentifier? mentions = default, FishyFlip.Models.ATIdentifier? author = default, string? lang = default, string? domain = default, string? url = default, List<string>? tag = default, FishyFlip.Models.ATDid? viewer = default, int? limit = 25, string? cursor = default, CancellationToken cancellationToken = default)
        {
            return new SearchPostsSkeletonOutputCollection(atp, q, sort, since, until, mentions, author, lang, domain, url, tag, viewer, limit, cursor, cancellationToken);
        }


        /// <summary>
        /// Backend Starter Pack search, returns only skeleton.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BadQueryStringError"/>  <br/>
        /// </summary>
        /// <param name="q">Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.</param>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries).</param>
        /// <param name="limit"></param>
        /// <param name="cursor">Optional pagination mechanism; may not necessarily allow scrolling through entire result set.</param>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.App.Bsky.Unspecced.SearchStarterPacksSkeletonOutput?>> SearchStarterPacksSkeletonAsync (string q, FishyFlip.Models.ATDid? viewer = default, int? limit = 25, string? cursor = default, CancellationToken cancellationToken = default)
        {
            return atp.SearchStarterPacksSkeletonAsync(q, viewer, limit, cursor, cancellationToken);
        }

        /// <summary>
        /// Backend Starter Pack search, returns only skeleton.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.BadQueryStringError"/>  <br/>
        /// </summary>
        /// <param name="q">Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.</param>
        /// <param name="viewer">DID of the account making the request (not included for public/unauthenticated queries).</param>
        /// <param name="limit"></param>
        /// <param name="cursor">Optional pagination mechanism; may not necessarily allow scrolling through entire result set.</param>
        /// <param name="cancellationToken"></param>
        public SearchStarterPacksSkeletonOutputCollection SearchStarterPacksSkeletonCollectionAsync (string q, FishyFlip.Models.ATDid? viewer = default, int? limit = 25, string? cursor = default, CancellationToken cancellationToken = default)
        {
            return new SearchStarterPacksSkeletonOutputCollection(atp, q, viewer, limit, cursor, cancellationToken);
        }

    }
}

