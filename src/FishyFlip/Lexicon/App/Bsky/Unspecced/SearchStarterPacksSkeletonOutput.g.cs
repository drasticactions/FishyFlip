// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Unspecced
{
    public partial class SearchStarterPacksSkeletonOutput : ATObject, ICBOREncodable<SearchStarterPacksSkeletonOutput>, IJsonEncodable<SearchStarterPacksSkeletonOutput>, IParsable<SearchStarterPacksSkeletonOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="SearchStarterPacksSkeletonOutput"/> class.
        /// </summary>
        /// <param name="cursor"></param>
        /// <param name="hitsTotal">Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.</param>
        /// <param name="starterPacks"></param>
        public SearchStarterPacksSkeletonOutput(string? cursor = default, long? hitsTotal = default, List<FishyFlip.Lexicon.App.Bsky.Unspecced.SkeletonSearchStarterPack> starterPacks = default)
        {
            this.Cursor = cursor;
            this.HitsTotal = hitsTotal;
            this.StarterPacks = starterPacks;
            this.Type = "app.bsky.unspecced.searchStarterPacksSkeleton#SearchStarterPacksSkeletonOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SearchStarterPacksSkeletonOutput"/> class.
        /// </summary>
        public SearchStarterPacksSkeletonOutput()
        {
            this.Type = "app.bsky.unspecced.searchStarterPacksSkeleton#SearchStarterPacksSkeletonOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SearchStarterPacksSkeletonOutput"/> class.
        /// </summary>
        public SearchStarterPacksSkeletonOutput(CBORObject obj)
        {
            if (obj["cursor"] is not null) this.Cursor = obj["cursor"].AsString();
            if (obj["hitsTotal"] is not null) this.HitsTotal = obj["hitsTotal"].AsInt64Value();
            if (obj["starterPacks"] is not null) this.StarterPacks = obj["starterPacks"].Values.Select(n =>new FishyFlip.Lexicon.App.Bsky.Unspecced.SkeletonSearchStarterPack(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the cursor.
        /// </summary>
        [JsonPropertyName("cursor")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Cursor { get; set; }

        /// <summary>
        /// Gets or sets the hitsTotal.
        /// <br/> Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.
        /// </summary>
        [JsonPropertyName("hitsTotal")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public long? HitsTotal { get; set; }

        /// <summary>
        /// Gets or sets the starterPacks.
        /// </summary>
        [JsonPropertyName("starterPacks")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.App.Bsky.Unspecced.SkeletonSearchStarterPack> StarterPacks { get; set; }

        public const string RecordType = "app.bsky.unspecced.searchStarterPacksSkeleton#SearchStarterPacksSkeletonOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Unspecced.SearchStarterPacksSkeletonOutput>)SourceGenerationContext.Default.AppBskyUnspeccedSearchStarterPacksSkeletonOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Unspecced.SearchStarterPacksSkeletonOutput>)SourceGenerationContext.Default.AppBskyUnspeccedSearchStarterPacksSkeletonOutput);
        }

        public static new SearchStarterPacksSkeletonOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Unspecced.SearchStarterPacksSkeletonOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Unspecced.SearchStarterPacksSkeletonOutput>)SourceGenerationContext.Default.AppBskyUnspeccedSearchStarterPacksSkeletonOutput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new SearchStarterPacksSkeletonOutput FromCBORObject(CBORObject obj)
        {
            return new SearchStarterPacksSkeletonOutput(obj);
        }

        /// <inheritdoc/>
        public static SearchStarterPacksSkeletonOutput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<SearchStarterPacksSkeletonOutput>(s, (JsonTypeInfo<SearchStarterPacksSkeletonOutput>)SourceGenerationContext.Default.AppBskyUnspeccedSearchStarterPacksSkeletonOutput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out SearchStarterPacksSkeletonOutput result)
        {
            result = JsonSerializer.Deserialize<SearchStarterPacksSkeletonOutput>(s, (JsonTypeInfo<SearchStarterPacksSkeletonOutput>)SourceGenerationContext.Default.AppBskyUnspeccedSearchStarterPacksSkeletonOutput);
            return result != null;
        }
    }
}

