// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Unspecced
{
    public partial class GetConfigOutput : ATObject, ICBOREncodable<GetConfigOutput>, IJsonEncodable<GetConfigOutput>, IParsable<GetConfigOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="GetConfigOutput"/> class.
        /// </summary>
        /// <param name="checkEmailConfirmed"></param>
        public GetConfigOutput(bool? checkEmailConfirmed = default)
        {
            this.CheckEmailConfirmed = checkEmailConfirmed;
            this.Type = "app.bsky.unspecced.getConfig#GetConfigOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetConfigOutput"/> class.
        /// </summary>
        public GetConfigOutput()
        {
            this.Type = "app.bsky.unspecced.getConfig#GetConfigOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetConfigOutput"/> class.
        /// </summary>
        public GetConfigOutput(CBORObject obj)
        {
            if (obj["checkEmailConfirmed"] is not null) this.CheckEmailConfirmed = obj["checkEmailConfirmed"].AsBoolean();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the checkEmailConfirmed.
        /// </summary>
        [JsonPropertyName("checkEmailConfirmed")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public bool? CheckEmailConfirmed { get; set; }

        public const string RecordType = "app.bsky.unspecced.getConfig#GetConfigOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Unspecced.GetConfigOutput>)SourceGenerationContext.Default.AppBskyUnspeccedGetConfigOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Unspecced.GetConfigOutput>)SourceGenerationContext.Default.AppBskyUnspeccedGetConfigOutput);
        }

        public static new GetConfigOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Unspecced.GetConfigOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Unspecced.GetConfigOutput>)SourceGenerationContext.Default.AppBskyUnspeccedGetConfigOutput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new GetConfigOutput FromCBORObject(CBORObject obj)
        {
            return new GetConfigOutput(obj);
        }

        /// <inheritdoc/>
        public static GetConfigOutput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<GetConfigOutput>(s, (JsonTypeInfo<GetConfigOutput>)SourceGenerationContext.Default.AppBskyUnspeccedGetConfigOutput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out GetConfigOutput result)
        {
            result = JsonSerializer.Deserialize<GetConfigOutput>(s, (JsonTypeInfo<GetConfigOutput>)SourceGenerationContext.Default.AppBskyUnspeccedGetConfigOutput);
            return result != null;
        }
    }
}

