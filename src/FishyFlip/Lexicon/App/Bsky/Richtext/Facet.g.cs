// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.App.Bsky.Richtext
{
    /// <summary>
    /// Annotation of a sub-string within rich text.
    /// </summary>
    public partial class Facet : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Facet"/> class.
        /// </summary>
        /// <param name="index">
        /// app.bsky.richtext.defs#byteSlice
        /// </param>
        /// <param name="features">
        /// Union Types:
        /// #mention
        /// #link
        /// #tag
        /// </param>
        public Facet(App.Bsky.Richtext.ByteSlice? index = default, List<ATObject>? features = default)
        {
            this.Index = index;
            this.Features = features;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Facet"/> class.
        /// </summary>
        public Facet()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Facet"/> class.
        /// </summary>
        public Facet(CBORObject obj)
        {
            if (obj["index"] is not null) this.Index = new App.Bsky.Richtext.ByteSlice(obj["index"]);
            if (obj["features"] is not null) this.Features = obj["features"].Values.Select(n =>n.ToATObject()).ToList();
        }

        /// <summary>
        /// Gets or sets the index.
        /// app.bsky.richtext.defs#byteSlice
        /// </summary>
        [JsonPropertyName("index")]
        [JsonRequired]
        public App.Bsky.Richtext.ByteSlice? Index { get; set; }

        /// <summary>
        /// Gets or sets the features.
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Richtext.Mention"/> (app.bsky.richtext.facet#mention)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Richtext.Link"/> (app.bsky.richtext.facet#link)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Richtext.Tag"/> (app.bsky.richtext.facet#tag)
        /// </summary>
        [JsonPropertyName("features")]
        [JsonRequired]
        public List<ATObject>? Features { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "app.bsky.richtext.facet";

        public const string RecordType = "app.bsky.richtext.facet";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<App.Bsky.Richtext.Facet>(this, (JsonTypeInfo<App.Bsky.Richtext.Facet>)SourceGenerationContext.Default.AppBskyRichtextFacet)!;
        }

        public static Facet FromJson(string json)
        {
            return JsonSerializer.Deserialize<App.Bsky.Richtext.Facet>(json, (JsonTypeInfo<App.Bsky.Richtext.Facet>)SourceGenerationContext.Default.AppBskyRichtextFacet)!;
        }
    }
}

