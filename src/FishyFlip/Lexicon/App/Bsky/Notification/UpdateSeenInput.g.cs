// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Notification
{
    public partial class UpdateSeenInput : ATObject, ICBOREncodable<UpdateSeenInput>, IJsonEncodable<UpdateSeenInput>, IParsable<UpdateSeenInput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateSeenInput"/> class.
        /// </summary>
        /// <param name="seenAt"></param>
        public UpdateSeenInput(DateTime? seenAt = default)
        {
            this.SeenAt = seenAt;
            this.Type = "app.bsky.notification.updateSeen#UpdateSeenInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateSeenInput"/> class.
        /// </summary>
        public UpdateSeenInput()
        {
            this.Type = "app.bsky.notification.updateSeen#UpdateSeenInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateSeenInput"/> class.
        /// </summary>
        public UpdateSeenInput(CBORObject obj)
        {
            if (obj["seenAt"] is not null) this.SeenAt = obj["seenAt"].ToDateTime();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the seenAt.
        /// </summary>
        [JsonPropertyName("seenAt")]
        [JsonRequired]
        public DateTime? SeenAt { get; set; }

        public const string RecordType = "app.bsky.notification.updateSeen#UpdateSeenInput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Notification.UpdateSeenInput>)SourceGenerationContext.Default.AppBskyNotificationUpdateSeenInput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Notification.UpdateSeenInput>)SourceGenerationContext.Default.AppBskyNotificationUpdateSeenInput);
        }

        public static new UpdateSeenInput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Notification.UpdateSeenInput>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Notification.UpdateSeenInput>)SourceGenerationContext.Default.AppBskyNotificationUpdateSeenInput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new UpdateSeenInput FromCBORObject(CBORObject obj)
        {
            return new UpdateSeenInput(obj);
        }

        /// <inheritdoc/>
        public static UpdateSeenInput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<UpdateSeenInput>(s, (JsonTypeInfo<UpdateSeenInput>)SourceGenerationContext.Default.AppBskyNotificationUpdateSeenInput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out UpdateSeenInput result)
        {
            result = JsonSerializer.Deserialize<UpdateSeenInput>(s, (JsonTypeInfo<UpdateSeenInput>)SourceGenerationContext.Default.AppBskyNotificationUpdateSeenInput);
            return result != null;
        }
    }
}

