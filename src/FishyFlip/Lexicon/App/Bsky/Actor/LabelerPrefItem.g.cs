// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Actor
{
    public partial class LabelerPrefItem : ATObject, ICBOREncodable<LabelerPrefItem>, IJsonEncodable<LabelerPrefItem>, IParsable<LabelerPrefItem>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="LabelerPrefItem"/> class.
        /// </summary>
        /// <param name="did"></param>
        public LabelerPrefItem(FishyFlip.Models.ATDid did = default)
        {
            this.Did = did;
            this.Type = "app.bsky.actor.defs#labelerPrefItem";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="LabelerPrefItem"/> class.
        /// </summary>
        public LabelerPrefItem()
        {
            this.Type = "app.bsky.actor.defs#labelerPrefItem";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="LabelerPrefItem"/> class.
        /// </summary>
        public LabelerPrefItem(CBORObject obj)
        {
            if (obj["did"] is not null) this.Did = obj["did"].ToATDid();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the did.
        /// </summary>
        [JsonPropertyName("did")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid Did { get; set; }

        public const string RecordType = "app.bsky.actor.defs#labelerPrefItem";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.LabelerPrefItem>)SourceGenerationContext.Default.AppBskyActorLabelerPrefItem);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.LabelerPrefItem>)SourceGenerationContext.Default.AppBskyActorLabelerPrefItem);
        }

        public static new LabelerPrefItem FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Actor.LabelerPrefItem>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.LabelerPrefItem>)SourceGenerationContext.Default.AppBskyActorLabelerPrefItem)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new LabelerPrefItem FromCBORObject(CBORObject obj)
        {
            return new LabelerPrefItem(obj);
        }

        /// <inheritdoc/>
        public static LabelerPrefItem Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<LabelerPrefItem>(s, (JsonTypeInfo<LabelerPrefItem>)SourceGenerationContext.Default.AppBskyActorLabelerPrefItem)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out LabelerPrefItem result)
        {
            result = JsonSerializer.Deserialize<LabelerPrefItem>(s, (JsonTypeInfo<LabelerPrefItem>)SourceGenerationContext.Default.AppBskyActorLabelerPrefItem);
            return result != null;
        }
    }
}

