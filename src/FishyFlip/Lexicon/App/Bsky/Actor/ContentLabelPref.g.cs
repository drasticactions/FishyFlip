// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.App.Bsky.Actor
{
    public partial class ContentLabelPref : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ContentLabelPref"/> class.
        /// </summary>
        /// <param name="labelerDid">Which labeler does this preference apply to? If undefined, applies globally.</param>
        /// <param name="label"></param>
        /// <param name="visibility">
        /// Known Values:
        /// ignore
        /// show
        /// warn
        /// hide
        /// </param>
        public ContentLabelPref(FishyFlip.Models.ATDid? labelerDid = default, string? label = default, string? visibility = default)
        {
            this.LabelerDid = labelerDid;
            this.Label = label;
            this.Visibility = visibility;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ContentLabelPref"/> class.
        /// </summary>
        public ContentLabelPref()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ContentLabelPref"/> class.
        /// </summary>
        public ContentLabelPref(CBORObject obj)
        {
            if (obj["labelerDid"] is not null) this.LabelerDid = obj["labelerDid"].ToATDid();
            if (obj["label"] is not null) this.Label = obj["label"].AsString();
            if (obj["visibility"] is not null) this.Visibility = obj["visibility"].AsString();
        }

        /// <summary>
        /// Gets or sets the labelerDid.
        /// Which labeler does this preference apply to? If undefined, applies globally.
        /// </summary>
        [JsonPropertyName("labelerDid")]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid? LabelerDid { get; set; }

        /// <summary>
        /// Gets or sets the label.
        /// </summary>
        [JsonPropertyName("label")]
        [JsonRequired]
        public string? Label { get; set; }

        /// <summary>
        /// Gets or sets the visibility.
        /// Known Values:
        /// ignore
        /// show
        /// warn
        /// hide
        /// </summary>
        [JsonPropertyName("visibility")]
        [JsonRequired]
        public string? Visibility { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "app.bsky.actor.defs#contentLabelPref";

        public const string RecordType = "app.bsky.actor.defs#contentLabelPref";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<App.Bsky.Actor.ContentLabelPref>(this, (JsonTypeInfo<App.Bsky.Actor.ContentLabelPref>)SourceGenerationContext.Default.AppBskyActorContentLabelPref)!;
        }

        public static ContentLabelPref FromJson(string json)
        {
            return JsonSerializer.Deserialize<App.Bsky.Actor.ContentLabelPref>(json, (JsonTypeInfo<App.Bsky.Actor.ContentLabelPref>)SourceGenerationContext.Default.AppBskyActorContentLabelPref)!;
        }
    }
}

