// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Actor
{
    public partial class LabelersPref : ATObject, ICBOREncodable<LabelersPref>, IJsonEncodable<LabelersPref>, IParsable<LabelersPref>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="LabelersPref"/> class.
        /// </summary>
        /// <param name="labelers"></param>
        public LabelersPref(List<FishyFlip.Lexicon.App.Bsky.Actor.LabelerPrefItem> labelers = default)
        {
            this.Labelers = labelers;
            this.Type = "app.bsky.actor.defs#labelersPref";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="LabelersPref"/> class.
        /// </summary>
        public LabelersPref()
        {
            this.Type = "app.bsky.actor.defs#labelersPref";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="LabelersPref"/> class.
        /// </summary>
        public LabelersPref(CBORObject obj)
        {
            if (obj["labelers"] is not null) this.Labelers = obj["labelers"].Values.Select(n =>new FishyFlip.Lexicon.App.Bsky.Actor.LabelerPrefItem(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the labelers.
        /// </summary>
        [JsonPropertyName("labelers")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.App.Bsky.Actor.LabelerPrefItem> Labelers { get; set; }

        public const string RecordType = "app.bsky.actor.defs#labelersPref";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.LabelersPref>)SourceGenerationContext.Default.AppBskyActorLabelersPref);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.LabelersPref>)SourceGenerationContext.Default.AppBskyActorLabelersPref);
        }

        public static new LabelersPref FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Actor.LabelersPref>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.LabelersPref>)SourceGenerationContext.Default.AppBskyActorLabelersPref)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new LabelersPref FromCBORObject(CBORObject obj)
        {
            return new LabelersPref(obj);
        }

        /// <inheritdoc/>
        public static LabelersPref Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<LabelersPref>(s, (JsonTypeInfo<LabelersPref>)SourceGenerationContext.Default.AppBskyActorLabelersPref)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out LabelersPref result)
        {
            result = JsonSerializer.Deserialize<LabelersPref>(s, (JsonTypeInfo<LabelersPref>)SourceGenerationContext.Default.AppBskyActorLabelersPref);
            return result != null;
        }
    }
}

