// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Actor
{
    public partial class GetProfilesOutput : ATObject, ICBOREncodable<GetProfilesOutput>, IJsonEncodable<GetProfilesOutput>, IParsable<GetProfilesOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="GetProfilesOutput"/> class.
        /// </summary>
        /// <param name="profiles"></param>
        public GetProfilesOutput(List<FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewDetailed> profiles = default)
        {
            this.Profiles = profiles;
            this.Type = "app.bsky.actor.getProfiles#GetProfilesOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetProfilesOutput"/> class.
        /// </summary>
        public GetProfilesOutput()
        {
            this.Type = "app.bsky.actor.getProfiles#GetProfilesOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetProfilesOutput"/> class.
        /// </summary>
        public GetProfilesOutput(CBORObject obj)
        {
            if (obj["profiles"] is not null) this.Profiles = obj["profiles"].Values.Select(n =>new FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewDetailed(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the profiles.
        /// </summary>
        [JsonPropertyName("profiles")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewDetailed> Profiles { get; set; }

        public const string RecordType = "app.bsky.actor.getProfiles#GetProfilesOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.GetProfilesOutput>)SourceGenerationContext.Default.AppBskyActorGetProfilesOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.GetProfilesOutput>)SourceGenerationContext.Default.AppBskyActorGetProfilesOutput);
        }

        public static new GetProfilesOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Actor.GetProfilesOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.GetProfilesOutput>)SourceGenerationContext.Default.AppBskyActorGetProfilesOutput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new GetProfilesOutput FromCBORObject(CBORObject obj)
        {
            return new GetProfilesOutput(obj);
        }

        /// <inheritdoc/>
        public static GetProfilesOutput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<GetProfilesOutput>(s, (JsonTypeInfo<GetProfilesOutput>)SourceGenerationContext.Default.AppBskyActorGetProfilesOutput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out GetProfilesOutput result)
        {
            result = JsonSerializer.Deserialize<GetProfilesOutput>(s, (JsonTypeInfo<GetProfilesOutput>)SourceGenerationContext.Default.AppBskyActorGetProfilesOutput);
            return result != null;
        }
    }
}

