// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Actor
{
    public partial class ProfileAssociatedChat : ATObject, ICBOREncodable<ProfileAssociatedChat>, IJsonEncodable<ProfileAssociatedChat>, IParsable<ProfileAssociatedChat>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ProfileAssociatedChat"/> class.
        /// </summary>
        /// <param name="allowIncoming">
        /// <br/> Known Values: <br/>
        /// all <br/>
        /// none <br/>
        /// following <br/>
        /// </param>
        public ProfileAssociatedChat(string allowIncoming = default)
        {
            this.AllowIncoming = allowIncoming;
            this.Type = "app.bsky.actor.defs#profileAssociatedChat";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ProfileAssociatedChat"/> class.
        /// </summary>
        public ProfileAssociatedChat()
        {
            this.Type = "app.bsky.actor.defs#profileAssociatedChat";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ProfileAssociatedChat"/> class.
        /// </summary>
        public ProfileAssociatedChat(CBORObject obj)
        {
            if (obj["allowIncoming"] is not null) this.AllowIncoming = obj["allowIncoming"].AsString();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the allowIncoming.
        /// <br/> Known Values: <br/>
        /// all <br/>
        /// none <br/>
        /// following <br/>
        /// </summary>
        [JsonPropertyName("allowIncoming")]
        [JsonRequired]
        public string AllowIncoming { get; set; }

        public const string RecordType = "app.bsky.actor.defs#profileAssociatedChat";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.ProfileAssociatedChat>)SourceGenerationContext.Default.AppBskyActorProfileAssociatedChat);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.ProfileAssociatedChat>)SourceGenerationContext.Default.AppBskyActorProfileAssociatedChat);
        }

        public static new ProfileAssociatedChat FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Actor.ProfileAssociatedChat>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Actor.ProfileAssociatedChat>)SourceGenerationContext.Default.AppBskyActorProfileAssociatedChat)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new ProfileAssociatedChat FromCBORObject(CBORObject obj)
        {
            return new ProfileAssociatedChat(obj);
        }

        /// <inheritdoc/>
        public static ProfileAssociatedChat Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<ProfileAssociatedChat>(s, (JsonTypeInfo<ProfileAssociatedChat>)SourceGenerationContext.Default.AppBskyActorProfileAssociatedChat)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out ProfileAssociatedChat result)
        {
            result = JsonSerializer.Deserialize<ProfileAssociatedChat>(s, (JsonTypeInfo<ProfileAssociatedChat>)SourceGenerationContext.Default.AppBskyActorProfileAssociatedChat);
            return result != null;
        }
    }
}

