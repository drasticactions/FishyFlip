// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.App.Bsky.Graph
{
    public partial class ListView : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ListView"/> class.
        /// </summary>
        /// <param name="uri"></param>
        /// <param name="cid"></param>
        /// <param name="creator">
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileView"/> (app.bsky.actor.defs#profileView)
        /// </param>
        /// <param name="name"></param>
        /// <param name="purpose">
        /// Known Values:
        /// app.bsky.graph.defs#modlist - A list of actors to apply an aggregate moderation action (mute/block) on.
        /// app.bsky.graph.defs#curatelist - A list of actors used for curation purposes such as list feeds or interaction gating.
        /// app.bsky.graph.defs#referencelist - A list of actors used for only for reference purposes such as within a starter pack.
        /// </param>
        /// <param name="description"></param>
        /// <param name="descriptionFacets"></param>
        /// <param name="avatar"></param>
        /// <param name="listItemCount"></param>
        /// <param name="labels"></param>
        /// <param name="viewer">
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Graph.ListViewerState"/> (app.bsky.graph.defs#listViewerState)
        /// </param>
        /// <param name="indexedAt"></param>
        public ListView(FishyFlip.Models.ATUri? uri = default, string? cid = default, App.Bsky.Actor.ProfileView? creator = default, string? name = default, string? purpose = default, string? description = default, List<App.Bsky.Richtext.Facet>? descriptionFacets = default, string? avatar = default, long? listItemCount = default, List<Com.Atproto.Label.Label>? labels = default, App.Bsky.Graph.ListViewerState? viewer = default, DateTime? indexedAt = default)
        {
            this.Uri = uri;
            this.Cid = cid;
            this.Creator = creator;
            this.Name = name;
            this.Purpose = purpose;
            this.Description = description;
            this.DescriptionFacets = descriptionFacets;
            this.Avatar = avatar;
            this.ListItemCount = listItemCount;
            this.Labels = labels;
            this.Viewer = viewer;
            this.IndexedAt = indexedAt;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ListView"/> class.
        /// </summary>
        public ListView()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ListView"/> class.
        /// </summary>
        public ListView(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["cid"] is not null) this.Cid = obj["cid"].AsString();
            if (obj["creator"] is not null) this.Creator = new App.Bsky.Actor.ProfileView(obj["creator"]);
            if (obj["name"] is not null) this.Name = obj["name"].AsString();
            if (obj["purpose"] is not null) this.Purpose = obj["purpose"].AsString();
            if (obj["description"] is not null) this.Description = obj["description"].AsString();
            if (obj["descriptionFacets"] is not null) this.DescriptionFacets = obj["descriptionFacets"].Values.Select(n =>new App.Bsky.Richtext.Facet(n)).ToList();
            if (obj["avatar"] is not null) this.Avatar = obj["avatar"].AsString();
            if (obj["listItemCount"] is not null) this.ListItemCount = obj["listItemCount"].AsInt64Value();
            if (obj["labels"] is not null) this.Labels = obj["labels"].Values.Select(n =>new Com.Atproto.Label.Label(n)).ToList();
            if (obj["viewer"] is not null) this.Viewer = new App.Bsky.Graph.ListViewerState(obj["viewer"]);
            if (obj["indexedAt"] is not null) this.IndexedAt = obj["indexedAt"].ToDateTime();
        }

        /// <summary>
        /// Gets or sets the uri.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri? Uri { get; set; }

        /// <summary>
        /// Gets or sets the cid.
        /// </summary>
        [JsonPropertyName("cid")]
        [JsonRequired]
        public string? Cid { get; set; }

        /// <summary>
        /// Gets or sets the creator.
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileView"/> (app.bsky.actor.defs#profileView)
        /// </summary>
        [JsonPropertyName("creator")]
        [JsonRequired]
        public App.Bsky.Actor.ProfileView? Creator { get; set; }

        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [JsonPropertyName("name")]
        [JsonRequired]
        public string? Name { get; set; }

        /// <summary>
        /// Gets or sets the purpose.
        /// Known Values:
        /// app.bsky.graph.defs#modlist - A list of actors to apply an aggregate moderation action (mute/block) on.
        /// app.bsky.graph.defs#curatelist - A list of actors used for curation purposes such as list feeds or interaction gating.
        /// app.bsky.graph.defs#referencelist - A list of actors used for only for reference purposes such as within a starter pack.
        /// </summary>
        [JsonPropertyName("purpose")]
        [JsonRequired]
        public string? Purpose { get; set; }

        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        [JsonPropertyName("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Gets or sets the descriptionFacets.
        /// </summary>
        [JsonPropertyName("descriptionFacets")]
        public List<App.Bsky.Richtext.Facet>? DescriptionFacets { get; set; }

        /// <summary>
        /// Gets or sets the avatar.
        /// </summary>
        [JsonPropertyName("avatar")]
        public string? Avatar { get; set; }

        /// <summary>
        /// Gets or sets the listItemCount.
        /// </summary>
        [JsonPropertyName("listItemCount")]
        public long? ListItemCount { get; set; }

        /// <summary>
        /// Gets or sets the labels.
        /// </summary>
        [JsonPropertyName("labels")]
        public List<Com.Atproto.Label.Label>? Labels { get; set; }

        /// <summary>
        /// Gets or sets the viewer.
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Graph.ListViewerState"/> (app.bsky.graph.defs#listViewerState)
        /// </summary>
        [JsonPropertyName("viewer")]
        public App.Bsky.Graph.ListViewerState? Viewer { get; set; }

        /// <summary>
        /// Gets or sets the indexedAt.
        /// </summary>
        [JsonPropertyName("indexedAt")]
        [JsonRequired]
        public DateTime? IndexedAt { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "app.bsky.graph.defs#listView";

        public const string RecordType = "app.bsky.graph.defs#listView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<App.Bsky.Graph.ListView>(this, (JsonTypeInfo<App.Bsky.Graph.ListView>)SourceGenerationContext.Default.AppBskyGraphListView)!;
        }

        public static ListView FromJson(string json)
        {
            return JsonSerializer.Deserialize<App.Bsky.Graph.ListView>(json, (JsonTypeInfo<App.Bsky.Graph.ListView>)SourceGenerationContext.Default.AppBskyGraphListView)!;
        }
    }
}

