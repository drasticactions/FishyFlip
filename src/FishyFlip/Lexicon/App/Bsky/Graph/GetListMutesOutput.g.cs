// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Graph
{
    public partial class GetListMutesOutput : ATObject, ICBOREncodable<GetListMutesOutput>, IJsonEncodable<GetListMutesOutput>, IParsable<GetListMutesOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="GetListMutesOutput"/> class.
        /// </summary>
        /// <param name="cursor"></param>
        /// <param name="lists"></param>
        public GetListMutesOutput(string? cursor = default, List<FishyFlip.Lexicon.App.Bsky.Graph.ListView> lists = default)
        {
            this.Cursor = cursor;
            this.Lists = lists;
            this.Type = "app.bsky.graph.getListMutes#GetListMutesOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetListMutesOutput"/> class.
        /// </summary>
        public GetListMutesOutput()
        {
            this.Type = "app.bsky.graph.getListMutes#GetListMutesOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetListMutesOutput"/> class.
        /// </summary>
        public GetListMutesOutput(CBORObject obj)
        {
            if (obj["cursor"] is not null) this.Cursor = obj["cursor"].AsString();
            if (obj["lists"] is not null) this.Lists = obj["lists"].Values.Select(n =>new FishyFlip.Lexicon.App.Bsky.Graph.ListView(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the cursor.
        /// </summary>
        [JsonPropertyName("cursor")]
        public string? Cursor { get; set; }

        /// <summary>
        /// Gets or sets the lists.
        /// </summary>
        [JsonPropertyName("lists")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.App.Bsky.Graph.ListView> Lists { get; set; }

        public const string RecordType = "app.bsky.graph.getListMutes#GetListMutesOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Graph.GetListMutesOutput>)SourceGenerationContext.Default.AppBskyGraphGetListMutesOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Graph.GetListMutesOutput>)SourceGenerationContext.Default.AppBskyGraphGetListMutesOutput);
        }

        public static new GetListMutesOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Graph.GetListMutesOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Graph.GetListMutesOutput>)SourceGenerationContext.Default.AppBskyGraphGetListMutesOutput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new GetListMutesOutput FromCBORObject(CBORObject obj)
        {
            return new GetListMutesOutput(obj);
        }

        /// <inheritdoc/>
        public static GetListMutesOutput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<GetListMutesOutput>(s, (JsonTypeInfo<GetListMutesOutput>)SourceGenerationContext.Default.AppBskyGraphGetListMutesOutput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out GetListMutesOutput result)
        {
            result = JsonSerializer.Deserialize<GetListMutesOutput>(s, (JsonTypeInfo<GetListMutesOutput>)SourceGenerationContext.Default.AppBskyGraphGetListMutesOutput);
            return result != null;
        }
    }
}

