// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Video
{

    /// <summary>
    /// app.bsky.video Endpoint Group.
    /// </summary>
    public static class VideoEndpoints
    {

       public const string GetJobStatus = "/xrpc/app.bsky.video.getJobStatus";

       public const string GetUploadLimits = "/xrpc/app.bsky.video.getUploadLimits";

       public const string UploadVideo = "/xrpc/app.bsky.video.uploadVideo";


        /// <summary>
        /// Get status details for a video processing job.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="jobId"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Video.GetJobStatusOutput?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Video.GetJobStatusOutput?>> GetJobStatusAsync (this FishyFlip.ATProtocol atp, string jobId, CancellationToken cancellationToken = default)
        {
            var endpointUrl = GetJobStatus.ToString();
            endpointUrl += "?";
            List<string> queryStrings = new();
            queryStrings.Add("jobId=" + jobId);

            var headers = new Dictionary<string, string>();
            headers.Add(Constants.AtProtoAcceptLabelers, atp.Options.LabelDefinitionsHeader);
            endpointUrl += string.Join("&", queryStrings);
            JsonTypeInfo<App.Bsky.Video.GetJobStatusOutput> jsonTypeInfo = (JsonTypeInfo<App.Bsky.Video.GetJobStatusOutput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(App.Bsky.Video.GetJobStatusOutput), atp.Options.JsonSerializerOptions)!;
            return atp.Get<FishyFlip.Lexicon.App.Bsky.Video.GetJobStatusOutput>(endpointUrl, jsonTypeInfo, cancellationToken, headers);
        }


        /// <summary>
        /// Get video upload limits for the authenticated user.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Video.GetUploadLimitsOutput?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Video.GetUploadLimitsOutput?>> GetUploadLimitsAsync (this FishyFlip.ATProtocol atp, CancellationToken cancellationToken = default)
        {
            var endpointUrl = GetUploadLimits.ToString();
            var headers = new Dictionary<string, string>();
            headers.Add(Constants.AtProtoAcceptLabelers, atp.Options.LabelDefinitionsHeader);
            JsonTypeInfo<App.Bsky.Video.GetUploadLimitsOutput> jsonTypeInfo = (JsonTypeInfo<App.Bsky.Video.GetUploadLimitsOutput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(App.Bsky.Video.GetUploadLimitsOutput), atp.Options.JsonSerializerOptions)!;
            return atp.Get<FishyFlip.Lexicon.App.Bsky.Video.GetUploadLimitsOutput>(endpointUrl, jsonTypeInfo, cancellationToken, headers);
        }


        /// <summary>
        /// Upload a video to be processed then stored on the PDS.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.App.Bsky.Video.UploadVideoOutput?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Video.UploadVideoOutput?>> UploadVideoAsync (this FishyFlip.ATProtocol atp, CancellationToken cancellationToken = default)
        {
            var endpointUrl = UploadVideo.ToString();
            var headers = new Dictionary<string, string>();
            JsonTypeInfo<App.Bsky.Video.UploadVideoOutput> jsonTypeInfo = (JsonTypeInfo<App.Bsky.Video.UploadVideoOutput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(App.Bsky.Video.UploadVideoOutput), atp.Options.JsonSerializerOptions)!;
            return atp.Post<FishyFlip.Lexicon.App.Bsky.Video.UploadVideoOutput?>(endpointUrl, jsonTypeInfo, cancellationToken, headers);
        }

    }
}

