// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Feed
{
    public partial class SendInteractionsInput : ATObject, ICBOREncodable<SendInteractionsInput>, IJsonEncodable<SendInteractionsInput>, IParsable<SendInteractionsInput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="SendInteractionsInput"/> class.
        /// </summary>
        /// <param name="interactions"></param>
        public SendInteractionsInput(List<FishyFlip.Lexicon.App.Bsky.Feed.Interaction> interactions = default)
        {
            this.Interactions = interactions;
            this.Type = "app.bsky.feed.sendInteractions#SendInteractionsInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SendInteractionsInput"/> class.
        /// </summary>
        public SendInteractionsInput()
        {
            this.Type = "app.bsky.feed.sendInteractions#SendInteractionsInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SendInteractionsInput"/> class.
        /// </summary>
        public SendInteractionsInput(CBORObject obj)
        {
            if (obj["interactions"] is not null) this.Interactions = obj["interactions"].Values.Select(n =>new FishyFlip.Lexicon.App.Bsky.Feed.Interaction(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the interactions.
        /// </summary>
        [JsonPropertyName("interactions")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.App.Bsky.Feed.Interaction> Interactions { get; set; }

        public const string RecordType = "app.bsky.feed.sendInteractions#SendInteractionsInput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.SendInteractionsInput>)SourceGenerationContext.Default.AppBskyFeedSendInteractionsInput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.SendInteractionsInput>)SourceGenerationContext.Default.AppBskyFeedSendInteractionsInput);
        }

        public static new SendInteractionsInput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Feed.SendInteractionsInput>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.SendInteractionsInput>)SourceGenerationContext.Default.AppBskyFeedSendInteractionsInput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new SendInteractionsInput FromCBORObject(CBORObject obj)
        {
            return new SendInteractionsInput(obj);
        }

        /// <inheritdoc/>
        public static SendInteractionsInput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<SendInteractionsInput>(s, (JsonTypeInfo<SendInteractionsInput>)SourceGenerationContext.Default.AppBskyFeedSendInteractionsInput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out SendInteractionsInput result)
        {
            result = JsonSerializer.Deserialize<SendInteractionsInput>(s, (JsonTypeInfo<SendInteractionsInput>)SourceGenerationContext.Default.AppBskyFeedSendInteractionsInput);
            return result != null;
        }
    }
}

