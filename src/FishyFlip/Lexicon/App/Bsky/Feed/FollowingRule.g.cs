// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Feed
{
    /// <summary>
    /// Allow replies from actors you follow.
    /// </summary>
    public partial class FollowingRule : ATObject, ICBOREncodable<FollowingRule>, IJsonEncodable<FollowingRule>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="FollowingRule"/> class.
        /// </summary>
        public FollowingRule()
        {
            this.Type = "app.bsky.feed.threadgate#followingRule";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="FollowingRule"/> class.
        /// </summary>
        public FollowingRule(CBORObject obj)
        {
        }

        public const string RecordType = "app.bsky.feed.threadgate#followingRule";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.FollowingRule>)SourceGenerationContext.Default.AppBskyFeedFollowingRule);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.FollowingRule>)SourceGenerationContext.Default.AppBskyFeedFollowingRule);
        }

        public static new FollowingRule FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Feed.FollowingRule>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.FollowingRule>)SourceGenerationContext.Default.AppBskyFeedFollowingRule)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new FollowingRule FromCBORObject(CBORObject obj)
        {
            return new FollowingRule(obj);
        }

    }
}

