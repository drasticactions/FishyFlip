// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Feed
{
    /// <summary>
    /// Record defining interaction gating rules for a thread (aka, reply controls). The record key (rkey) of the threadgate record must match the record key of the thread's root post, and that record must be in the same repository.
    /// </summary>
    public partial class Threadgate : ATObject, ICBOREncodable<Threadgate>, IJsonEncodable<Threadgate>, IParsable<Threadgate>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Threadgate"/> class.
        /// </summary>
        /// <param name="post">Reference (AT-URI) to the post record.</param>
        /// <param name="allow">List of rules defining who can reply to this post. If value is an empty array, no one can reply. If value is undefined, anyone can reply.
        /// <br/> Union Types: <br/>
        /// #mentionRule <br/>
        /// #followerRule <br/>
        /// #followingRule <br/>
        /// #listRule <br/>
        /// </param>
        /// <param name="createdAt"></param>
        /// <param name="hiddenReplies">List of hidden reply URIs.</param>
        public Threadgate(FishyFlip.Models.ATUri? post, List<ATObject>? allow = default, DateTime? createdAt = default, List<FishyFlip.Models.ATUri>? hiddenReplies = default)
        {
            this.Post = post;
            this.Allow = allow;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.HiddenReplies = hiddenReplies;
            this.Type = "app.bsky.feed.threadgate";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Threadgate"/> class.
        /// </summary>
        public Threadgate()
        {
            this.Type = "app.bsky.feed.threadgate";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Threadgate"/> class.
        /// </summary>
        public Threadgate(CBORObject obj)
        {
            if (obj["post"] is not null) this.Post = obj["post"].ToATUri();
            if (obj["allow"] is not null) this.Allow = obj["allow"].Values.Select(n =>n.ToATObject()).ToList();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["hiddenReplies"] is not null) this.HiddenReplies = obj["hiddenReplies"].Values.Select(n =>n.ToATUri()!).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the post.
        /// <br/> Reference (AT-URI) to the post record.
        /// </summary>
        [JsonPropertyName("post")]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri? Post { get; set; }

        /// <summary>
        /// Gets or sets the allow.
        /// <br/> List of rules defining who can reply to this post. If value is an empty array, no one can reply. If value is undefined, anyone can reply.
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Feed.MentionRule"/> (app.bsky.feed.threadgate#mentionRule) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Feed.FollowerRule"/> (app.bsky.feed.threadgate#followerRule) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Feed.FollowingRule"/> (app.bsky.feed.threadgate#followingRule) <br/>
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Feed.ListRule"/> (app.bsky.feed.threadgate#listRule) <br/>
        /// </summary>
        [JsonPropertyName("allow")]
        public List<ATObject>? Allow { get; set; }

        /// <summary>
        /// Gets or sets the createdAt.
        /// </summary>
        [JsonPropertyName("createdAt")]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the hiddenReplies.
        /// <br/> List of hidden reply URIs.
        /// </summary>
        [JsonPropertyName("hiddenReplies")]
        public List<FishyFlip.Models.ATUri>? HiddenReplies { get; set; }

        public const string RecordType = "app.bsky.feed.threadgate";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.Threadgate>)SourceGenerationContext.Default.AppBskyFeedThreadgate);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.Threadgate>)SourceGenerationContext.Default.AppBskyFeedThreadgate);
        }

        public static new Threadgate FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Feed.Threadgate>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.Threadgate>)SourceGenerationContext.Default.AppBskyFeedThreadgate)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new Threadgate FromCBORObject(CBORObject obj)
        {
            return new Threadgate(obj);
        }

        /// <inheritdoc/>
        public static Threadgate Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<Threadgate>(s, (JsonTypeInfo<Threadgate>)SourceGenerationContext.Default.AppBskyFeedThreadgate)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out Threadgate result)
        {
            result = JsonSerializer.Deserialize<Threadgate>(s, (JsonTypeInfo<Threadgate>)SourceGenerationContext.Default.AppBskyFeedThreadgate);
            return result != null;
        }
    }
}

