// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Feed
{
    public partial class LikeDef : ATObject, ICBOREncodable<LikeDef>, IJsonEncodable<LikeDef>, IParsable<LikeDef>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="LikeDef"/> class.
        /// </summary>
        /// <param name="indexedAt"></param>
        /// <param name="createdAt"></param>
        /// <param name="actor">
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileView"/> (app.bsky.actor.defs#profileView)
        /// </param>
        public LikeDef(DateTime? indexedAt = default, DateTime? createdAt = default, FishyFlip.Lexicon.App.Bsky.Actor.ProfileView actor = default)
        {
            this.IndexedAt = indexedAt;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.Actor = actor;
            this.Type = "app.bsky.feed.getLikes#like";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="LikeDef"/> class.
        /// </summary>
        public LikeDef()
        {
            this.Type = "app.bsky.feed.getLikes#like";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="LikeDef"/> class.
        /// </summary>
        public LikeDef(CBORObject obj)
        {
            if (obj["indexedAt"] is not null) this.IndexedAt = obj["indexedAt"].ToDateTime();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["actor"] is not null) this.Actor = new FishyFlip.Lexicon.App.Bsky.Actor.ProfileView(obj["actor"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the indexedAt.
        /// </summary>
        [JsonPropertyName("indexedAt")]
        [JsonRequired]
        public DateTime? IndexedAt { get; set; }

        /// <summary>
        /// Gets or sets the createdAt.
        /// </summary>
        [JsonPropertyName("createdAt")]
        [JsonRequired]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the actor.
        /// <br/> <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileView"/> (app.bsky.actor.defs#profileView)
        /// </summary>
        [JsonPropertyName("actor")]
        [JsonRequired]
        public FishyFlip.Lexicon.App.Bsky.Actor.ProfileView Actor { get; set; }

        public const string RecordType = "app.bsky.feed.getLikes#like";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.LikeDef>)SourceGenerationContext.Default.AppBskyFeedLikeDef);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.LikeDef>)SourceGenerationContext.Default.AppBskyFeedLikeDef);
        }

        public static new LikeDef FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Feed.LikeDef>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.LikeDef>)SourceGenerationContext.Default.AppBskyFeedLikeDef)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new LikeDef FromCBORObject(CBORObject obj)
        {
            return new LikeDef(obj);
        }

        /// <inheritdoc/>
        public static LikeDef Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<LikeDef>(s, (JsonTypeInfo<LikeDef>)SourceGenerationContext.Default.AppBskyFeedLikeDef)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out LikeDef result)
        {
            result = JsonSerializer.Deserialize<LikeDef>(s, (JsonTypeInfo<LikeDef>)SourceGenerationContext.Default.AppBskyFeedLikeDef);
            return result != null;
        }
    }
}

