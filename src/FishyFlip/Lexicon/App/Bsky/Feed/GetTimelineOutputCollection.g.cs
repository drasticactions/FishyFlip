// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Feed
{
    /// <summary>
    /// GetTimelineOutput Collection.
    /// </summary>
    public class GetTimelineOutputCollection : ATObjectCollectionBase<FishyFlip.Lexicon.App.Bsky.Feed.FeedViewPost>, IAsyncEnumerable<FishyFlip.Lexicon.App.Bsky.Feed.FeedViewPost>
    {

        public GetTimelineOutputCollection(FishyFlip.ATProtocol atp, string? algorithm = default, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
             : base(atp)
        {
            this.Algorithm = algorithm;
            this.Limit = limit;
            this.Cursor = cursor;
            this.CancellationToken = cancellationToken;
        }

        public string? Algorithm { get; }

        /// <inheritdoc/>
        public override async Task<(IList<FishyFlip.Lexicon.App.Bsky.Feed.FeedViewPost> Posts, string Cursor)> GetRecordsAsync(int? limit = null, CancellationToken? token = default)
        {
            token = token ?? this.CancellationToken ?? System.Threading.CancellationToken.None;
            var (result, error) = await this.ATProtocol.GetTimelineAsync(algorithm: this.Algorithm, limit: limit, cursor: this.Cursor, cancellationToken: token.Value!);

            this.HandleATError(error);

            if (result == null || result.Feed == null)
            {
                throw new InvalidOperationException("The result or its properties cannot be null.");
            }

            return (result.Feed, result.Cursor ?? string.Empty);
        }

        public static GetTimelineOutputCollection Create(FishyFlip.ATProtocol atp, string? algorithm = default, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            return new(atp: atp, algorithm: algorithm, limit: limit, cursor: cursor, cancellationToken: cancellationToken);
        }
    }
}

