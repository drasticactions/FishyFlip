// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.App.Bsky.Feed
{
    public partial class PostView : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="PostView"/> class.
        /// </summary>
        /// <param name="uri"></param>
        /// <param name="cid"></param>
        /// <param name="author">
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewBasic"/> (app.bsky.actor.defs#profileViewBasic)
        /// </param>
        /// <param name="record"></param>
        /// <param name="embed">
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewImages"/> (app.bsky.embed.images#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewVideo"/> (app.bsky.embed.video#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewExternal"/> (app.bsky.embed.external#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewRecordDef"/> (app.bsky.embed.record#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewRecordWithMedia"/> (app.bsky.embed.recordWithMedia#view)
        /// </param>
        /// <param name="replyCount"></param>
        /// <param name="repostCount"></param>
        /// <param name="likeCount"></param>
        /// <param name="quoteCount"></param>
        /// <param name="indexedAt"></param>
        /// <param name="viewer">
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Feed.ViewerState"/> (app.bsky.feed.defs#viewerState)
        /// </param>
        /// <param name="labels"></param>
        /// <param name="threadgate">
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Feed.ThreadgateView"/> (app.bsky.feed.defs#threadgateView)
        /// </param>
        public PostView(FishyFlip.Models.ATUri? uri = default, string? cid = default, App.Bsky.Actor.ProfileViewBasic? author = default, ATObject? record = default, ATObject? embed = default, long? replyCount = default, long? repostCount = default, long? likeCount = default, long? quoteCount = default, DateTime? indexedAt = default, App.Bsky.Feed.ViewerState? viewer = default, List<Com.Atproto.Label.Label>? labels = default, App.Bsky.Feed.ThreadgateView? threadgate = default)
        {
            this.Uri = uri;
            this.Cid = cid;
            this.Author = author;
            this.Record = record;
            this.Embed = embed;
            this.ReplyCount = replyCount;
            this.RepostCount = repostCount;
            this.LikeCount = likeCount;
            this.QuoteCount = quoteCount;
            this.IndexedAt = indexedAt;
            this.Viewer = viewer;
            this.Labels = labels;
            this.Threadgate = threadgate;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="PostView"/> class.
        /// </summary>
        public PostView()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="PostView"/> class.
        /// </summary>
        public PostView(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["cid"] is not null) this.Cid = obj["cid"].AsString();
            if (obj["author"] is not null) this.Author = new App.Bsky.Actor.ProfileViewBasic(obj["author"]);
            if (obj["record"] is not null) this.Record = obj["record"].ToATObject();
            if (obj["embed"] is not null) this.Embed = obj["embed"].ToATObject();
            if (obj["replyCount"] is not null) this.ReplyCount = obj["replyCount"].AsInt64Value();
            if (obj["repostCount"] is not null) this.RepostCount = obj["repostCount"].AsInt64Value();
            if (obj["likeCount"] is not null) this.LikeCount = obj["likeCount"].AsInt64Value();
            if (obj["quoteCount"] is not null) this.QuoteCount = obj["quoteCount"].AsInt64Value();
            if (obj["indexedAt"] is not null) this.IndexedAt = obj["indexedAt"].ToDateTime();
            if (obj["viewer"] is not null) this.Viewer = new App.Bsky.Feed.ViewerState(obj["viewer"]);
            if (obj["labels"] is not null) this.Labels = obj["labels"].Values.Select(n =>new Com.Atproto.Label.Label(n)).ToList();
            if (obj["threadgate"] is not null) this.Threadgate = new App.Bsky.Feed.ThreadgateView(obj["threadgate"]);
        }

        /// <summary>
        /// Gets or sets the uri.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri? Uri { get; set; }

        /// <summary>
        /// Gets or sets the cid.
        /// </summary>
        [JsonPropertyName("cid")]
        [JsonRequired]
        public string? Cid { get; set; }

        /// <summary>
        /// Gets or sets the author.
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewBasic"/> (app.bsky.actor.defs#profileViewBasic)
        /// </summary>
        [JsonPropertyName("author")]
        [JsonRequired]
        public App.Bsky.Actor.ProfileViewBasic? Author { get; set; }

        /// <summary>
        /// Gets or sets the record.
        /// </summary>
        [JsonPropertyName("record")]
        [JsonRequired]
        public ATObject? Record { get; set; }

        /// <summary>
        /// Gets or sets the embed.
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewImages"/> (app.bsky.embed.images#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewVideo"/> (app.bsky.embed.video#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewExternal"/> (app.bsky.embed.external#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewRecordDef"/> (app.bsky.embed.record#view)
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Embed.ViewRecordWithMedia"/> (app.bsky.embed.recordWithMedia#view)
        /// </summary>
        [JsonPropertyName("embed")]
        public ATObject? Embed { get; set; }

        /// <summary>
        /// Gets or sets the replyCount.
        /// </summary>
        [JsonPropertyName("replyCount")]
        public long? ReplyCount { get; set; }

        /// <summary>
        /// Gets or sets the repostCount.
        /// </summary>
        [JsonPropertyName("repostCount")]
        public long? RepostCount { get; set; }

        /// <summary>
        /// Gets or sets the likeCount.
        /// </summary>
        [JsonPropertyName("likeCount")]
        public long? LikeCount { get; set; }

        /// <summary>
        /// Gets or sets the quoteCount.
        /// </summary>
        [JsonPropertyName("quoteCount")]
        public long? QuoteCount { get; set; }

        /// <summary>
        /// Gets or sets the indexedAt.
        /// </summary>
        [JsonPropertyName("indexedAt")]
        [JsonRequired]
        public DateTime? IndexedAt { get; set; }

        /// <summary>
        /// Gets or sets the viewer.
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Feed.ViewerState"/> (app.bsky.feed.defs#viewerState)
        /// </summary>
        [JsonPropertyName("viewer")]
        public App.Bsky.Feed.ViewerState? Viewer { get; set; }

        /// <summary>
        /// Gets or sets the labels.
        /// </summary>
        [JsonPropertyName("labels")]
        public List<Com.Atproto.Label.Label>? Labels { get; set; }

        /// <summary>
        /// Gets or sets the threadgate.
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Feed.ThreadgateView"/> (app.bsky.feed.defs#threadgateView)
        /// </summary>
        [JsonPropertyName("threadgate")]
        public App.Bsky.Feed.ThreadgateView? Threadgate { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "app.bsky.feed.defs#postView";

        public const string RecordType = "app.bsky.feed.defs#postView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<App.Bsky.Feed.PostView>(this, (JsonTypeInfo<App.Bsky.Feed.PostView>)SourceGenerationContext.Default.AppBskyFeedPostView)!;
        }

        public static PostView FromJson(string json)
        {
            return JsonSerializer.Deserialize<App.Bsky.Feed.PostView>(json, (JsonTypeInfo<App.Bsky.Feed.PostView>)SourceGenerationContext.Default.AppBskyFeedPostView)!;
        }
    }
}

