// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Feed
{
    public partial class SkeletonReasonRepost : ATObject, ICBOREncodable<SkeletonReasonRepost>, IJsonEncodable<SkeletonReasonRepost>, IParsable<SkeletonReasonRepost>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="SkeletonReasonRepost"/> class.
        /// </summary>
        /// <param name="repost"></param>
        public SkeletonReasonRepost(FishyFlip.Models.ATUri repost = default)
        {
            this.Repost = repost;
            this.Type = "app.bsky.feed.defs#skeletonReasonRepost";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SkeletonReasonRepost"/> class.
        /// </summary>
        public SkeletonReasonRepost()
        {
            this.Type = "app.bsky.feed.defs#skeletonReasonRepost";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SkeletonReasonRepost"/> class.
        /// </summary>
        public SkeletonReasonRepost(CBORObject obj)
        {
            if (obj["repost"] is not null) this.Repost = obj["repost"].ToATUri();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the repost.
        /// </summary>
        [JsonPropertyName("repost")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri Repost { get; set; }

        public const string RecordType = "app.bsky.feed.defs#skeletonReasonRepost";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.SkeletonReasonRepost>)SourceGenerationContext.Default.AppBskyFeedSkeletonReasonRepost);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.SkeletonReasonRepost>)SourceGenerationContext.Default.AppBskyFeedSkeletonReasonRepost);
        }

        public static new SkeletonReasonRepost FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.App.Bsky.Feed.SkeletonReasonRepost>(json, (JsonTypeInfo<FishyFlip.Lexicon.App.Bsky.Feed.SkeletonReasonRepost>)SourceGenerationContext.Default.AppBskyFeedSkeletonReasonRepost)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new SkeletonReasonRepost FromCBORObject(CBORObject obj)
        {
            return new SkeletonReasonRepost(obj);
        }

        /// <inheritdoc/>
        public static SkeletonReasonRepost Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<SkeletonReasonRepost>(s, (JsonTypeInfo<SkeletonReasonRepost>)SourceGenerationContext.Default.AppBskyFeedSkeletonReasonRepost)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out SkeletonReasonRepost result)
        {
            result = JsonSerializer.Deserialize<SkeletonReasonRepost>(s, (JsonTypeInfo<SkeletonReasonRepost>)SourceGenerationContext.Default.AppBskyFeedSkeletonReasonRepost);
            return result != null;
        }
    }
}

