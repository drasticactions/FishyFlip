// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.App.Bsky.Feed
{
    /// <summary>
    /// GetActorFeedsOutput Collection.
    /// </summary>
    public class GetActorFeedsOutputCollection : ATObjectCollectionBase<FishyFlip.Lexicon.App.Bsky.Feed.GeneratorView>, IAsyncEnumerable<FishyFlip.Lexicon.App.Bsky.Feed.GeneratorView>
    {

        public GetActorFeedsOutputCollection(FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
             : base(atp)
        {
            this.Actor = actor;
            this.Limit = limit;
            this.Cursor = cursor;
            this.CancellationToken = cancellationToken;
        }

        public FishyFlip.Models.ATIdentifier Actor { get; }

        /// <inheritdoc/>
        public override async Task<(IList<FishyFlip.Lexicon.App.Bsky.Feed.GeneratorView> Posts, string Cursor)> GetRecordsAsync(int? limit = null, CancellationToken? token = default)
        {
            token = token ?? this.CancellationToken ?? System.Threading.CancellationToken.None;
            var (result, error) = await this.ATProtocol.GetActorFeedsAsync(actor: this.Actor, limit: limit, cursor: this.Cursor, cancellationToken: token.Value!);

            this.HandleATError(error);

            if (result == null || result.Feeds == null)
            {
                throw new InvalidOperationException("The result or its properties cannot be null.");
            }

            return (result.Feeds, result.Cursor ?? string.Empty);
        }

        public static GetActorFeedsOutputCollection Create(FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            return new(atp: atp, actor: actor, limit: limit, cursor: cursor, cancellationToken: cancellationToken);
        }
    }
}

