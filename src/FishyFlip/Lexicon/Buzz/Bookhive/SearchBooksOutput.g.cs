// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Buzz.Bookhive
{
    public partial class SearchBooksOutput : ATObject, ICBOREncodable<SearchBooksOutput>, IJsonEncodable<SearchBooksOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="SearchBooksOutput"/> class.
        /// </summary>
        /// <param name="offset">The next offset to use for pagination (result of limit + offset)</param>
        /// <param name="books"></param>
        public SearchBooksOutput(long? offset = default, List<FishyFlip.Lexicon.Buzz.Bookhive.HiveBook> books = default)
        {
            this.Offset = offset;
            this.Books = books;
            this.Type = "buzz.bookhive.searchBooks#SearchBooksOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SearchBooksOutput"/> class.
        /// </summary>
        public SearchBooksOutput()
        {
            this.Type = "buzz.bookhive.searchBooks#SearchBooksOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SearchBooksOutput"/> class.
        /// </summary>
        public SearchBooksOutput(CBORObject obj)
        {
            if (obj["offset"] is not null) this.Offset = obj["offset"].AsInt64Value();
            if (obj["books"] is not null) this.Books = obj["books"].Values.Select(n =>new FishyFlip.Lexicon.Buzz.Bookhive.HiveBook(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the offset.
        /// <br/> The next offset to use for pagination (result of limit + offset)
        /// </summary>
        [JsonPropertyName("offset")]
        public long? Offset { get; set; }

        /// <summary>
        /// Gets or sets the books.
        /// </summary>
        [JsonPropertyName("books")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.Buzz.Bookhive.HiveBook> Books { get; set; }

        public const string RecordType = "buzz.bookhive.searchBooks#SearchBooksOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Buzz.Bookhive.SearchBooksOutput>)SourceGenerationContext.Default.BuzzBookhiveSearchBooksOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Buzz.Bookhive.SearchBooksOutput>)SourceGenerationContext.Default.BuzzBookhiveSearchBooksOutput);
        }

        public static new SearchBooksOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Buzz.Bookhive.SearchBooksOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Buzz.Bookhive.SearchBooksOutput>)SourceGenerationContext.Default.BuzzBookhiveSearchBooksOutput)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new SearchBooksOutput FromCBORObject(CBORObject obj)
        {
            return new SearchBooksOutput(obj);
        }

    }
}

