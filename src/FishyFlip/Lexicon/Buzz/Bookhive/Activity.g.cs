// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Buzz.Bookhive
{
    public partial class Activity : ATObject, ICBOREncodable<Activity>, IJsonEncodable<Activity>, IParsable<Activity>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Activity"/> class.
        /// </summary>
        /// <param name="type">
        /// <br/> Known Values: <br/>
        /// review <br/>
        /// rated <br/>
        /// started <br/>
        /// finished <br/>
        /// </param>
        /// <param name="createdAt"></param>
        /// <param name="hiveId">The hive id of the book</param>
        /// <param name="title">The title of the book</param>
        public Activity(string type = default, DateTime? createdAt = default, string hiveId = default, string title = default)
        {
            this.TypeValue = type;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.HiveId = hiveId;
            this.Title = title;
            this.Type = "buzz.bookhive.defs#activity";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Activity"/> class.
        /// </summary>
        public Activity()
        {
            this.Type = "buzz.bookhive.defs#activity";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Activity"/> class.
        /// </summary>
        public Activity(CBORObject obj)
        {
            if (obj["type"] is not null) this.TypeValue = obj["type"].AsString();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["hiveId"] is not null) this.HiveId = obj["hiveId"].AsString();
            if (obj["title"] is not null) this.Title = obj["title"].AsString();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the type.
        /// <br/> Known Values: <br/>
        /// review <br/>
        /// rated <br/>
        /// started <br/>
        /// finished <br/>
        /// </summary>
        [JsonPropertyName("type")]
        [JsonRequired]
        public string TypeValue { get; set; }

        /// <summary>
        /// Gets or sets the createdAt.
        /// </summary>
        [JsonPropertyName("createdAt")]
        [JsonRequired]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the hiveId.
        /// <br/> The hive id of the book
        /// </summary>
        [JsonPropertyName("hiveId")]
        [JsonRequired]
        public string HiveId { get; set; }

        /// <summary>
        /// Gets or sets the title.
        /// <br/> The title of the book
        /// </summary>
        [JsonPropertyName("title")]
        [JsonRequired]
        public string Title { get; set; }

        public const string RecordType = "buzz.bookhive.defs#activity";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Buzz.Bookhive.Activity>)SourceGenerationContext.Default.BuzzBookhiveActivity);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Buzz.Bookhive.Activity>)SourceGenerationContext.Default.BuzzBookhiveActivity);
        }

        public static new Activity FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Buzz.Bookhive.Activity>(json, (JsonTypeInfo<FishyFlip.Lexicon.Buzz.Bookhive.Activity>)SourceGenerationContext.Default.BuzzBookhiveActivity)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new Activity FromCBORObject(CBORObject obj)
        {
            return new Activity(obj);
        }

        /// <inheritdoc/>
        public static Activity Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<Activity>(s, (JsonTypeInfo<Activity>)SourceGenerationContext.Default.BuzzBookhiveActivity)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out Activity result)
        {
            result = JsonSerializer.Deserialize<Activity>(s, (JsonTypeInfo<Activity>)SourceGenerationContext.Default.BuzzBookhiveActivity);
            return result != null;
        }
    }
}

