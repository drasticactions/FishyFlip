// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Buzz.Bookhive
{
    /// <summary>
    /// A book within the hive
    /// </summary>
    public partial class HiveBook : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="HiveBook"/> class.
        /// </summary>
        /// <param name="title">The title of the book</param>
        /// <param name="authors">The authors of the book (tab separated)</param>
        /// <param name="id">The book's hive id, used to correlate user's books with the hive</param>
        /// <param name="thumbnail">URL to thumbnail image</param>
        /// <param name="updatedAt"></param>
        /// <param name="source">The source service name (e.g. Goodreads)</param>
        /// <param name="sourceUrl">URL to the book on the source service</param>
        /// <param name="sourceId">ID of the book in the source service</param>
        /// <param name="cover">URL to full-size cover image</param>
        /// <param name="description">Book description/summary</param>
        /// <param name="rating">Average rating (0-1000)</param>
        /// <param name="ratingsCount">Number of ratings</param>
        /// <param name="createdAt"></param>
        public HiveBook(string? title, string? authors, string? id, string? thumbnail, DateTime? updatedAt, string? source = default, string? sourceUrl = default, string? sourceId = default, string? cover = default, string? description = default, long? rating = default, long? ratingsCount = default, DateTime? createdAt = default)
        {
            this.Title = title;
            this.Authors = authors;
            this.Id = id;
            this.Source = source;
            this.SourceUrl = sourceUrl;
            this.SourceId = sourceId;
            this.Cover = cover;
            this.Thumbnail = thumbnail;
            this.Description = description;
            this.Rating = rating;
            this.RatingsCount = ratingsCount;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.UpdatedAt = updatedAt;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="HiveBook"/> class.
        /// </summary>
        public HiveBook()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="HiveBook"/> class.
        /// </summary>
        public HiveBook(CBORObject obj)
        {
            if (obj["title"] is not null) this.Title = obj["title"].AsString();
            if (obj["authors"] is not null) this.Authors = obj["authors"].AsString();
            if (obj["id"] is not null) this.Id = obj["id"].AsString();
            if (obj["source"] is not null) this.Source = obj["source"].AsString();
            if (obj["sourceUrl"] is not null) this.SourceUrl = obj["sourceUrl"].AsString();
            if (obj["sourceId"] is not null) this.SourceId = obj["sourceId"].AsString();
            if (obj["cover"] is not null) this.Cover = obj["cover"].AsString();
            if (obj["thumbnail"] is not null) this.Thumbnail = obj["thumbnail"].AsString();
            if (obj["description"] is not null) this.Description = obj["description"].AsString();
            if (obj["rating"] is not null) this.Rating = obj["rating"].AsInt64Value();
            if (obj["ratingsCount"] is not null) this.RatingsCount = obj["ratingsCount"].AsInt64Value();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["updatedAt"] is not null) this.UpdatedAt = obj["updatedAt"].ToDateTime();
        }

        /// <summary>
        /// Gets or sets the title.
        /// <br/> The title of the book
        /// </summary>
        [JsonPropertyName("title")]
        public string? Title { get; set; }

        /// <summary>
        /// Gets or sets the authors.
        /// <br/> The authors of the book (tab separated)
        /// </summary>
        [JsonPropertyName("authors")]
        public string? Authors { get; set; }

        /// <summary>
        /// Gets or sets the id.
        /// <br/> The book's hive id, used to correlate user's books with the hive
        /// </summary>
        [JsonPropertyName("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Gets or sets the source.
        /// <br/> The source service name (e.g. Goodreads)
        /// </summary>
        [JsonPropertyName("source")]
        public string? Source { get; set; }

        /// <summary>
        /// Gets or sets the sourceUrl.
        /// <br/> URL to the book on the source service
        /// </summary>
        [JsonPropertyName("sourceUrl")]
        public string? SourceUrl { get; set; }

        /// <summary>
        /// Gets or sets the sourceId.
        /// <br/> ID of the book in the source service
        /// </summary>
        [JsonPropertyName("sourceId")]
        public string? SourceId { get; set; }

        /// <summary>
        /// Gets or sets the cover.
        /// <br/> URL to full-size cover image
        /// </summary>
        [JsonPropertyName("cover")]
        public string? Cover { get; set; }

        /// <summary>
        /// Gets or sets the thumbnail.
        /// <br/> URL to thumbnail image
        /// </summary>
        [JsonPropertyName("thumbnail")]
        public string? Thumbnail { get; set; }

        /// <summary>
        /// Gets or sets the description.
        /// <br/> Book description/summary
        /// </summary>
        [JsonPropertyName("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Gets or sets the rating.
        /// <br/> Average rating (0-1000)
        /// </summary>
        [JsonPropertyName("rating")]
        public long? Rating { get; set; }

        /// <summary>
        /// Gets or sets the ratingsCount.
        /// <br/> Number of ratings
        /// </summary>
        [JsonPropertyName("ratingsCount")]
        public long? RatingsCount { get; set; }

        /// <summary>
        /// Gets or sets the createdAt.
        /// </summary>
        [JsonPropertyName("createdAt")]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the updatedAt.
        /// </summary>
        [JsonPropertyName("updatedAt")]
        public DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "buzz.bookhive.hiveBook";

        public const string RecordType = "buzz.bookhive.hiveBook";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Buzz.Bookhive.HiveBook>(this, (JsonTypeInfo<Buzz.Bookhive.HiveBook>)SourceGenerationContext.Default.BuzzBookhiveHiveBook)!;
        }

        public static HiveBook FromJson(string json)
        {
            return JsonSerializer.Deserialize<Buzz.Bookhive.HiveBook>(json, (JsonTypeInfo<Buzz.Bookhive.HiveBook>)SourceGenerationContext.Default.BuzzBookhiveHiveBook)!;
        }
    }
}

