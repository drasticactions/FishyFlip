// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Buzz.Bookhive
{
    /// <summary>
    /// A book in the user's library
    /// </summary>
    public partial class Book : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Book"/> class.
        /// </summary>
        /// <param name="title">The title of the book</param>
        /// <param name="authors">The authors of the book (tab separated)</param>
        /// <param name="hiveId">The book's hive id, used to correlate user's books with the hive</param>
        /// <param name="createdAt"></param>
        /// <param name="startedAt">The date the user started reading the book</param>
        /// <param name="finishedAt">The date the user finished reading the book</param>
        /// <param name="cover">Cover image of the book</param>
        /// <param name="status">
        /// <br/> Known Values: <br/>
        /// finished - User has finished reading the book <br/>
        /// reading - User is currently reading the book <br/>
        /// wantToRead - User wants to read the book <br/>
        /// abandoned - User has abandoned the book <br/>
        /// owned - User owns the book <br/>
        /// </param>
        /// <param name="stars">Number of stars given to the book (1-10) which will be mapped to 1-5 stars</param>
        /// <param name="review">The book's review</param>
        public Book(string? title, string? authors, string? hiveId, DateTime? createdAt = default, DateTime? startedAt = default, DateTime? finishedAt = default, Blob? cover = default, string? status = default, long? stars = default, string? review = default)
        {
            this.Title = title;
            this.Authors = authors;
            this.HiveId = hiveId;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.StartedAt = startedAt;
            this.FinishedAt = finishedAt;
            this.Cover = cover;
            this.Status = status;
            this.Stars = stars;
            this.Review = review;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Book"/> class.
        /// </summary>
        public Book()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Book"/> class.
        /// </summary>
        public Book(CBORObject obj)
        {
            if (obj["title"] is not null) this.Title = obj["title"].AsString();
            if (obj["authors"] is not null) this.Authors = obj["authors"].AsString();
            if (obj["hiveId"] is not null) this.HiveId = obj["hiveId"].AsString();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["startedAt"] is not null) this.StartedAt = obj["startedAt"].ToDateTime();
            if (obj["finishedAt"] is not null) this.FinishedAt = obj["finishedAt"].ToDateTime();
            if (obj["cover"] is not null) this.Cover = new FishyFlip.Models.Blob(obj["cover"]);
            if (obj["status"] is not null) this.Status = obj["status"].AsString();
            if (obj["stars"] is not null) this.Stars = obj["stars"].AsInt64Value();
            if (obj["review"] is not null) this.Review = obj["review"].AsString();
        }

        /// <summary>
        /// Gets or sets the title.
        /// <br/> The title of the book
        /// </summary>
        [JsonPropertyName("title")]
        public string? Title { get; set; }

        /// <summary>
        /// Gets or sets the authors.
        /// <br/> The authors of the book (tab separated)
        /// </summary>
        [JsonPropertyName("authors")]
        public string? Authors { get; set; }

        /// <summary>
        /// Gets or sets the hiveId.
        /// <br/> The book's hive id, used to correlate user's books with the hive
        /// </summary>
        [JsonPropertyName("hiveId")]
        public string? HiveId { get; set; }

        /// <summary>
        /// Gets or sets the createdAt.
        /// </summary>
        [JsonPropertyName("createdAt")]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the startedAt.
        /// <br/> The date the user started reading the book
        /// </summary>
        [JsonPropertyName("startedAt")]
        public DateTime? StartedAt { get; set; }

        /// <summary>
        /// Gets or sets the finishedAt.
        /// <br/> The date the user finished reading the book
        /// </summary>
        [JsonPropertyName("finishedAt")]
        public DateTime? FinishedAt { get; set; }

        /// <summary>
        /// Gets or sets the cover.
        /// <br/> Cover image of the book
        /// </summary>
        [JsonPropertyName("cover")]
        public Blob? Cover { get; set; }

        /// <summary>
        /// Gets or sets the status.
        /// <br/> Known Values: <br/>
        /// finished - User has finished reading the book <br/>
        /// reading - User is currently reading the book <br/>
        /// wantToRead - User wants to read the book <br/>
        /// abandoned - User has abandoned the book <br/>
        /// owned - User owns the book <br/>
        /// </summary>
        [JsonPropertyName("status")]
        public string? Status { get; set; }

        /// <summary>
        /// Gets or sets the stars.
        /// <br/> Number of stars given to the book (1-10) which will be mapped to 1-5 stars
        /// </summary>
        [JsonPropertyName("stars")]
        public long? Stars { get; set; }

        /// <summary>
        /// Gets or sets the review.
        /// <br/> The book's review
        /// </summary>
        [JsonPropertyName("review")]
        public string? Review { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "buzz.bookhive.book";

        public const string RecordType = "buzz.bookhive.book";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<FishyFlip.Lexicon.Buzz.Bookhive.Book>(this, (JsonTypeInfo<FishyFlip.Lexicon.Buzz.Bookhive.Book>)SourceGenerationContext.Default.BuzzBookhiveBook)!;
        }

        public static Book FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Buzz.Bookhive.Book>(json, (JsonTypeInfo<FishyFlip.Lexicon.Buzz.Bookhive.Book>)SourceGenerationContext.Default.BuzzBookhiveBook)!;
        }
    }
}

