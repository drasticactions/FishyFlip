// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Whtwnd.Blog
{
    public partial class NotifyOfNewEntryOutput : ATObject, ICBOREncodable<NotifyOfNewEntryOutput>, IJsonEncodable<NotifyOfNewEntryOutput>, IParsable<NotifyOfNewEntryOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="NotifyOfNewEntryOutput"/> class.
        /// </summary>
        public NotifyOfNewEntryOutput()
        {
            this.Type = "com.whtwnd.blog.notifyOfNewEntry#NotifyOfNewEntryOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="NotifyOfNewEntryOutput"/> class.
        /// </summary>
        public NotifyOfNewEntryOutput(CBORObject obj)
        {
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        public const string RecordType = "com.whtwnd.blog.notifyOfNewEntry#NotifyOfNewEntryOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Whtwnd.Blog.NotifyOfNewEntryOutput>)SourceGenerationContext.Default.ComWhtwndBlogNotifyOfNewEntryOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Whtwnd.Blog.NotifyOfNewEntryOutput>)SourceGenerationContext.Default.ComWhtwndBlogNotifyOfNewEntryOutput);
        }

        public static new NotifyOfNewEntryOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Whtwnd.Blog.NotifyOfNewEntryOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Whtwnd.Blog.NotifyOfNewEntryOutput>)SourceGenerationContext.Default.ComWhtwndBlogNotifyOfNewEntryOutput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new NotifyOfNewEntryOutput FromCBORObject(CBORObject obj)
        {
            return new NotifyOfNewEntryOutput(obj);
        }

        /// <inheritdoc/>
        public static NotifyOfNewEntryOutput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<NotifyOfNewEntryOutput>(s, (JsonTypeInfo<NotifyOfNewEntryOutput>)SourceGenerationContext.Default.ComWhtwndBlogNotifyOfNewEntryOutput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out NotifyOfNewEntryOutput result)
        {
            result = JsonSerializer.Deserialize<NotifyOfNewEntryOutput>(s, (JsonTypeInfo<NotifyOfNewEntryOutput>)SourceGenerationContext.Default.ComWhtwndBlogNotifyOfNewEntryOutput);
            return result != null;
        }
    }
}

