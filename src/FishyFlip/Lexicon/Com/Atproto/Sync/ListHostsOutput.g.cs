// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Sync
{
    public partial class ListHostsOutput : ATObject, ICBOREncodable<ListHostsOutput>, IJsonEncodable<ListHostsOutput>, IParsable<ListHostsOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ListHostsOutput"/> class.
        /// </summary>
        /// <param name="cursor"></param>
        /// <param name="hosts">Sort order is not formally specified. Recommended order is by time host was first seen by the server, with oldest first.</param>
        public ListHostsOutput(string? cursor = default, List<FishyFlip.Lexicon.Com.Atproto.Sync.Host> hosts = default)
        {
            this.Cursor = cursor;
            this.Hosts = hosts;
            this.Type = "com.atproto.sync.listHosts#ListHostsOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ListHostsOutput"/> class.
        /// </summary>
        public ListHostsOutput()
        {
            this.Type = "com.atproto.sync.listHosts#ListHostsOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ListHostsOutput"/> class.
        /// </summary>
        public ListHostsOutput(CBORObject obj)
        {
            if (obj["cursor"] is not null) this.Cursor = obj["cursor"].AsString();
            if (obj["hosts"] is not null) this.Hosts = obj["hosts"].Values.Select(n =>new FishyFlip.Lexicon.Com.Atproto.Sync.Host(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the cursor.
        /// </summary>
        [JsonPropertyName("cursor")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Cursor { get; set; }

        /// <summary>
        /// Gets or sets the hosts.
        /// <br/> Sort order is not formally specified. Recommended order is by time host was first seen by the server, with oldest first.
        /// </summary>
        [JsonPropertyName("hosts")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.Com.Atproto.Sync.Host> Hosts { get; set; }

        public const string RecordType = "com.atproto.sync.listHosts#ListHostsOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Sync.ListHostsOutput>)SourceGenerationContext.Default.ComAtprotoSyncListHostsOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Sync.ListHostsOutput>)SourceGenerationContext.Default.ComAtprotoSyncListHostsOutput);
        }

        public static new ListHostsOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Sync.ListHostsOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Sync.ListHostsOutput>)SourceGenerationContext.Default.ComAtprotoSyncListHostsOutput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new ListHostsOutput FromCBORObject(CBORObject obj)
        {
            return new ListHostsOutput(obj);
        }

        /// <inheritdoc/>
        public static ListHostsOutput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<ListHostsOutput>(s, (JsonTypeInfo<ListHostsOutput>)SourceGenerationContext.Default.ComAtprotoSyncListHostsOutput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out ListHostsOutput result)
        {
            result = JsonSerializer.Deserialize<ListHostsOutput>(s, (JsonTypeInfo<ListHostsOutput>)SourceGenerationContext.Default.ComAtprotoSyncListHostsOutput);
            return result != null;
        }
    }
}

