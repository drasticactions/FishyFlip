// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Temp
{

    /// <summary>
    /// com.atproto.temp Endpoint Group.
    /// </summary>
    public static class TempEndpoints
    {

       public const string AddReservedHandle = "/xrpc/com.atproto.temp.addReservedHandle";

       public const string CheckSignupQueue = "/xrpc/com.atproto.temp.checkSignupQueue";

       public const string RequestPhoneVerification = "/xrpc/com.atproto.temp.requestPhoneVerification";


        /// <summary>
        /// Add a handle to the set of reserved handles.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="handle"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Atproto.Temp.AddReservedHandleOutput?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Temp.AddReservedHandleOutput?>> AddReservedHandleAsync (this FishyFlip.ATProtocol atp, string handle, CancellationToken cancellationToken = default)
        {
            var endpointUrl = AddReservedHandle.ToString();
            var headers = new Dictionary<string, string>();
            var inputItem = new AddReservedHandleInput();
            inputItem.Handle = handle;
            JsonTypeInfo<Com.Atproto.Temp.AddReservedHandleInput> jsonTypeInfo = (JsonTypeInfo<Com.Atproto.Temp.AddReservedHandleInput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Com.Atproto.Temp.AddReservedHandleInput), atp.Options.JsonSerializerOptions)!;
            JsonTypeInfo<Com.Atproto.Temp.AddReservedHandleOutput> jsonTypeInfo2 = (JsonTypeInfo<Com.Atproto.Temp.AddReservedHandleOutput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Com.Atproto.Temp.AddReservedHandleOutput), atp.Options.JsonSerializerOptions)!;
            return atp.Post<AddReservedHandleInput, FishyFlip.Lexicon.Com.Atproto.Temp.AddReservedHandleOutput?>(endpointUrl, jsonTypeInfo, jsonTypeInfo2, inputItem, cancellationToken, headers);
        }


        /// <summary>
        /// Check accounts location in signup queue.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Com.Atproto.Temp.CheckSignupQueueOutput?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Temp.CheckSignupQueueOutput?>> CheckSignupQueueAsync (this FishyFlip.ATProtocol atp, CancellationToken cancellationToken = default)
        {
            var endpointUrl = CheckSignupQueue.ToString();
            var headers = new Dictionary<string, string>();
            headers.Add(Constants.AtProtoAcceptLabelers, atp.Options.LabelDefinitionsHeader);
            JsonTypeInfo<Com.Atproto.Temp.CheckSignupQueueOutput> jsonTypeInfo = (JsonTypeInfo<Com.Atproto.Temp.CheckSignupQueueOutput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Com.Atproto.Temp.CheckSignupQueueOutput), atp.Options.JsonSerializerOptions)!;
            return atp.Get<FishyFlip.Lexicon.Com.Atproto.Temp.CheckSignupQueueOutput>(endpointUrl, jsonTypeInfo, cancellationToken, headers);
        }


        /// <summary>
        /// Request a verification code to be sent to the supplied phone number
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="phoneNumber"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success?"/></returns>
        public static Task<Result<Success?>> RequestPhoneVerificationAsync (this FishyFlip.ATProtocol atp, string phoneNumber, CancellationToken cancellationToken = default)
        {
            var endpointUrl = RequestPhoneVerification.ToString();
            var headers = new Dictionary<string, string>();
            var inputItem = new RequestPhoneVerificationInput();
            inputItem.PhoneNumber = phoneNumber;
            JsonTypeInfo<Com.Atproto.Temp.RequestPhoneVerificationInput> jsonTypeInfo = (JsonTypeInfo<Com.Atproto.Temp.RequestPhoneVerificationInput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Com.Atproto.Temp.RequestPhoneVerificationInput), atp.Options.JsonSerializerOptions)!;
            JsonTypeInfo<Success> jsonTypeInfo2 = (JsonTypeInfo<Success>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Success), atp.Options.JsonSerializerOptions)!;
            return atp.Post<RequestPhoneVerificationInput, Success?>(endpointUrl, jsonTypeInfo, jsonTypeInfo2, inputItem, cancellationToken, headers);
        }

    }
}

