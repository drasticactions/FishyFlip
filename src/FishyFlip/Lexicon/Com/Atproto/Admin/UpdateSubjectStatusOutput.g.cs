// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Admin
{
    public partial class UpdateSubjectStatusOutput : ATObject, ICBOREncodable<UpdateSubjectStatusOutput>, IJsonEncodable<UpdateSubjectStatusOutput>, IParsable<UpdateSubjectStatusOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateSubjectStatusOutput"/> class.
        /// </summary>
        /// <param name="subject">
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.RepoRef"/> (com.atproto.admin.defs#repoRef) <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef) <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.RepoBlobRef"/> (com.atproto.admin.defs#repoBlobRef) <br/>
        /// </param>
        /// <param name="takedown">
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.StatusAttr"/> (com.atproto.admin.defs#statusAttr)
        /// </param>
        public UpdateSubjectStatusOutput(ATObject subject = default, FishyFlip.Lexicon.Com.Atproto.Admin.StatusAttr? takedown = default)
        {
            this.Subject = subject;
            this.Takedown = takedown;
            this.Type = "com.atproto.admin.updateSubjectStatus#UpdateSubjectStatusOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateSubjectStatusOutput"/> class.
        /// </summary>
        public UpdateSubjectStatusOutput()
        {
            this.Type = "com.atproto.admin.updateSubjectStatus#UpdateSubjectStatusOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateSubjectStatusOutput"/> class.
        /// </summary>
        public UpdateSubjectStatusOutput(CBORObject obj)
        {
            if (obj["subject"] is not null) this.Subject = obj["subject"].ToATObject();
            if (obj["takedown"] is not null) this.Takedown = new FishyFlip.Lexicon.Com.Atproto.Admin.StatusAttr(obj["takedown"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the subject.
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.RepoRef"/> (com.atproto.admin.defs#repoRef) <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef) <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.RepoBlobRef"/> (com.atproto.admin.defs#repoBlobRef) <br/>
        /// </summary>
        [JsonPropertyName("subject")]
        [JsonRequired]
        public ATObject Subject { get; set; }

        /// <summary>
        /// Gets or sets the takedown.
        /// <br/> <see cref="FishyFlip.Lexicon.Com.Atproto.Admin.StatusAttr"/> (com.atproto.admin.defs#statusAttr)
        /// </summary>
        [JsonPropertyName("takedown")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public FishyFlip.Lexicon.Com.Atproto.Admin.StatusAttr? Takedown { get; set; }

        public const string RecordType = "com.atproto.admin.updateSubjectStatus#UpdateSubjectStatusOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.UpdateSubjectStatusOutput>)SourceGenerationContext.Default.ComAtprotoAdminUpdateSubjectStatusOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.UpdateSubjectStatusOutput>)SourceGenerationContext.Default.ComAtprotoAdminUpdateSubjectStatusOutput);
        }

        public static new UpdateSubjectStatusOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Admin.UpdateSubjectStatusOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.UpdateSubjectStatusOutput>)SourceGenerationContext.Default.ComAtprotoAdminUpdateSubjectStatusOutput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new UpdateSubjectStatusOutput FromCBORObject(CBORObject obj)
        {
            return new UpdateSubjectStatusOutput(obj);
        }

        /// <inheritdoc/>
        public static UpdateSubjectStatusOutput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<UpdateSubjectStatusOutput>(s, (JsonTypeInfo<UpdateSubjectStatusOutput>)SourceGenerationContext.Default.ComAtprotoAdminUpdateSubjectStatusOutput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out UpdateSubjectStatusOutput result)
        {
            result = JsonSerializer.Deserialize<UpdateSubjectStatusOutput>(s, (JsonTypeInfo<UpdateSubjectStatusOutput>)SourceGenerationContext.Default.ComAtprotoAdminUpdateSubjectStatusOutput);
            return result != null;
        }
    }
}

