// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Admin
{
    public partial class ThreatSignature : ATObject, ICBOREncodable<ThreatSignature>, IJsonEncodable<ThreatSignature>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ThreatSignature"/> class.
        /// </summary>
        /// <param name="property"></param>
        /// <param name="value"></param>
        public ThreatSignature(string property = default, string value = default)
        {
            this.Property = property;
            this.Value = value;
            this.Type = "com.atproto.admin.defs#threatSignature";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ThreatSignature"/> class.
        /// </summary>
        public ThreatSignature()
        {
            this.Type = "com.atproto.admin.defs#threatSignature";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ThreatSignature"/> class.
        /// </summary>
        public ThreatSignature(CBORObject obj)
        {
            if (obj["property"] is not null) this.Property = obj["property"].AsString();
            if (obj["value"] is not null) this.Value = obj["value"].AsString();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the property.
        /// </summary>
        [JsonPropertyName("property")]
        [JsonRequired]
        public string Property { get; set; }

        /// <summary>
        /// Gets or sets the value.
        /// </summary>
        [JsonPropertyName("value")]
        [JsonRequired]
        public string Value { get; set; }

        public const string RecordType = "com.atproto.admin.defs#threatSignature";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.ThreatSignature>)SourceGenerationContext.Default.ComAtprotoAdminThreatSignature);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.ThreatSignature>)SourceGenerationContext.Default.ComAtprotoAdminThreatSignature);
        }

        public static new ThreatSignature FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Admin.ThreatSignature>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.ThreatSignature>)SourceGenerationContext.Default.ComAtprotoAdminThreatSignature)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new ThreatSignature FromCBORObject(CBORObject obj)
        {
            return new ThreatSignature(obj);
        }

    }
}

