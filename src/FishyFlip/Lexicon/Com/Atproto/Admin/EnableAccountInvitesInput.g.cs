// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Admin
{
    public partial class EnableAccountInvitesInput : ATObject, ICBOREncodable<EnableAccountInvitesInput>, IJsonEncodable<EnableAccountInvitesInput>, IParsable<EnableAccountInvitesInput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="EnableAccountInvitesInput"/> class.
        /// </summary>
        /// <param name="account"></param>
        /// <param name="note">Optional reason for enabled invites.</param>
        public EnableAccountInvitesInput(FishyFlip.Models.ATDid account = default, string? note = default)
        {
            this.Account = account;
            this.Note = note;
            this.Type = "com.atproto.admin.enableAccountInvites#EnableAccountInvitesInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="EnableAccountInvitesInput"/> class.
        /// </summary>
        public EnableAccountInvitesInput()
        {
            this.Type = "com.atproto.admin.enableAccountInvites#EnableAccountInvitesInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="EnableAccountInvitesInput"/> class.
        /// </summary>
        public EnableAccountInvitesInput(CBORObject obj)
        {
            if (obj["account"] is not null) this.Account = obj["account"].ToATDid();
            if (obj["note"] is not null) this.Note = obj["note"].AsString();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the account.
        /// </summary>
        [JsonPropertyName("account")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid Account { get; set; }

        /// <summary>
        /// Gets or sets the note.
        /// <br/> Optional reason for enabled invites.
        /// </summary>
        [JsonPropertyName("note")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Note { get; set; }

        public const string RecordType = "com.atproto.admin.enableAccountInvites#EnableAccountInvitesInput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.EnableAccountInvitesInput>)SourceGenerationContext.Default.ComAtprotoAdminEnableAccountInvitesInput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.EnableAccountInvitesInput>)SourceGenerationContext.Default.ComAtprotoAdminEnableAccountInvitesInput);
        }

        public static new EnableAccountInvitesInput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Admin.EnableAccountInvitesInput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.EnableAccountInvitesInput>)SourceGenerationContext.Default.ComAtprotoAdminEnableAccountInvitesInput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new EnableAccountInvitesInput FromCBORObject(CBORObject obj)
        {
            return new EnableAccountInvitesInput(obj);
        }

        /// <inheritdoc/>
        public static EnableAccountInvitesInput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<EnableAccountInvitesInput>(s, (JsonTypeInfo<EnableAccountInvitesInput>)SourceGenerationContext.Default.ComAtprotoAdminEnableAccountInvitesInput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out EnableAccountInvitesInput result)
        {
            result = JsonSerializer.Deserialize<EnableAccountInvitesInput>(s, (JsonTypeInfo<EnableAccountInvitesInput>)SourceGenerationContext.Default.ComAtprotoAdminEnableAccountInvitesInput);
            return result != null;
        }
    }
}

