// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Admin
{
    public partial class UpdateAccountSigningKeyInput : ATObject, ICBOREncodable<UpdateAccountSigningKeyInput>, IJsonEncodable<UpdateAccountSigningKeyInput>, IParsable<UpdateAccountSigningKeyInput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAccountSigningKeyInput"/> class.
        /// </summary>
        /// <param name="did"></param>
        /// <param name="signingKey">Did-key formatted public key</param>
        public UpdateAccountSigningKeyInput(FishyFlip.Models.ATDid did = default, FishyFlip.Models.ATDid signingKey = default)
        {
            this.Did = did;
            this.SigningKey = signingKey;
            this.Type = "com.atproto.admin.updateAccountSigningKey#UpdateAccountSigningKeyInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAccountSigningKeyInput"/> class.
        /// </summary>
        public UpdateAccountSigningKeyInput()
        {
            this.Type = "com.atproto.admin.updateAccountSigningKey#UpdateAccountSigningKeyInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAccountSigningKeyInput"/> class.
        /// </summary>
        public UpdateAccountSigningKeyInput(CBORObject obj)
        {
            if (obj["did"] is not null) this.Did = obj["did"].ToATDid();
            if (obj["signingKey"] is not null) this.SigningKey = obj["signingKey"].ToATDid();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the did.
        /// </summary>
        [JsonPropertyName("did")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid Did { get; set; }

        /// <summary>
        /// Gets or sets the signingKey.
        /// <br/> Did-key formatted public key
        /// </summary>
        [JsonPropertyName("signingKey")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid SigningKey { get; set; }

        public const string RecordType = "com.atproto.admin.updateAccountSigningKey#UpdateAccountSigningKeyInput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.UpdateAccountSigningKeyInput>)SourceGenerationContext.Default.ComAtprotoAdminUpdateAccountSigningKeyInput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.UpdateAccountSigningKeyInput>)SourceGenerationContext.Default.ComAtprotoAdminUpdateAccountSigningKeyInput);
        }

        public static new UpdateAccountSigningKeyInput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Admin.UpdateAccountSigningKeyInput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Admin.UpdateAccountSigningKeyInput>)SourceGenerationContext.Default.ComAtprotoAdminUpdateAccountSigningKeyInput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new UpdateAccountSigningKeyInput FromCBORObject(CBORObject obj)
        {
            return new UpdateAccountSigningKeyInput(obj);
        }

        /// <inheritdoc/>
        public static UpdateAccountSigningKeyInput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<UpdateAccountSigningKeyInput>(s, (JsonTypeInfo<UpdateAccountSigningKeyInput>)SourceGenerationContext.Default.ComAtprotoAdminUpdateAccountSigningKeyInput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out UpdateAccountSigningKeyInput result)
        {
            result = JsonSerializer.Deserialize<UpdateAccountSigningKeyInput>(s, (JsonTypeInfo<UpdateAccountSigningKeyInput>)SourceGenerationContext.Default.ComAtprotoAdminUpdateAccountSigningKeyInput);
            return result != null;
        }
    }
}

