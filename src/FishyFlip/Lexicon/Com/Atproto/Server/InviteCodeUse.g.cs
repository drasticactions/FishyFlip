// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Server
{
    public partial class InviteCodeUse : ATObject, ICBOREncodable<InviteCodeUse>, IJsonEncodable<InviteCodeUse>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="InviteCodeUse"/> class.
        /// </summary>
        /// <param name="usedBy"></param>
        /// <param name="usedAt"></param>
        public InviteCodeUse(FishyFlip.Models.ATDid usedBy = default, DateTime? usedAt = default)
        {
            this.UsedBy = usedBy;
            this.UsedAt = usedAt;
            this.Type = "com.atproto.server.defs#inviteCodeUse";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="InviteCodeUse"/> class.
        /// </summary>
        public InviteCodeUse()
        {
            this.Type = "com.atproto.server.defs#inviteCodeUse";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="InviteCodeUse"/> class.
        /// </summary>
        public InviteCodeUse(CBORObject obj)
        {
            if (obj["usedBy"] is not null) this.UsedBy = obj["usedBy"].ToATDid();
            if (obj["usedAt"] is not null) this.UsedAt = obj["usedAt"].ToDateTime();
        }

        /// <summary>
        /// Gets or sets the usedBy.
        /// </summary>
        [JsonPropertyName("usedBy")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid UsedBy { get; set; }

        /// <summary>
        /// Gets or sets the usedAt.
        /// </summary>
        [JsonPropertyName("usedAt")]
        [JsonRequired]
        public DateTime? UsedAt { get; set; }

        public const string RecordType = "com.atproto.server.defs#inviteCodeUse";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Server.InviteCodeUse>)SourceGenerationContext.Default.ComAtprotoServerInviteCodeUse);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Server.InviteCodeUse>)SourceGenerationContext.Default.ComAtprotoServerInviteCodeUse);
        }

        public static new InviteCodeUse FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Server.InviteCodeUse>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Server.InviteCodeUse>)SourceGenerationContext.Default.ComAtprotoServerInviteCodeUse)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new InviteCodeUse FromCBORObject(CBORObject obj)
        {
            return new InviteCodeUse(obj);
        }

    }
}

