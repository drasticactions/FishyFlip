// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Server
{
    public partial class CreateAppPasswordInput : ATObject, ICBOREncodable<CreateAppPasswordInput>, IJsonEncodable<CreateAppPasswordInput>, IParsable<CreateAppPasswordInput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="CreateAppPasswordInput"/> class.
        /// </summary>
        /// <param name="name">A short name for the App Password, to help distinguish them.</param>
        /// <param name="privileged">If an app password has 'privileged' access to possibly sensitive account state. Meant for use with trusted clients.</param>
        public CreateAppPasswordInput(string name = default, bool? privileged = default)
        {
            this.Name = name;
            this.Privileged = privileged;
            this.Type = "com.atproto.server.createAppPassword#CreateAppPasswordInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="CreateAppPasswordInput"/> class.
        /// </summary>
        public CreateAppPasswordInput()
        {
            this.Type = "com.atproto.server.createAppPassword#CreateAppPasswordInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="CreateAppPasswordInput"/> class.
        /// </summary>
        public CreateAppPasswordInput(CBORObject obj)
        {
            if (obj["name"] is not null) this.Name = obj["name"].AsString();
            if (obj["privileged"] is not null) this.Privileged = obj["privileged"].AsBoolean();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the name.
        /// <br/> A short name for the App Password, to help distinguish them.
        /// </summary>
        [JsonPropertyName("name")]
        [JsonRequired]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the privileged.
        /// <br/> If an app password has 'privileged' access to possibly sensitive account state. Meant for use with trusted clients.
        /// </summary>
        [JsonPropertyName("privileged")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public bool? Privileged { get; set; }

        public const string RecordType = "com.atproto.server.createAppPassword#CreateAppPasswordInput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Server.CreateAppPasswordInput>)SourceGenerationContext.Default.ComAtprotoServerCreateAppPasswordInput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Server.CreateAppPasswordInput>)SourceGenerationContext.Default.ComAtprotoServerCreateAppPasswordInput);
        }

        public static new CreateAppPasswordInput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Server.CreateAppPasswordInput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Server.CreateAppPasswordInput>)SourceGenerationContext.Default.ComAtprotoServerCreateAppPasswordInput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new CreateAppPasswordInput FromCBORObject(CBORObject obj)
        {
            return new CreateAppPasswordInput(obj);
        }

        /// <inheritdoc/>
        public static CreateAppPasswordInput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<CreateAppPasswordInput>(s, (JsonTypeInfo<CreateAppPasswordInput>)SourceGenerationContext.Default.ComAtprotoServerCreateAppPasswordInput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out CreateAppPasswordInput result)
        {
            result = JsonSerializer.Deserialize<CreateAppPasswordInput>(s, (JsonTypeInfo<CreateAppPasswordInput>)SourceGenerationContext.Default.ComAtprotoServerCreateAppPasswordInput);
            return result != null;
        }
    }
}

