// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Label
{
    /// <summary>
    /// Metadata tags on an atproto record, published by the author within the record.
    /// </summary>
    public partial class SelfLabels : ATObject, ICBOREncodable<SelfLabels>, IJsonEncodable<SelfLabels>, IParsable<SelfLabels>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="SelfLabels"/> class.
        /// </summary>
        /// <param name="values"></param>
        public SelfLabels(List<FishyFlip.Lexicon.Com.Atproto.Label.SelfLabel> values = default)
        {
            this.Values = values;
            this.Type = "com.atproto.label.defs#selfLabels";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SelfLabels"/> class.
        /// </summary>
        public SelfLabels()
        {
            this.Type = "com.atproto.label.defs#selfLabels";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SelfLabels"/> class.
        /// </summary>
        public SelfLabels(CBORObject obj)
        {
            if (obj["values"] is not null) this.Values = obj["values"].Values.Select(n =>new FishyFlip.Lexicon.Com.Atproto.Label.SelfLabel(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the values.
        /// </summary>
        [JsonPropertyName("values")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.Com.Atproto.Label.SelfLabel> Values { get; set; }

        public const string RecordType = "com.atproto.label.defs#selfLabels";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Label.SelfLabels>)SourceGenerationContext.Default.ComAtprotoLabelSelfLabels);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Label.SelfLabels>)SourceGenerationContext.Default.ComAtprotoLabelSelfLabels);
        }

        public static new SelfLabels FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Label.SelfLabels>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Label.SelfLabels>)SourceGenerationContext.Default.ComAtprotoLabelSelfLabels)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new SelfLabels FromCBORObject(CBORObject obj)
        {
            return new SelfLabels(obj);
        }

        /// <inheritdoc/>
        public static SelfLabels Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<SelfLabels>(s, (JsonTypeInfo<SelfLabels>)SourceGenerationContext.Default.ComAtprotoLabelSelfLabels)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out SelfLabels result)
        {
            result = JsonSerializer.Deserialize<SelfLabels>(s, (JsonTypeInfo<SelfLabels>)SourceGenerationContext.Default.ComAtprotoLabelSelfLabels);
            return result != null;
        }
    }
}

