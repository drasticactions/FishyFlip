// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Identity
{
    public partial class ResolveHandleOutput : ATObject, ICBOREncodable<ResolveHandleOutput>, IJsonEncodable<ResolveHandleOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ResolveHandleOutput"/> class.
        /// </summary>
        /// <param name="did"></param>
        public ResolveHandleOutput(FishyFlip.Models.ATDid did = default)
        {
            this.Did = did;
            this.Type = "com.atproto.identity.resolveHandle#ResolveHandleOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ResolveHandleOutput"/> class.
        /// </summary>
        public ResolveHandleOutput()
        {
            this.Type = "com.atproto.identity.resolveHandle#ResolveHandleOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ResolveHandleOutput"/> class.
        /// </summary>
        public ResolveHandleOutput(CBORObject obj)
        {
            if (obj["did"] is not null) this.Did = obj["did"].ToATDid();
        }

        /// <summary>
        /// Gets or sets the did.
        /// </summary>
        [JsonPropertyName("did")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid Did { get; set; }

        public const string RecordType = "com.atproto.identity.resolveHandle#ResolveHandleOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Identity.ResolveHandleOutput>)SourceGenerationContext.Default.ComAtprotoIdentityResolveHandleOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Identity.ResolveHandleOutput>)SourceGenerationContext.Default.ComAtprotoIdentityResolveHandleOutput);
        }

        public static new ResolveHandleOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Identity.ResolveHandleOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Identity.ResolveHandleOutput>)SourceGenerationContext.Default.ComAtprotoIdentityResolveHandleOutput)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new ResolveHandleOutput FromCBORObject(CBORObject obj)
        {
            return new ResolveHandleOutput(obj);
        }

    }
}

