// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Repo
{
    public partial class CreateResult : ATObject, ICBOREncodable<CreateResult>, IJsonEncodable<CreateResult>, IParsable<CreateResult>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="CreateResult"/> class.
        /// </summary>
        /// <param name="uri"></param>
        /// <param name="cid"></param>
        /// <param name="validationStatus">
        /// <br/> Known Values: <br/>
        /// valid <br/>
        /// unknown <br/>
        /// </param>
        public CreateResult(FishyFlip.Models.ATUri uri = default, string cid = default, string? validationStatus = default)
        {
            this.Uri = uri;
            this.Cid = cid;
            this.ValidationStatus = validationStatus;
            this.Type = "com.atproto.repo.applyWrites#createResult";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="CreateResult"/> class.
        /// </summary>
        public CreateResult()
        {
            this.Type = "com.atproto.repo.applyWrites#createResult";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="CreateResult"/> class.
        /// </summary>
        public CreateResult(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["cid"] is not null) this.Cid = obj["cid"].AsString();
            if (obj["validationStatus"] is not null) this.ValidationStatus = obj["validationStatus"].AsString();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the uri.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri Uri { get; set; }

        /// <summary>
        /// Gets or sets the cid.
        /// </summary>
        [JsonPropertyName("cid")]
        [JsonRequired]
        public string Cid { get; set; }

        /// <summary>
        /// Gets or sets the validationStatus.
        /// <br/> Known Values: <br/>
        /// valid <br/>
        /// unknown <br/>
        /// </summary>
        [JsonPropertyName("validationStatus")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? ValidationStatus { get; set; }

        public const string RecordType = "com.atproto.repo.applyWrites#createResult";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Repo.CreateResult>)SourceGenerationContext.Default.ComAtprotoRepoCreateResult);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Repo.CreateResult>)SourceGenerationContext.Default.ComAtprotoRepoCreateResult);
        }

        public static new CreateResult FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Repo.CreateResult>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Repo.CreateResult>)SourceGenerationContext.Default.ComAtprotoRepoCreateResult)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new CreateResult FromCBORObject(CBORObject obj)
        {
            return new CreateResult(obj);
        }

        /// <inheritdoc/>
        public static CreateResult Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<CreateResult>(s, (JsonTypeInfo<CreateResult>)SourceGenerationContext.Default.ComAtprotoRepoCreateResult)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out CreateResult result)
        {
            result = JsonSerializer.Deserialize<CreateResult>(s, (JsonTypeInfo<CreateResult>)SourceGenerationContext.Default.ComAtprotoRepoCreateResult);
            return result != null;
        }
    }
}

