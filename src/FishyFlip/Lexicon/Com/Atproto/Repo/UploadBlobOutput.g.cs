// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Repo
{
    public partial class UploadBlobOutput : ATObject, ICBOREncodable<UploadBlobOutput>, IJsonEncodable<UploadBlobOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="UploadBlobOutput"/> class.
        /// </summary>
        /// <param name="blob"></param>
        public UploadBlobOutput(Blob blob = default)
        {
            this.Blob = blob;
            this.Type = "com.atproto.repo.uploadBlob#UploadBlobOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UploadBlobOutput"/> class.
        /// </summary>
        public UploadBlobOutput()
        {
            this.Type = "com.atproto.repo.uploadBlob#UploadBlobOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UploadBlobOutput"/> class.
        /// </summary>
        public UploadBlobOutput(CBORObject obj)
        {
            if (obj["blob"] is not null) this.Blob = new FishyFlip.Models.Blob(obj["blob"]);
        }

        /// <summary>
        /// Gets or sets the blob.
        /// </summary>
        [JsonPropertyName("blob")]
        [JsonRequired]
        public Blob Blob { get; set; }

        public const string RecordType = "com.atproto.repo.uploadBlob#UploadBlobOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Repo.UploadBlobOutput>)SourceGenerationContext.Default.ComAtprotoRepoUploadBlobOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Repo.UploadBlobOutput>)SourceGenerationContext.Default.ComAtprotoRepoUploadBlobOutput);
        }

        public static new UploadBlobOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Repo.UploadBlobOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Repo.UploadBlobOutput>)SourceGenerationContext.Default.ComAtprotoRepoUploadBlobOutput)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new UploadBlobOutput FromCBORObject(CBORObject obj)
        {
            return new UploadBlobOutput(obj);
        }

    }
}

