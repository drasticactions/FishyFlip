// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Com.Atproto.Repo
{
    public partial class DeleteRecordOutput : ATObject, ICBOREncodable<DeleteRecordOutput>, IJsonEncodable<DeleteRecordOutput>, IParsable<DeleteRecordOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="DeleteRecordOutput"/> class.
        /// </summary>
        /// <param name="commit">
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.CommitMeta"/> (com.atproto.repo.defs#commitMeta)
        /// </param>
        public DeleteRecordOutput(FishyFlip.Lexicon.Com.Atproto.Repo.CommitMeta? commit = default)
        {
            this.Commit = commit;
            this.Type = "com.atproto.repo.deleteRecord#DeleteRecordOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="DeleteRecordOutput"/> class.
        /// </summary>
        public DeleteRecordOutput()
        {
            this.Type = "com.atproto.repo.deleteRecord#DeleteRecordOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="DeleteRecordOutput"/> class.
        /// </summary>
        public DeleteRecordOutput(CBORObject obj)
        {
            if (obj["commit"] is not null) this.Commit = new FishyFlip.Lexicon.Com.Atproto.Repo.CommitMeta(obj["commit"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the commit.
        /// <br/> <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.CommitMeta"/> (com.atproto.repo.defs#commitMeta)
        /// </summary>
        [JsonPropertyName("commit")]
        public FishyFlip.Lexicon.Com.Atproto.Repo.CommitMeta? Commit { get; set; }

        public const string RecordType = "com.atproto.repo.deleteRecord#DeleteRecordOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Repo.DeleteRecordOutput>)SourceGenerationContext.Default.ComAtprotoRepoDeleteRecordOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Repo.DeleteRecordOutput>)SourceGenerationContext.Default.ComAtprotoRepoDeleteRecordOutput);
        }

        public static new DeleteRecordOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Atproto.Repo.DeleteRecordOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Atproto.Repo.DeleteRecordOutput>)SourceGenerationContext.Default.ComAtprotoRepoDeleteRecordOutput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new DeleteRecordOutput FromCBORObject(CBORObject obj)
        {
            return new DeleteRecordOutput(obj);
        }

        /// <inheritdoc/>
        public static DeleteRecordOutput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<DeleteRecordOutput>(s, (JsonTypeInfo<DeleteRecordOutput>)SourceGenerationContext.Default.ComAtprotoRepoDeleteRecordOutput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out DeleteRecordOutput result)
        {
            result = JsonSerializer.Deserialize<DeleteRecordOutput>(s, (JsonTypeInfo<DeleteRecordOutput>)SourceGenerationContext.Default.ComAtprotoRepoDeleteRecordOutput);
            return result != null;
        }
    }
}

