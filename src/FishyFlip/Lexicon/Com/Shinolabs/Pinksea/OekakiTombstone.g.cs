// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Com.Shinolabs.Pinksea
{
    /// <summary>
    /// A tombstone for a missing oekaki.
    /// </summary>
    public partial class OekakiTombstone : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="OekakiTombstone"/> class.
        /// </summary>
        /// <param name="formerAt">The AT uri of the former oekaki.</param>
        public OekakiTombstone(FishyFlip.Models.ATUri? formerAt = default)
        {
            this.FormerAt = formerAt;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="OekakiTombstone"/> class.
        /// </summary>
        public OekakiTombstone()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="OekakiTombstone"/> class.
        /// </summary>
        public OekakiTombstone(CBORObject obj)
        {
            if (obj["formerAt"] is not null) this.FormerAt = obj["formerAt"].ToATUri();
        }

        /// <summary>
        /// Gets or sets the formerAt.
        /// <br/> The AT uri of the former oekaki.
        /// </summary>
        [JsonPropertyName("formerAt")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri? FormerAt { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "com.shinolabs.pinksea.appViewDefs#oekakiTombstone";

        public const string RecordType = "com.shinolabs.pinksea.appViewDefs#oekakiTombstone";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<FishyFlip.Lexicon.Com.Shinolabs.Pinksea.OekakiTombstone>(this, (JsonTypeInfo<FishyFlip.Lexicon.Com.Shinolabs.Pinksea.OekakiTombstone>)SourceGenerationContext.Default.ComShinolabsPinkseaOekakiTombstone)!;
        }

        public static OekakiTombstone FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Com.Shinolabs.Pinksea.OekakiTombstone>(json, (JsonTypeInfo<FishyFlip.Lexicon.Com.Shinolabs.Pinksea.OekakiTombstone>)SourceGenerationContext.Default.ComShinolabsPinkseaOekakiTombstone)!;
        }
    }
}

