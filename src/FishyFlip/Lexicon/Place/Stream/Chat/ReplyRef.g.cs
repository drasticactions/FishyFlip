// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Place.Stream.Chat
{
    public partial class ReplyRef : ATObject, ICBOREncodable<ReplyRef>, IJsonEncodable<ReplyRef>, IParsable<ReplyRef>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ReplyRef"/> class.
        /// </summary>
        /// <param name="root">
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef)
        /// </param>
        /// <param name="parent">
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef)
        /// </param>
        public ReplyRef(Com.Atproto.Repo.StrongRef root = default, Com.Atproto.Repo.StrongRef parent = default)
        {
            this.Root = root;
            this.Parent = parent;
            this.Type = "place.stream.chat.message#replyRef";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ReplyRef"/> class.
        /// </summary>
        public ReplyRef()
        {
            this.Type = "place.stream.chat.message#replyRef";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ReplyRef"/> class.
        /// </summary>
        public ReplyRef(CBORObject obj)
        {
            if (obj["root"] is not null) this.Root = new FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef(obj["root"]);
            if (obj["parent"] is not null) this.Parent = new FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef(obj["parent"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the root.
        /// <br/> <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef)
        /// </summary>
        [JsonPropertyName("root")]
        [JsonRequired]
        public Com.Atproto.Repo.StrongRef Root { get; set; }

        /// <summary>
        /// Gets or sets the parent.
        /// <br/> <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef)
        /// </summary>
        [JsonPropertyName("parent")]
        [JsonRequired]
        public Com.Atproto.Repo.StrongRef Parent { get; set; }

        public const string RecordType = "place.stream.chat.message#replyRef";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Place.Stream.Chat.ReplyRef>)SourceGenerationContext.Default.PlaceStreamChatReplyRef);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Place.Stream.Chat.ReplyRef>)SourceGenerationContext.Default.PlaceStreamChatReplyRef);
        }

        public static new ReplyRef FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Place.Stream.Chat.ReplyRef>(json, (JsonTypeInfo<FishyFlip.Lexicon.Place.Stream.Chat.ReplyRef>)SourceGenerationContext.Default.PlaceStreamChatReplyRef)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new ReplyRef FromCBORObject(CBORObject obj)
        {
            return new ReplyRef(obj);
        }

        /// <inheritdoc/>
        public static ReplyRef Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<ReplyRef>(s, (JsonTypeInfo<ReplyRef>)SourceGenerationContext.Default.PlaceStreamChatReplyRef)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out ReplyRef result)
        {
            result = JsonSerializer.Deserialize<ReplyRef>(s, (JsonTypeInfo<ReplyRef>)SourceGenerationContext.Default.PlaceStreamChatReplyRef);
            return result != null;
        }
    }
}

