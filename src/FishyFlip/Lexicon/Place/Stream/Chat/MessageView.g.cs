// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Place.Stream.Chat
{
    public partial class MessageView : ATObject, ICBOREncodable<MessageView>, IJsonEncodable<MessageView>, IParsable<MessageView>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageView"/> class.
        /// </summary>
        /// <param name="uri"></param>
        /// <param name="cid"></param>
        /// <param name="author">
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewBasic"/> (app.bsky.actor.defs#profileViewBasic)
        /// </param>
        /// <param name="record"></param>
        /// <param name="indexedAt"></param>
        /// <param name="chatProfile">
        /// <see cref="FishyFlip.Lexicon.Place.Stream.Chat.Profile"/> (place.stream.chat.profile)
        /// </param>
        /// <param name="replyTo">
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Place.Stream.Chat.MessageView"/> (place.stream.chat.defs#messageView) <br/>
        /// </param>
        public MessageView(FishyFlip.Models.ATUri uri = default, string cid = default, FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewBasic author = default, ATObject record = default, DateTime? indexedAt = default, FishyFlip.Lexicon.Place.Stream.Chat.Profile? chatProfile = default, FishyFlip.Lexicon.Place.Stream.Chat.MessageView? replyTo = default)
        {
            this.Uri = uri;
            this.Cid = cid;
            this.Author = author;
            this.Record = record;
            this.IndexedAt = indexedAt;
            this.ChatProfile = chatProfile;
            this.ReplyTo = replyTo;
            this.Type = "place.stream.chat.defs#messageView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="MessageView"/> class.
        /// </summary>
        public MessageView()
        {
            this.Type = "place.stream.chat.defs#messageView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="MessageView"/> class.
        /// </summary>
        public MessageView(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["cid"] is not null) this.Cid = obj["cid"].AsString();
            if (obj["author"] is not null) this.Author = new FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewBasic(obj["author"]);
            if (obj["record"] is not null) this.Record = obj["record"].ToATObject();
            if (obj["indexedAt"] is not null) this.IndexedAt = obj["indexedAt"].ToDateTime();
            if (obj["chatProfile"] is not null) this.ChatProfile = new FishyFlip.Lexicon.Place.Stream.Chat.Profile(obj["chatProfile"]);
            if (obj["replyTo"] is not null) this.ReplyTo = new FishyFlip.Lexicon.Place.Stream.Chat.MessageView(obj["replyTo"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the uri.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri Uri { get; set; }

        /// <summary>
        /// Gets or sets the cid.
        /// </summary>
        [JsonPropertyName("cid")]
        [JsonRequired]
        public string Cid { get; set; }

        /// <summary>
        /// Gets or sets the author.
        /// <br/> <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewBasic"/> (app.bsky.actor.defs#profileViewBasic)
        /// </summary>
        [JsonPropertyName("author")]
        [JsonRequired]
        public FishyFlip.Lexicon.App.Bsky.Actor.ProfileViewBasic Author { get; set; }

        /// <summary>
        /// Gets or sets the record.
        /// </summary>
        [JsonPropertyName("record")]
        [JsonRequired]
        public ATObject Record { get; set; }

        /// <summary>
        /// Gets or sets the indexedAt.
        /// </summary>
        [JsonPropertyName("indexedAt")]
        [JsonRequired]
        public DateTime? IndexedAt { get; set; }

        /// <summary>
        /// Gets or sets the chatProfile.
        /// <br/> <see cref="FishyFlip.Lexicon.Place.Stream.Chat.Profile"/> (place.stream.chat.profile)
        /// </summary>
        [JsonPropertyName("chatProfile")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public FishyFlip.Lexicon.Place.Stream.Chat.Profile? ChatProfile { get; set; }

        /// <summary>
        /// Gets or sets the replyTo.
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Place.Stream.Chat.MessageView"/> (place.stream.chat.defs#messageView) <br/>
        /// </summary>
        [JsonPropertyName("replyTo")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public FishyFlip.Lexicon.Place.Stream.Chat.MessageView? ReplyTo { get; set; }

        public const string RecordType = "place.stream.chat.defs#messageView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Place.Stream.Chat.MessageView>)SourceGenerationContext.Default.PlaceStreamChatMessageView);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Place.Stream.Chat.MessageView>)SourceGenerationContext.Default.PlaceStreamChatMessageView);
        }

        public static new MessageView FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Place.Stream.Chat.MessageView>(json, (JsonTypeInfo<FishyFlip.Lexicon.Place.Stream.Chat.MessageView>)SourceGenerationContext.Default.PlaceStreamChatMessageView)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new MessageView FromCBORObject(CBORObject obj)
        {
            return new MessageView(obj);
        }

        /// <inheritdoc/>
        public static MessageView Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<MessageView>(s, (JsonTypeInfo<MessageView>)SourceGenerationContext.Default.PlaceStreamChatMessageView)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out MessageView result)
        {
            result = JsonSerializer.Deserialize<MessageView>(s, (JsonTypeInfo<MessageView>)SourceGenerationContext.Default.PlaceStreamChatMessageView);
            return result != null;
        }
    }
}

