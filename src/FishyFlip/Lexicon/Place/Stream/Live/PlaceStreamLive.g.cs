// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Place.Stream.Live
{

    /// <summary>
    /// place.stream.live Endpoint Class.
    /// </summary>
    public sealed class PlaceStreamLive
    {

        private ATProtocol atp;

        /// <summary>
        /// Initializes a new instance of the <see cref="PlaceStreamLive"/> class.
        /// </summary>
        /// <param name="atp"><see cref="ATProtocol"/>.</param>
        internal PlaceStreamLive(ATProtocol atp)
        {
            this.atp = atp;
        }

        /// <summary>
        /// Gets the ATProtocol.
        /// </summary>
        internal ATProtocol ATProtocol => this.atp;


        /// <summary>
        /// Get a list of livestream segments for a user
        /// </summary>
        /// <param name="limit"></param>
        /// <param name="before"></param>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.Place.Stream.Live.GetLiveUsersOutput?>> GetLiveUsersAsync (int? limit = 50, DateTime? before = default, CancellationToken cancellationToken = default)
        {
            return atp.GetLiveUsersAsync(limit, before, cancellationToken);
        }


        /// <summary>
        /// Get a list of livestream segments for a user
        /// </summary>
        /// <param name="userDID">The DID of the potentially-following user</param>
        /// <param name="limit"></param>
        /// <param name="before"></param>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.Place.Stream.Live.GetSegmentsOutput?>> GetSegmentsAsync (FishyFlip.Models.ATDid userDID, int? limit = 50, DateTime? before = default, CancellationToken cancellationToken = default)
        {
            return atp.GetSegmentsAsync(userDID, limit, before, cancellationToken);
        }

    }
}

