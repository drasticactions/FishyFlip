// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Fm.Teal.Alpha.Actor
{
    /// <summary>
    /// This lexicon is in a not officially released state. It is subject to change. | A declaration of the status of the actor. Only one can be shown at a time. If there are multiple, the latest record should be picked and earlier records should be deleted or tombstoned.
    /// </summary>
    public partial class Status : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Status"/> class.
        /// </summary>
        /// <param name="time">The unix timestamp of when the item was recorded</param>
        /// <param name="item">
        /// <see cref="FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.PlayView"/> (fm.teal.alpha.feed.defs#playView)
        /// </param>
        public Status(DateTime? time, Fm.Teal.Alpha.Feed.PlayView? item)
        {
            this.Time = time;
            this.Item = item;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Status"/> class.
        /// </summary>
        public Status()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Status"/> class.
        /// </summary>
        public Status(CBORObject obj)
        {
            if (obj["time"] is not null) this.Time = obj["time"].ToDateTime();
            if (obj["item"] is not null) this.Item = new Fm.Teal.Alpha.Feed.PlayView(obj["item"]);
        }

        /// <summary>
        /// Gets or sets the time.
        /// <br/> The unix timestamp of when the item was recorded
        /// </summary>
        [JsonPropertyName("time")]
        public DateTime? Time { get; set; }

        /// <summary>
        /// Gets or sets the item.
        /// <br/> <see cref="FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.PlayView"/> (fm.teal.alpha.feed.defs#playView)
        /// </summary>
        [JsonPropertyName("item")]
        public Fm.Teal.Alpha.Feed.PlayView? Item { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "fm.teal.alpha.actor.status";

        public const string RecordType = "fm.teal.alpha.actor.status";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Fm.Teal.Alpha.Actor.Status>(this, (JsonTypeInfo<Fm.Teal.Alpha.Actor.Status>)SourceGenerationContext.Default.FmTealAlphaActorStatus)!;
        }

        public static Status FromJson(string json)
        {
            return JsonSerializer.Deserialize<Fm.Teal.Alpha.Actor.Status>(json, (JsonTypeInfo<Fm.Teal.Alpha.Actor.Status>)SourceGenerationContext.Default.FmTealAlphaActorStatus)!;
        }
    }
}

