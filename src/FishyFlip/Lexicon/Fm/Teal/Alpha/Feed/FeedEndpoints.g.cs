// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Fm.Teal.Alpha.Feed
{

    /// <summary>
    /// fm.teal.alpha.feed Endpoint Group.
    /// </summary>
    public static class FeedEndpoints
    {

       public const string GetActorFeed = "/xrpc/fm.teal.alpha.feed.getActorFeed";

       public const string GetPlay = "/xrpc/fm.teal.alpha.feed.getPlay";


        /// <summary>
        /// Generated endpoint for fm.teal.alpha.feed.getActorFeed
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="cursor"></param>
        /// <param name="authorDID"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.GetActorFeedOutput?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.GetActorFeedOutput?>> GetActorFeedAsync (this FishyFlip.ATProtocol atp, string cursor, FishyFlip.Models.ATIdentifier? authorDID = default, CancellationToken cancellationToken = default)
        {
            var endpointUrl = GetActorFeed.ToString();
            endpointUrl += "?";
            List<string> queryStrings = new();
            queryStrings.Add("cursor=" + cursor);

            if (authorDID != null)
            {
                queryStrings.Add("authorDID=" + authorDID);
            }

            var headers = new Dictionary<string, string>();
            headers.Add(Constants.AtProtoAcceptLabelers, atp.Options.LabelDefinitionsHeader);
            endpointUrl += string.Join("&", queryStrings);
            return atp.Get<FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.GetActorFeedOutput>(endpointUrl, atp.Options.SourceGenerationContext.FmTealAlphaFeedGetActorFeedOutput!, cancellationToken, headers);
        }


        /// <summary>
        /// Generated endpoint for fm.teal.alpha.feed.getPlay
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="authorDID"></param>
        /// <param name="rkey"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.GetPlayOutput?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.GetPlayOutput?>> GetPlayAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier authorDID, string rkey, CancellationToken cancellationToken = default)
        {
            var endpointUrl = GetPlay.ToString();
            endpointUrl += "?";
            List<string> queryStrings = new();
            queryStrings.Add("authorDID=" + authorDID);

            queryStrings.Add("rkey=" + rkey);

            var headers = new Dictionary<string, string>();
            headers.Add(Constants.AtProtoAcceptLabelers, atp.Options.LabelDefinitionsHeader);
            endpointUrl += string.Join("&", queryStrings);
            return atp.Get<FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.GetPlayOutput>(endpointUrl, atp.Options.SourceGenerationContext.FmTealAlphaFeedGetPlayOutput!, cancellationToken, headers);
        }

    }
}

