// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Fm.Teal.Alpha.Feed
{
    public partial class GetActorFeedOutput : ATObject, ICBOREncodable<GetActorFeedOutput>, IJsonEncodable<GetActorFeedOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="GetActorFeedOutput"/> class.
        /// </summary>
        /// <param name="plays"></param>
        public GetActorFeedOutput(List<FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.PlayView> plays = default)
        {
            this.Plays = plays;
            this.Type = "fm.teal.alpha.feed.getActorFeed#GetActorFeedOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetActorFeedOutput"/> class.
        /// </summary>
        public GetActorFeedOutput()
        {
            this.Type = "fm.teal.alpha.feed.getActorFeed#GetActorFeedOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetActorFeedOutput"/> class.
        /// </summary>
        public GetActorFeedOutput(CBORObject obj)
        {
            if (obj["plays"] is not null) this.Plays = obj["plays"].Values.Select(n =>new FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.PlayView(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the plays.
        /// </summary>
        [JsonPropertyName("plays")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.PlayView> Plays { get; set; }

        public const string RecordType = "fm.teal.alpha.feed.getActorFeed#GetActorFeedOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.GetActorFeedOutput>)SourceGenerationContext.Default.FmTealAlphaFeedGetActorFeedOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.GetActorFeedOutput>)SourceGenerationContext.Default.FmTealAlphaFeedGetActorFeedOutput);
        }

        public static new GetActorFeedOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.GetActorFeedOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Fm.Teal.Alpha.Feed.GetActorFeedOutput>)SourceGenerationContext.Default.FmTealAlphaFeedGetActorFeedOutput)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new GetActorFeedOutput FromCBORObject(CBORObject obj)
        {
            return new GetActorFeedOutput(obj);
        }

    }
}

