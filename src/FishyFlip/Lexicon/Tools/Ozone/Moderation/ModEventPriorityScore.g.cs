// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{
    /// <summary>
    /// Set priority score of the subject. Higher score means higher priority.
    /// </summary>
    public partial class ModEventPriorityScore : ATObject, ICBOREncodable<ModEventPriorityScore>, IJsonEncodable<ModEventPriorityScore>, IParsable<ModEventPriorityScore>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ModEventPriorityScore"/> class.
        /// </summary>
        /// <param name="comment"></param>
        /// <param name="score"></param>
        public ModEventPriorityScore(string? comment = default, long score = default)
        {
            this.Comment = comment;
            this.Score = score;
            this.Type = "tools.ozone.moderation.defs#modEventPriorityScore";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ModEventPriorityScore"/> class.
        /// </summary>
        public ModEventPriorityScore()
        {
            this.Type = "tools.ozone.moderation.defs#modEventPriorityScore";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ModEventPriorityScore"/> class.
        /// </summary>
        public ModEventPriorityScore(CBORObject obj)
        {
            if (obj["comment"] is not null) this.Comment = obj["comment"].AsString();
            if (obj["score"] is not null) this.Score = obj["score"].AsInt64Value();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the comment.
        /// </summary>
        [JsonPropertyName("comment")]
        public string? Comment { get; set; }

        /// <summary>
        /// Gets or sets the score.
        /// </summary>
        [JsonPropertyName("score")]
        [JsonRequired]
        public long Score { get; set; }

        public const string RecordType = "tools.ozone.moderation.defs#modEventPriorityScore";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.ModEventPriorityScore>)SourceGenerationContext.Default.ToolsOzoneModerationModEventPriorityScore);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.ModEventPriorityScore>)SourceGenerationContext.Default.ToolsOzoneModerationModEventPriorityScore);
        }

        public static new ModEventPriorityScore FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Tools.Ozone.Moderation.ModEventPriorityScore>(json, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.ModEventPriorityScore>)SourceGenerationContext.Default.ToolsOzoneModerationModEventPriorityScore)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new ModEventPriorityScore FromCBORObject(CBORObject obj)
        {
            return new ModEventPriorityScore(obj);
        }

        /// <inheritdoc/>
        public static ModEventPriorityScore Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<ModEventPriorityScore>(s, (JsonTypeInfo<ModEventPriorityScore>)SourceGenerationContext.Default.ToolsOzoneModerationModEventPriorityScore)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out ModEventPriorityScore result)
        {
            result = JsonSerializer.Deserialize<ModEventPriorityScore>(s, (JsonTypeInfo<ModEventPriorityScore>)SourceGenerationContext.Default.ToolsOzoneModerationModEventPriorityScore);
            return result != null;
        }
    }
}

