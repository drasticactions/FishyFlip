// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{
    /// <summary>
    /// Statistics about a particular account subject
    /// </summary>
    public partial class AccountStats : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="AccountStats"/> class.
        /// </summary>
        /// <param name="reportCount">Total number of reports on the account</param>
        /// <param name="appealCount">Total number of appeals against a moderation action on the account</param>
        /// <param name="suspendCount">Number of times the account was suspended</param>
        /// <param name="escalateCount">Number of times the account was escalated</param>
        /// <param name="takedownCount">Number of times the account was taken down</param>
        public AccountStats(long? reportCount = default, long? appealCount = default, long? suspendCount = default, long? escalateCount = default, long? takedownCount = default)
        {
            this.ReportCount = reportCount;
            this.AppealCount = appealCount;
            this.SuspendCount = suspendCount;
            this.EscalateCount = escalateCount;
            this.TakedownCount = takedownCount;
            this.Type = "tools.ozone.moderation.defs#accountStats";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="AccountStats"/> class.
        /// </summary>
        public AccountStats()
        {
            this.Type = "tools.ozone.moderation.defs#accountStats";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="AccountStats"/> class.
        /// </summary>
        public AccountStats(CBORObject obj)
        {
            if (obj["reportCount"] is not null) this.ReportCount = obj["reportCount"].AsInt64Value();
            if (obj["appealCount"] is not null) this.AppealCount = obj["appealCount"].AsInt64Value();
            if (obj["suspendCount"] is not null) this.SuspendCount = obj["suspendCount"].AsInt64Value();
            if (obj["escalateCount"] is not null) this.EscalateCount = obj["escalateCount"].AsInt64Value();
            if (obj["takedownCount"] is not null) this.TakedownCount = obj["takedownCount"].AsInt64Value();
        }

        /// <summary>
        /// Gets or sets the reportCount.
        /// <br/> Total number of reports on the account
        /// </summary>
        [JsonPropertyName("reportCount")]
        public long? ReportCount { get; set; }

        /// <summary>
        /// Gets or sets the appealCount.
        /// <br/> Total number of appeals against a moderation action on the account
        /// </summary>
        [JsonPropertyName("appealCount")]
        public long? AppealCount { get; set; }

        /// <summary>
        /// Gets or sets the suspendCount.
        /// <br/> Number of times the account was suspended
        /// </summary>
        [JsonPropertyName("suspendCount")]
        public long? SuspendCount { get; set; }

        /// <summary>
        /// Gets or sets the escalateCount.
        /// <br/> Number of times the account was escalated
        /// </summary>
        [JsonPropertyName("escalateCount")]
        public long? EscalateCount { get; set; }

        /// <summary>
        /// Gets or sets the takedownCount.
        /// <br/> Number of times the account was taken down
        /// </summary>
        [JsonPropertyName("takedownCount")]
        public long? TakedownCount { get; set; }

        public const string RecordType = "tools.ozone.moderation.defs#accountStats";

        public static AccountStats FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Tools.Ozone.Moderation.AccountStats>(json, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.AccountStats>)SourceGenerationContext.Default.ToolsOzoneModerationAccountStats)!;
        }
    }
}

