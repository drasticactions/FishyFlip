// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{
    public partial class QueryEventsOutput : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="QueryEventsOutput"/> class.
        /// </summary>
        /// <param name="cursor"></param>
        /// <param name="events"></param>
        public QueryEventsOutput(string? cursor = default, List<Tools.Ozone.Moderation.ModEventView>? events = default)
        {
            this.Cursor = cursor;
            this.Events = events;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="QueryEventsOutput"/> class.
        /// </summary>
        public QueryEventsOutput()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="QueryEventsOutput"/> class.
        /// </summary>
        public QueryEventsOutput(CBORObject obj)
        {
            if (obj["cursor"] is not null) this.Cursor = obj["cursor"].AsString();
            if (obj["events"] is not null) this.Events = obj["events"].Values.Select(n =>new Tools.Ozone.Moderation.ModEventView(n)).ToList();
        }

        /// <summary>
        /// Gets or sets the cursor.
        /// </summary>
        [JsonPropertyName("cursor")]
        public string? Cursor { get; set; }

        /// <summary>
        /// Gets or sets the events.
        /// </summary>
        [JsonPropertyName("events")]
        [JsonRequired]
        public List<Tools.Ozone.Moderation.ModEventView>? Events { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "tools.ozone.moderation.queryEvents#QueryEventsOutput";

        public const string RecordType = "tools.ozone.moderation.queryEvents#QueryEventsOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Tools.Ozone.Moderation.QueryEventsOutput>(this, (JsonTypeInfo<Tools.Ozone.Moderation.QueryEventsOutput>)SourceGenerationContext.Default.ToolsOzoneModerationQueryEventsOutput)!;
        }

        public static QueryEventsOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<Tools.Ozone.Moderation.QueryEventsOutput>(json, (JsonTypeInfo<Tools.Ozone.Moderation.QueryEventsOutput>)SourceGenerationContext.Default.ToolsOzoneModerationQueryEventsOutput)!;
        }
    }
}

