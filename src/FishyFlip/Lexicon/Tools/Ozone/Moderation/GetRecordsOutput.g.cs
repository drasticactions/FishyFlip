// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{
    public partial class GetRecordsOutput : ATObject, ICBOREncodable<GetRecordsOutput>, IJsonEncodable<GetRecordsOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="GetRecordsOutput"/> class.
        /// </summary>
        /// <param name="records">
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RecordViewDetail"/> (tools.ozone.moderation.defs#recordViewDetail) <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RecordViewNotFound"/> (tools.ozone.moderation.defs#recordViewNotFound) <br/>
        /// </param>
        public GetRecordsOutput(List<ATObject> records = default)
        {
            this.Records = records;
            this.Type = "tools.ozone.moderation.getRecords#GetRecordsOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetRecordsOutput"/> class.
        /// </summary>
        public GetRecordsOutput()
        {
            this.Type = "tools.ozone.moderation.getRecords#GetRecordsOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetRecordsOutput"/> class.
        /// </summary>
        public GetRecordsOutput(CBORObject obj)
        {
            if (obj["records"] is not null) this.Records = obj["records"].Values.Select(n =>n.ToATObject()).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the records.
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RecordViewDetail"/> (tools.ozone.moderation.defs#recordViewDetail) <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RecordViewNotFound"/> (tools.ozone.moderation.defs#recordViewNotFound) <br/>
        /// </summary>
        [JsonPropertyName("records")]
        [JsonRequired]
        public List<ATObject> Records { get; set; }

        public const string RecordType = "tools.ozone.moderation.getRecords#GetRecordsOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.GetRecordsOutput>)SourceGenerationContext.Default.ToolsOzoneModerationGetRecordsOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.GetRecordsOutput>)SourceGenerationContext.Default.ToolsOzoneModerationGetRecordsOutput);
        }

        public static new GetRecordsOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Tools.Ozone.Moderation.GetRecordsOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.GetRecordsOutput>)SourceGenerationContext.Default.ToolsOzoneModerationGetRecordsOutput)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new GetRecordsOutput FromCBORObject(CBORObject obj)
        {
            return new GetRecordsOutput(obj);
        }

    }
}

