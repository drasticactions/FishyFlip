// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{
    /// <summary>
    /// Logs identity related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking.
    /// </summary>
    public partial class IdentityEvent : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="IdentityEvent"/> class.
        /// </summary>
        /// <param name="comment"></param>
        /// <param name="handle"></param>
        /// <param name="pdsHost"></param>
        /// <param name="tombstone"></param>
        /// <param name="timestamp"></param>
        public IdentityEvent(string? comment = default, FishyFlip.Models.ATHandle? handle = default, string? pdsHost = default, bool? tombstone = default, DateTime? timestamp = default)
        {
            this.Comment = comment;
            this.Handle = handle;
            this.PdsHost = pdsHost;
            this.Tombstone = tombstone;
            this.Timestamp = timestamp;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="IdentityEvent"/> class.
        /// </summary>
        public IdentityEvent()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="IdentityEvent"/> class.
        /// </summary>
        public IdentityEvent(CBORObject obj)
        {
            if (obj["comment"] is not null) this.Comment = obj["comment"].AsString();
            if (obj["handle"] is not null) this.Handle = obj["handle"].ToATHandle();
            if (obj["pdsHost"] is not null) this.PdsHost = obj["pdsHost"].AsString();
            if (obj["tombstone"] is not null) this.Tombstone = obj["tombstone"].AsBoolean();
            if (obj["timestamp"] is not null) this.Timestamp = obj["timestamp"].ToDateTime();
        }

        /// <summary>
        /// Gets or sets the comment.
        /// </summary>
        [JsonPropertyName("comment")]
        public string? Comment { get; set; }

        /// <summary>
        /// Gets or sets the handle.
        /// </summary>
        [JsonPropertyName("handle")]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATHandleJsonConverter))]
        public FishyFlip.Models.ATHandle? Handle { get; set; }

        /// <summary>
        /// Gets or sets the pdsHost.
        /// </summary>
        [JsonPropertyName("pdsHost")]
        public string? PdsHost { get; set; }

        /// <summary>
        /// Gets or sets the tombstone.
        /// </summary>
        [JsonPropertyName("tombstone")]
        public bool? Tombstone { get; set; }

        /// <summary>
        /// Gets or sets the timestamp.
        /// </summary>
        [JsonPropertyName("timestamp")]
        [JsonRequired]
        public DateTime? Timestamp { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "tools.ozone.moderation.defs#identityEvent";

        public const string RecordType = "tools.ozone.moderation.defs#identityEvent";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Tools.Ozone.Moderation.IdentityEvent>(this, (JsonTypeInfo<Tools.Ozone.Moderation.IdentityEvent>)SourceGenerationContext.Default.ToolsOzoneModerationIdentityEvent)!;
        }

        public static IdentityEvent FromJson(string json)
        {
            return JsonSerializer.Deserialize<Tools.Ozone.Moderation.IdentityEvent>(json, (JsonTypeInfo<Tools.Ozone.Moderation.IdentityEvent>)SourceGenerationContext.Default.ToolsOzoneModerationIdentityEvent)!;
        }
    }
}

