// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{
    /// <summary>
    /// Detailed view of a subject. For record subjects, the author's repo and profile will be returned.
    /// </summary>
    public partial class SubjectView : ATObject, ICBOREncodable<SubjectView>, IJsonEncodable<SubjectView>, IParsable<SubjectView>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="SubjectView"/> class.
        /// </summary>
        /// <param name="type">
        /// <br/> Known Values: <br/>
        /// account <br/>
        /// record <br/>
        /// chat <br/>
        /// </param>
        /// <param name="subject"></param>
        /// <param name="status">
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectStatusView"/> (tools.ozone.moderation.defs#subjectStatusView)
        /// </param>
        /// <param name="repo">
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewDetail"/> (tools.ozone.moderation.defs#repoViewDetail)
        /// </param>
        /// <param name="profile">
        /// <br/> Union Types: <br/>
        /// </param>
        /// <param name="record">
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RecordViewDetail"/> (tools.ozone.moderation.defs#recordViewDetail)
        /// </param>
        public SubjectView(string type = default, string subject = default, FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectStatusView? status = default, FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewDetail? repo = default, ATObject? profile = default, FishyFlip.Lexicon.Tools.Ozone.Moderation.RecordViewDetail? record = default)
        {
            this.TypeValue = type;
            this.Subject = subject;
            this.Status = status;
            this.Repo = repo;
            this.Profile = profile;
            this.Record = record;
            this.Type = "tools.ozone.moderation.defs#subjectView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SubjectView"/> class.
        /// </summary>
        public SubjectView()
        {
            this.Type = "tools.ozone.moderation.defs#subjectView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SubjectView"/> class.
        /// </summary>
        public SubjectView(CBORObject obj)
        {
            if (obj["type"] is not null) this.TypeValue = obj["type"].AsString();
            if (obj["subject"] is not null) this.Subject = obj["subject"].AsString();
            if (obj["status"] is not null) this.Status = new FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectStatusView(obj["status"]);
            if (obj["repo"] is not null) this.Repo = new FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewDetail(obj["repo"]);
            if (obj["profile"] is not null) this.Profile = obj["profile"].ToATObject();
            if (obj["record"] is not null) this.Record = new FishyFlip.Lexicon.Tools.Ozone.Moderation.RecordViewDetail(obj["record"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the type.
        /// <br/> Known Values: <br/>
        /// account <br/>
        /// record <br/>
        /// chat <br/>
        /// </summary>
        [JsonPropertyName("type")]
        [JsonRequired]
        public string TypeValue { get; set; }

        /// <summary>
        /// Gets or sets the subject.
        /// </summary>
        [JsonPropertyName("subject")]
        [JsonRequired]
        public string Subject { get; set; }

        /// <summary>
        /// Gets or sets the status.
        /// <br/> <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectStatusView"/> (tools.ozone.moderation.defs#subjectStatusView)
        /// </summary>
        [JsonPropertyName("status")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectStatusView? Status { get; set; }

        /// <summary>
        /// Gets or sets the repo.
        /// <br/> <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewDetail"/> (tools.ozone.moderation.defs#repoViewDetail)
        /// </summary>
        [JsonPropertyName("repo")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewDetail? Repo { get; set; }

        /// <summary>
        /// Gets or sets the profile.
        /// <br/> Union Types: <br/>
        /// </summary>
        [JsonPropertyName("profile")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public ATObject? Profile { get; set; }

        /// <summary>
        /// Gets or sets the record.
        /// <br/> <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RecordViewDetail"/> (tools.ozone.moderation.defs#recordViewDetail)
        /// </summary>
        [JsonPropertyName("record")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public FishyFlip.Lexicon.Tools.Ozone.Moderation.RecordViewDetail? Record { get; set; }

        public const string RecordType = "tools.ozone.moderation.defs#subjectView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectView>)SourceGenerationContext.Default.ToolsOzoneModerationSubjectView);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectView>)SourceGenerationContext.Default.ToolsOzoneModerationSubjectView);
        }

        public static new SubjectView FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectView>(json, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectView>)SourceGenerationContext.Default.ToolsOzoneModerationSubjectView)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new SubjectView FromCBORObject(CBORObject obj)
        {
            return new SubjectView(obj);
        }

        /// <inheritdoc/>
        public static SubjectView Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<SubjectView>(s, (JsonTypeInfo<SubjectView>)SourceGenerationContext.Default.ToolsOzoneModerationSubjectView)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out SubjectView result)
        {
            result = JsonSerializer.Deserialize<SubjectView>(s, (JsonTypeInfo<SubjectView>)SourceGenerationContext.Default.ToolsOzoneModerationSubjectView);
            return result != null;
        }
    }
}

