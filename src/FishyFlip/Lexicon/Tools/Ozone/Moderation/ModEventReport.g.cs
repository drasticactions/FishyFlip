// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{
    /// <summary>
    /// Report a subject
    /// </summary>
    public partial class ModEventReport : ATObject, ICBOREncodable<ModEventReport>, IJsonEncodable<ModEventReport>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ModEventReport"/> class.
        /// </summary>
        /// <param name="comment"></param>
        /// <param name="isReporterMuted">Set to true if the reporter was muted from reporting at the time of the event. These reports won't impact the reviewState of the subject.</param>
        /// <param name="reportType">
        /// <br/> Known Values: <br/>
        /// com.atproto.moderation.defs#reasonSpam - Spam: frequent unwanted promotion, replies, mentions <br/>
        /// com.atproto.moderation.defs#reasonViolation - Direct violation of server rules, laws, terms of service <br/>
        /// com.atproto.moderation.defs#reasonMisleading - Misleading identity, affiliation, or content <br/>
        /// com.atproto.moderation.defs#reasonSexual - Unwanted or mislabeled sexual content <br/>
        /// com.atproto.moderation.defs#reasonRude - Rude, harassing, explicit, or otherwise unwelcoming behavior <br/>
        /// com.atproto.moderation.defs#reasonOther - Other: reports not falling under another report category <br/>
        /// com.atproto.moderation.defs#reasonAppeal - Appeal: appeal a previously taken moderation action <br/>
        /// </param>
        public ModEventReport(string? comment = default, bool? isReporterMuted = default, string reportType = default)
        {
            this.Comment = comment;
            this.IsReporterMuted = isReporterMuted;
            this.ReportType = reportType;
            this.Type = "tools.ozone.moderation.defs#modEventReport";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ModEventReport"/> class.
        /// </summary>
        public ModEventReport()
        {
            this.Type = "tools.ozone.moderation.defs#modEventReport";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ModEventReport"/> class.
        /// </summary>
        public ModEventReport(CBORObject obj)
        {
            if (obj["comment"] is not null) this.Comment = obj["comment"].AsString();
            if (obj["isReporterMuted"] is not null) this.IsReporterMuted = obj["isReporterMuted"].AsBoolean();
            if (obj["reportType"] is not null) this.ReportType = obj["reportType"].AsString();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the comment.
        /// </summary>
        [JsonPropertyName("comment")]
        public string? Comment { get; set; }

        /// <summary>
        /// Gets or sets the isReporterMuted.
        /// <br/> Set to true if the reporter was muted from reporting at the time of the event. These reports won't impact the reviewState of the subject.
        /// </summary>
        [JsonPropertyName("isReporterMuted")]
        public bool? IsReporterMuted { get; set; }

        /// <summary>
        /// Gets or sets the reportType.
        /// <br/> Known Values: <br/>
        /// com.atproto.moderation.defs#reasonSpam - Spam: frequent unwanted promotion, replies, mentions <br/>
        /// com.atproto.moderation.defs#reasonViolation - Direct violation of server rules, laws, terms of service <br/>
        /// com.atproto.moderation.defs#reasonMisleading - Misleading identity, affiliation, or content <br/>
        /// com.atproto.moderation.defs#reasonSexual - Unwanted or mislabeled sexual content <br/>
        /// com.atproto.moderation.defs#reasonRude - Rude, harassing, explicit, or otherwise unwelcoming behavior <br/>
        /// com.atproto.moderation.defs#reasonOther - Other: reports not falling under another report category <br/>
        /// com.atproto.moderation.defs#reasonAppeal - Appeal: appeal a previously taken moderation action <br/>
        /// </summary>
        [JsonPropertyName("reportType")]
        [JsonRequired]
        public string ReportType { get; set; }

        public const string RecordType = "tools.ozone.moderation.defs#modEventReport";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.ModEventReport>)SourceGenerationContext.Default.ToolsOzoneModerationModEventReport);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.ModEventReport>)SourceGenerationContext.Default.ToolsOzoneModerationModEventReport);
        }

        public static new ModEventReport FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Tools.Ozone.Moderation.ModEventReport>(json, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.ModEventReport>)SourceGenerationContext.Default.ToolsOzoneModerationModEventReport)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new ModEventReport FromCBORObject(CBORObject obj)
        {
            return new ModEventReport(obj);
        }

    }
}

