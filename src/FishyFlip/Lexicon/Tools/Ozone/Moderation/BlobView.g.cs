// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{
    public partial class BlobView : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="BlobView"/> class.
        /// </summary>
        /// <param name="cid"></param>
        /// <param name="mimeType"></param>
        /// <param name="size"></param>
        /// <param name="createdAt"></param>
        /// <param name="details">
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.ImageDetails"/> (tools.ozone.moderation.defs#imageDetails)
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.VideoDetails"/> (tools.ozone.moderation.defs#videoDetails)
        /// </param>
        /// <param name="moderation">
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.Moderation"/> (tools.ozone.moderation.defs#moderation)
        /// </param>
        public BlobView(string? cid = default, string? mimeType = default, long? size = default, DateTime? createdAt = default, ATObject? details = default, Tools.Ozone.Moderation.Moderation? moderation = default)
        {
            this.Cid = cid;
            this.MimeType = mimeType;
            this.Size = size;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.Details = details;
            this.Moderation = moderation;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="BlobView"/> class.
        /// </summary>
        public BlobView()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="BlobView"/> class.
        /// </summary>
        public BlobView(CBORObject obj)
        {
            if (obj["cid"] is not null) this.Cid = obj["cid"].AsString();
            if (obj["mimeType"] is not null) this.MimeType = obj["mimeType"].AsString();
            if (obj["size"] is not null) this.Size = obj["size"].AsInt64Value();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["details"] is not null) this.Details = obj["details"].ToATObject();
            if (obj["moderation"] is not null) this.Moderation = new Tools.Ozone.Moderation.Moderation(obj["moderation"]);
        }

        /// <summary>
        /// Gets or sets the cid.
        /// </summary>
        [JsonPropertyName("cid")]
        [JsonRequired]
        public string? Cid { get; set; }

        /// <summary>
        /// Gets or sets the mimeType.
        /// </summary>
        [JsonPropertyName("mimeType")]
        [JsonRequired]
        public string? MimeType { get; set; }

        /// <summary>
        /// Gets or sets the size.
        /// </summary>
        [JsonPropertyName("size")]
        [JsonRequired]
        public long? Size { get; set; }

        /// <summary>
        /// Gets or sets the createdAt.
        /// </summary>
        [JsonPropertyName("createdAt")]
        [JsonRequired]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the details.
        /// Union Types:
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.ImageDetails"/> (tools.ozone.moderation.defs#imageDetails)
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.VideoDetails"/> (tools.ozone.moderation.defs#videoDetails)
        /// </summary>
        [JsonPropertyName("details")]
        public ATObject? Details { get; set; }

        /// <summary>
        /// Gets or sets the moderation.
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.Moderation"/> (tools.ozone.moderation.defs#moderation)
        /// </summary>
        [JsonPropertyName("moderation")]
        public Tools.Ozone.Moderation.Moderation? Moderation { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "tools.ozone.moderation.defs#blobView";

        public const string RecordType = "tools.ozone.moderation.defs#blobView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Tools.Ozone.Moderation.BlobView>(this, (JsonTypeInfo<Tools.Ozone.Moderation.BlobView>)SourceGenerationContext.Default.ToolsOzoneModerationBlobView)!;
        }

        public static BlobView FromJson(string json)
        {
            return JsonSerializer.Deserialize<Tools.Ozone.Moderation.BlobView>(json, (JsonTypeInfo<Tools.Ozone.Moderation.BlobView>)SourceGenerationContext.Default.ToolsOzoneModerationBlobView)!;
        }
    }
}

