// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{
    public partial class GetSubjectsOutput : ATObject, ICBOREncodable<GetSubjectsOutput>, IJsonEncodable<GetSubjectsOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="GetSubjectsOutput"/> class.
        /// </summary>
        /// <param name="subjects"></param>
        public GetSubjectsOutput(List<FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectView> subjects = default)
        {
            this.Subjects = subjects;
            this.Type = "tools.ozone.moderation.getSubjects#GetSubjectsOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetSubjectsOutput"/> class.
        /// </summary>
        public GetSubjectsOutput()
        {
            this.Type = "tools.ozone.moderation.getSubjects#GetSubjectsOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetSubjectsOutput"/> class.
        /// </summary>
        public GetSubjectsOutput(CBORObject obj)
        {
            if (obj["subjects"] is not null) this.Subjects = obj["subjects"].Values.Select(n =>new FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectView(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the subjects.
        /// </summary>
        [JsonPropertyName("subjects")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.Tools.Ozone.Moderation.SubjectView> Subjects { get; set; }

        public const string RecordType = "tools.ozone.moderation.getSubjects#GetSubjectsOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.GetSubjectsOutput>)SourceGenerationContext.Default.ToolsOzoneModerationGetSubjectsOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.GetSubjectsOutput>)SourceGenerationContext.Default.ToolsOzoneModerationGetSubjectsOutput);
        }

        public static new GetSubjectsOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Tools.Ozone.Moderation.GetSubjectsOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Moderation.GetSubjectsOutput>)SourceGenerationContext.Default.ToolsOzoneModerationGetSubjectsOutput)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new GetSubjectsOutput FromCBORObject(CBORObject obj)
        {
            return new GetSubjectsOutput(obj);
        }

    }
}

