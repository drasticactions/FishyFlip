// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Team
{

    /// <summary>
    /// tools.ozone.team Endpoint Group.
    /// </summary>
    public static class TeamEndpoints
    {

       public const string AddMember = "/xrpc/tools.ozone.team.addMember";

       public const string DeleteMember = "/xrpc/tools.ozone.team.deleteMember";

       public const string ListMembers = "/xrpc/tools.ozone.team.listMembers";

       public const string UpdateMember = "/xrpc/tools.ozone.team.updateMember";


        /// <summary>
        /// Add a member to the ozone team. Requires admin role.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.MemberAlreadyExistsError"/> Member already exists in the team. <br/>
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="did"></param>
        /// <param name="role"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Tools.Ozone.Team.Member?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Team.Member?>> AddMemberAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, string role, CancellationToken cancellationToken = default)
        {
            var endpointUrl = AddMember.ToString();
            var headers = new Dictionary<string, string>();
            headers.Add(Constants.AtProtoProxy, atp.Options.OzoneProxyHeader);
            var inputItem = new AddMemberInput();
            inputItem.Did = did;
            inputItem.Role = role;
            JsonTypeInfo<Tools.Ozone.Team.AddMemberInput> jsonTypeInfo = (JsonTypeInfo<Tools.Ozone.Team.AddMemberInput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Tools.Ozone.Team.AddMemberInput), atp.Options.JsonSerializerOptions)!;
            JsonTypeInfo<Tools.Ozone.Team.Member> jsonTypeInfo2 = (JsonTypeInfo<Tools.Ozone.Team.Member>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Tools.Ozone.Team.Member), atp.Options.JsonSerializerOptions)!;
            return atp.Post<AddMemberInput, FishyFlip.Lexicon.Tools.Ozone.Team.Member?>(endpointUrl, jsonTypeInfo, jsonTypeInfo2, inputItem, cancellationToken, headers);
        }


        /// <summary>
        /// Delete a member from ozone team. Requires admin role.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.MemberNotFoundError"/> The member being deleted does not exist <br/>
        /// <see cref="FishyFlip.Lexicon.CannotDeleteSelfError"/> You can not delete yourself from the team <br/>
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="did"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="Success?"/></returns>
        public static Task<Result<Success?>> DeleteMemberAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, CancellationToken cancellationToken = default)
        {
            var endpointUrl = DeleteMember.ToString();
            var headers = new Dictionary<string, string>();
            headers.Add(Constants.AtProtoProxy, atp.Options.OzoneProxyHeader);
            var inputItem = new DeleteMemberInput();
            inputItem.Did = did;
            JsonTypeInfo<Tools.Ozone.Team.DeleteMemberInput> jsonTypeInfo = (JsonTypeInfo<Tools.Ozone.Team.DeleteMemberInput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Tools.Ozone.Team.DeleteMemberInput), atp.Options.JsonSerializerOptions)!;
            JsonTypeInfo<Success> jsonTypeInfo2 = (JsonTypeInfo<Success>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Success), atp.Options.JsonSerializerOptions)!;
            return atp.Post<DeleteMemberInput, Success?>(endpointUrl, jsonTypeInfo, jsonTypeInfo2, inputItem, cancellationToken, headers);
        }


        /// <summary>
        /// List all members with access to the ozone service.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Tools.Ozone.Team.ListMembersOutput?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Team.ListMembersOutput?>> ListMembersAsync (this FishyFlip.ATProtocol atp, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            var endpointUrl = ListMembers.ToString();
            endpointUrl += "?";
            List<string> queryStrings = new();
            if (limit != null)
            {
                queryStrings.Add("limit=" + limit);
            }

            if (cursor != null)
            {
                queryStrings.Add("cursor=" + cursor);
            }

            var headers = new Dictionary<string, string>();
            headers.Add(Constants.AtProtoProxy, atp.Options.OzoneProxyHeader);
            headers.Add(Constants.AtProtoAcceptLabelers, atp.Options.LabelDefinitionsHeader);
            endpointUrl += string.Join("&", queryStrings);
            JsonTypeInfo<Tools.Ozone.Team.ListMembersOutput> jsonTypeInfo = (JsonTypeInfo<Tools.Ozone.Team.ListMembersOutput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Tools.Ozone.Team.ListMembersOutput), atp.Options.JsonSerializerOptions)!;
            return atp.Get<FishyFlip.Lexicon.Tools.Ozone.Team.ListMembersOutput>(endpointUrl, jsonTypeInfo, cancellationToken, headers);
        }


        /// <summary>
        /// Update a member in the ozone service. Requires admin role.
        /// <br/> Possible Errors: <br/>
        /// <see cref="FishyFlip.Lexicon.MemberNotFoundError"/> The member being updated does not exist in the team <br/>
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="did"></param>
        /// <param name="disabled"></param>
        /// <param name="role"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Tools.Ozone.Team.Member?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Team.Member?>> UpdateMemberAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, bool? disabled = default, string? role = default, CancellationToken cancellationToken = default)
        {
            var endpointUrl = UpdateMember.ToString();
            var headers = new Dictionary<string, string>();
            headers.Add(Constants.AtProtoProxy, atp.Options.OzoneProxyHeader);
            var inputItem = new UpdateMemberInput();
            inputItem.Did = did;
            inputItem.Disabled = disabled;
            inputItem.Role = role;
            JsonTypeInfo<Tools.Ozone.Team.UpdateMemberInput> jsonTypeInfo = (JsonTypeInfo<Tools.Ozone.Team.UpdateMemberInput>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Tools.Ozone.Team.UpdateMemberInput), atp.Options.JsonSerializerOptions)!;
            JsonTypeInfo<Tools.Ozone.Team.Member> jsonTypeInfo2 = (JsonTypeInfo<Tools.Ozone.Team.Member>)atp.Options.SourceGenerationContext.GetTypeInfo(typeof(Tools.Ozone.Team.Member), atp.Options.JsonSerializerOptions)!;
            return atp.Post<UpdateMemberInput, FishyFlip.Lexicon.Tools.Ozone.Team.Member?>(endpointUrl, jsonTypeInfo, jsonTypeInfo2, inputItem, cancellationToken, headers);
        }

    }
}

