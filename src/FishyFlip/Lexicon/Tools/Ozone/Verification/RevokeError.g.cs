// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Verification
{
    /// <summary>
    /// Error object for failed revocations
    /// </summary>
    public partial class RevokeError : ATObject, ICBOREncodable<RevokeError>, IJsonEncodable<RevokeError>, IParsable<RevokeError>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="RevokeError"/> class.
        /// </summary>
        /// <param name="uri">The AT-URI of the verification record that failed to revoke.</param>
        /// <param name="error">Description of the error that occurred during revocation.</param>
        public RevokeError(FishyFlip.Models.ATUri uri = default, string error = default)
        {
            this.Uri = uri;
            this.Error = error;
            this.Type = "tools.ozone.verification.revokeVerifications#revokeError";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="RevokeError"/> class.
        /// </summary>
        public RevokeError()
        {
            this.Type = "tools.ozone.verification.revokeVerifications#revokeError";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="RevokeError"/> class.
        /// </summary>
        public RevokeError(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["error"] is not null) this.Error = obj["error"].AsString();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the uri.
        /// <br/> The AT-URI of the verification record that failed to revoke.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri Uri { get; set; }

        /// <summary>
        /// Gets or sets the error.
        /// <br/> Description of the error that occurred during revocation.
        /// </summary>
        [JsonPropertyName("error")]
        [JsonRequired]
        public string Error { get; set; }

        public const string RecordType = "tools.ozone.verification.revokeVerifications#revokeError";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Verification.RevokeError>)SourceGenerationContext.Default.ToolsOzoneVerificationRevokeError);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Verification.RevokeError>)SourceGenerationContext.Default.ToolsOzoneVerificationRevokeError);
        }

        public static new RevokeError FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Tools.Ozone.Verification.RevokeError>(json, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Verification.RevokeError>)SourceGenerationContext.Default.ToolsOzoneVerificationRevokeError)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new RevokeError FromCBORObject(CBORObject obj)
        {
            return new RevokeError(obj);
        }

        /// <inheritdoc/>
        public static RevokeError Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<RevokeError>(s, (JsonTypeInfo<RevokeError>)SourceGenerationContext.Default.ToolsOzoneVerificationRevokeError)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out RevokeError result)
        {
            result = JsonSerializer.Deserialize<RevokeError>(s, (JsonTypeInfo<RevokeError>)SourceGenerationContext.Default.ToolsOzoneVerificationRevokeError);
            return result != null;
        }
    }
}

