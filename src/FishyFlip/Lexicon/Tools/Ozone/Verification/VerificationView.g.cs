// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Verification
{
    /// <summary>
    /// Verification data for the associated subject.
    /// </summary>
    public partial class VerificationView : ATObject, ICBOREncodable<VerificationView>, IJsonEncodable<VerificationView>, IParsable<VerificationView>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="VerificationView"/> class.
        /// </summary>
        /// <param name="issuer">The user who issued this verification.</param>
        /// <param name="uri">The AT-URI of the verification record.</param>
        /// <param name="subject">The subject of the verification.</param>
        /// <param name="handle">Handle of the subject the verification applies to at the moment of verifying, which might not be the same at the time of viewing. The verification is only valid if the current handle matches the one at the time of verifying.</param>
        /// <param name="displayName">Display name of the subject the verification applies to at the moment of verifying, which might not be the same at the time of viewing. The verification is only valid if the current displayName matches the one at the time of verifying.</param>
        /// <param name="createdAt">Timestamp when the verification was created.</param>
        /// <param name="revokeReason">Describes the reason for revocation, also indicating that the verification is no longer valid.</param>
        /// <param name="revokedAt">Timestamp when the verification was revoked.</param>
        /// <param name="revokedBy">The user who revoked this verification.</param>
        /// <param name="subjectProfile">
        /// <br/> Union Types: <br/>
        /// </param>
        /// <param name="issuerProfile">
        /// <br/> Union Types: <br/>
        /// </param>
        /// <param name="subjectRepo">
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewDetail"/> (tools.ozone.moderation.defs#repoViewDetail) <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewNotFound"/> (tools.ozone.moderation.defs#repoViewNotFound) <br/>
        /// </param>
        /// <param name="issuerRepo">
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewDetail"/> (tools.ozone.moderation.defs#repoViewDetail) <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewNotFound"/> (tools.ozone.moderation.defs#repoViewNotFound) <br/>
        /// </param>
        public VerificationView(FishyFlip.Models.ATDid issuer = default, FishyFlip.Models.ATUri uri = default, FishyFlip.Models.ATDid subject = default, FishyFlip.Models.ATHandle handle = default, string displayName = default, DateTime? createdAt = default, string? revokeReason = default, DateTime? revokedAt = default, FishyFlip.Models.ATDid? revokedBy = default, ATObject? subjectProfile = default, ATObject? issuerProfile = default, ATObject? subjectRepo = default, ATObject? issuerRepo = default)
        {
            this.Issuer = issuer;
            this.Uri = uri;
            this.Subject = subject;
            this.Handle = handle;
            this.DisplayName = displayName;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.RevokeReason = revokeReason;
            this.RevokedAt = revokedAt;
            this.RevokedBy = revokedBy;
            this.SubjectProfile = subjectProfile;
            this.IssuerProfile = issuerProfile;
            this.SubjectRepo = subjectRepo;
            this.IssuerRepo = issuerRepo;
            this.Type = "tools.ozone.verification.defs#verificationView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="VerificationView"/> class.
        /// </summary>
        public VerificationView()
        {
            this.Type = "tools.ozone.verification.defs#verificationView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="VerificationView"/> class.
        /// </summary>
        public VerificationView(CBORObject obj)
        {
            if (obj["issuer"] is not null) this.Issuer = obj["issuer"].ToATDid();
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["subject"] is not null) this.Subject = obj["subject"].ToATDid();
            if (obj["handle"] is not null) this.Handle = obj["handle"].ToATHandle();
            if (obj["displayName"] is not null) this.DisplayName = obj["displayName"].AsString();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["revokeReason"] is not null) this.RevokeReason = obj["revokeReason"].AsString();
            if (obj["revokedAt"] is not null) this.RevokedAt = obj["revokedAt"].ToDateTime();
            if (obj["revokedBy"] is not null) this.RevokedBy = obj["revokedBy"].ToATDid();
            if (obj["subjectProfile"] is not null) this.SubjectProfile = obj["subjectProfile"].ToATObject();
            if (obj["issuerProfile"] is not null) this.IssuerProfile = obj["issuerProfile"].ToATObject();
            if (obj["subjectRepo"] is not null) this.SubjectRepo = obj["subjectRepo"].ToATObject();
            if (obj["issuerRepo"] is not null) this.IssuerRepo = obj["issuerRepo"].ToATObject();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the issuer.
        /// <br/> The user who issued this verification.
        /// </summary>
        [JsonPropertyName("issuer")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid Issuer { get; set; }

        /// <summary>
        /// Gets or sets the uri.
        /// <br/> The AT-URI of the verification record.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri Uri { get; set; }

        /// <summary>
        /// Gets or sets the subject.
        /// <br/> The subject of the verification.
        /// </summary>
        [JsonPropertyName("subject")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid Subject { get; set; }

        /// <summary>
        /// Gets or sets the handle.
        /// <br/> Handle of the subject the verification applies to at the moment of verifying, which might not be the same at the time of viewing. The verification is only valid if the current handle matches the one at the time of verifying.
        /// </summary>
        [JsonPropertyName("handle")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATHandleJsonConverter))]
        public FishyFlip.Models.ATHandle Handle { get; set; }

        /// <summary>
        /// Gets or sets the displayName.
        /// <br/> Display name of the subject the verification applies to at the moment of verifying, which might not be the same at the time of viewing. The verification is only valid if the current displayName matches the one at the time of verifying.
        /// </summary>
        [JsonPropertyName("displayName")]
        [JsonRequired]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the createdAt.
        /// <br/> Timestamp when the verification was created.
        /// </summary>
        [JsonPropertyName("createdAt")]
        [JsonRequired]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the revokeReason.
        /// <br/> Describes the reason for revocation, also indicating that the verification is no longer valid.
        /// </summary>
        [JsonPropertyName("revokeReason")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? RevokeReason { get; set; }

        /// <summary>
        /// Gets or sets the revokedAt.
        /// <br/> Timestamp when the verification was revoked.
        /// </summary>
        [JsonPropertyName("revokedAt")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public DateTime? RevokedAt { get; set; }

        /// <summary>
        /// Gets or sets the revokedBy.
        /// <br/> The user who revoked this verification.
        /// </summary>
        [JsonPropertyName("revokedBy")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid? RevokedBy { get; set; }

        /// <summary>
        /// Gets or sets the subjectProfile.
        /// <br/> Union Types: <br/>
        /// </summary>
        [JsonPropertyName("subjectProfile")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public ATObject? SubjectProfile { get; set; }

        /// <summary>
        /// Gets or sets the issuerProfile.
        /// <br/> Union Types: <br/>
        /// </summary>
        [JsonPropertyName("issuerProfile")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public ATObject? IssuerProfile { get; set; }

        /// <summary>
        /// Gets or sets the subjectRepo.
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewDetail"/> (tools.ozone.moderation.defs#repoViewDetail) <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewNotFound"/> (tools.ozone.moderation.defs#repoViewNotFound) <br/>
        /// </summary>
        [JsonPropertyName("subjectRepo")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public ATObject? SubjectRepo { get; set; }

        /// <summary>
        /// Gets or sets the issuerRepo.
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewDetail"/> (tools.ozone.moderation.defs#repoViewDetail) <br/>
        /// <see cref="FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewNotFound"/> (tools.ozone.moderation.defs#repoViewNotFound) <br/>
        /// </summary>
        [JsonPropertyName("issuerRepo")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public ATObject? IssuerRepo { get; set; }

        public const string RecordType = "tools.ozone.verification.defs#verificationView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Verification.VerificationView>)SourceGenerationContext.Default.ToolsOzoneVerificationVerificationView);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Verification.VerificationView>)SourceGenerationContext.Default.ToolsOzoneVerificationVerificationView);
        }

        public static new VerificationView FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Tools.Ozone.Verification.VerificationView>(json, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Verification.VerificationView>)SourceGenerationContext.Default.ToolsOzoneVerificationVerificationView)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new VerificationView FromCBORObject(CBORObject obj)
        {
            return new VerificationView(obj);
        }

        /// <inheritdoc/>
        public static VerificationView Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<VerificationView>(s, (JsonTypeInfo<VerificationView>)SourceGenerationContext.Default.ToolsOzoneVerificationVerificationView)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out VerificationView result)
        {
            result = JsonSerializer.Deserialize<VerificationView>(s, (JsonTypeInfo<VerificationView>)SourceGenerationContext.Default.ToolsOzoneVerificationVerificationView);
            return result != null;
        }
    }
}

