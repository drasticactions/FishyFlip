// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Hosting
{

    /// <summary>
    /// tools.ozone.hosting Endpoint Group.
    /// </summary>
    public static class HostingEndpoints
    {

       public const string GroupNamespace = "tools.ozone.hosting";

       public const string GetAccountHistory = "/xrpc/tools.ozone.hosting.getAccountHistory";


        /// <summary>
        /// Get account history, e.g. log of updated email addresses or other identity information.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="did"></param>
        /// <param name="events"></param>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        /// <returns>Result of <see cref="FishyFlip.Lexicon.Tools.Ozone.Hosting.GetAccountHistoryOutput?"/></returns>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Hosting.GetAccountHistoryOutput?>> GetAccountHistoryAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, List<string>? events = default, string? cursor = default, int? limit = 50, CancellationToken cancellationToken = default)
        {
            var endpointUrl = GetAccountHistory.ToString();
            endpointUrl += "?";
            List<string> queryStrings = new();
            queryStrings.Add("did=" + did);

            if (events != null)
            {
                queryStrings.Add(string.Join("&", events.Select(n => "events=" + n)));
            }

            if (cursor != null)
            {
                queryStrings.Add("cursor=" + cursor);
            }

            if (limit != null)
            {
                queryStrings.Add("limit=" + limit);
            }

            var headers = new Dictionary<string, string>();
            headers.Add(Constants.AtProtoProxy, atp.Options.OzoneProxyHeader);
            headers.Add(Constants.AtProtoAcceptLabelers, atp.Options.LabelDefinitionsHeader);
            endpointUrl += string.Join("&", queryStrings);
            return atp.Get<FishyFlip.Lexicon.Tools.Ozone.Hosting.GetAccountHistoryOutput>(endpointUrl, atp.Options.SourceGenerationContext.ToolsOzoneHostingGetAccountHistoryOutput!, cancellationToken, headers);
        }

    }
}

