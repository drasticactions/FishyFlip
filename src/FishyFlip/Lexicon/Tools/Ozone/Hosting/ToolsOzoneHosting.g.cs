// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Hosting
{

    /// <summary>
    /// tools.ozone.hosting Endpoint Class.
    /// </summary>
    public sealed class ToolsOzoneHosting
    {

        private ATProtocol atp;

        /// <summary>
        /// Initializes a new instance of the <see cref="ToolsOzoneHosting"/> class.
        /// </summary>
        /// <param name="atp"><see cref="ATProtocol"/>.</param>
        internal ToolsOzoneHosting(ATProtocol atp)
        {
            this.atp = atp;
        }

        /// <summary>
        /// Gets the ATProtocol.
        /// </summary>
        internal ATProtocol ATProtocol => this.atp;


        /// <summary>
        /// Get account history, e.g. log of updated email addresses or other identity information.
        /// </summary>
        /// <param name="did"></param>
        /// <param name="events"></param>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        public Task<Result<FishyFlip.Lexicon.Tools.Ozone.Hosting.GetAccountHistoryOutput?>> GetAccountHistoryAsync (FishyFlip.Models.ATDid did, List<string>? events = default, string? cursor = default, int? limit = 50, CancellationToken cancellationToken = default)
        {
            return atp.GetAccountHistoryAsync(did, events, cursor, limit, cancellationToken);
        }

        /// <summary>
        /// Get account history, e.g. log of updated email addresses or other identity information.
        /// </summary>
        /// <param name="did"></param>
        /// <param name="events"></param>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <param name="cancellationToken"></param>
        public GetAccountHistoryOutputCollection GetAccountHistoryCollectionAsync (FishyFlip.Models.ATDid did, List<string>? events = default, string? cursor = default, int? limit = 50, CancellationToken cancellationToken = default)
        {
            return new GetAccountHistoryOutputCollection(atp, did, events, cursor, limit, cancellationToken);
        }

    }
}

