// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Tools.Ozone.Setting
{
    public partial class ListOptionsOutput : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ListOptionsOutput"/> class.
        /// </summary>
        /// <param name="cursor"></param>
        /// <param name="options"></param>
        public ListOptionsOutput(string? cursor = default, List<Tools.Ozone.Setting.Option>? options = default)
        {
            this.Cursor = cursor;
            this.Options = options;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ListOptionsOutput"/> class.
        /// </summary>
        public ListOptionsOutput()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ListOptionsOutput"/> class.
        /// </summary>
        public ListOptionsOutput(CBORObject obj)
        {
            if (obj["cursor"] is not null) this.Cursor = obj["cursor"].AsString();
            if (obj["options"] is not null) this.Options = obj["options"].Values.Select(n =>new Tools.Ozone.Setting.Option(n)).ToList();
        }

        /// <summary>
        /// Gets or sets the cursor.
        /// </summary>
        [JsonPropertyName("cursor")]
        public string? Cursor { get; set; }

        /// <summary>
        /// Gets or sets the options.
        /// </summary>
        [JsonPropertyName("options")]
        [JsonRequired]
        public List<Tools.Ozone.Setting.Option>? Options { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "tools.ozone.setting.listOptions#ListOptionsOutput";

        public const string RecordType = "tools.ozone.setting.listOptions#ListOptionsOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Tools.Ozone.Setting.ListOptionsOutput>(this, (JsonTypeInfo<Tools.Ozone.Setting.ListOptionsOutput>)SourceGenerationContext.Default.ToolsOzoneSettingListOptionsOutput)!;
        }

        public static ListOptionsOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<Tools.Ozone.Setting.ListOptionsOutput>(json, (JsonTypeInfo<Tools.Ozone.Setting.ListOptionsOutput>)SourceGenerationContext.Default.ToolsOzoneSettingListOptionsOutput)!;
        }
    }
}

