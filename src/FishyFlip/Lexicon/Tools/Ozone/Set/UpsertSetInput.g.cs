// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Tools.Ozone.Set
{
    public partial class UpsertSetInput : ATObject, ICBOREncodable<UpsertSetInput>, IJsonEncodable<UpsertSetInput>, IParsable<UpsertSetInput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="UpsertSetInput"/> class.
        /// </summary>
        public UpsertSetInput()
        {
            this.Type = "tools.ozone.set.upsertSet#UpsertSetInput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="UpsertSetInput"/> class.
        /// </summary>
        public UpsertSetInput(CBORObject obj)
        {
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the set.
        /// <br/> <see cref="FishyFlip.Lexicon.Tools.Ozone.Set.Set"/> (tools.ozone.set.defs#set)
        /// </summary>
        [JsonPropertyName("set")]
        public FishyFlip.Lexicon.Tools.Ozone.Set.Set? Set { get; set; }

        public const string RecordType = "tools.ozone.set.upsertSet#UpsertSetInput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Set.UpsertSetInput>)SourceGenerationContext.Default.ToolsOzoneSetUpsertSetInput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Set.UpsertSetInput>)SourceGenerationContext.Default.ToolsOzoneSetUpsertSetInput);
        }

        public static new UpsertSetInput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Tools.Ozone.Set.UpsertSetInput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Tools.Ozone.Set.UpsertSetInput>)SourceGenerationContext.Default.ToolsOzoneSetUpsertSetInput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new UpsertSetInput FromCBORObject(CBORObject obj)
        {
            return new UpsertSetInput(obj);
        }

        /// <inheritdoc/>
        public static UpsertSetInput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<UpsertSetInput>(s, (JsonTypeInfo<UpsertSetInput>)SourceGenerationContext.Default.ToolsOzoneSetUpsertSetInput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out UpsertSetInput result)
        {
            result = JsonSerializer.Deserialize<UpsertSetInput>(s, (JsonTypeInfo<UpsertSetInput>)SourceGenerationContext.Default.ToolsOzoneSetUpsertSetInput);
            return result != null;
        }
    }
}

