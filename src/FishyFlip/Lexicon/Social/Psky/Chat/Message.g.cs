// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Social.Psky.Chat
{
    /// <summary>
    /// A Picosky message containing at most 2048 graphemes.
    /// </summary>
    public partial class Message : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Message"/> class.
        /// </summary>
        /// <param name="content">Text content.</param>
        /// <param name="room"></param>
        /// <param name="facets">Annotations of text (mentions, URLs, hashtags, etc)</param>
        /// <param name="reply">
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef)
        /// </param>
        public Message(string? content, FishyFlip.Models.ATUri? room, List<Social.Psky.Richtext.Facet>? facets = default, Com.Atproto.Repo.StrongRef? reply = default)
        {
            this.Content = content;
            this.Room = room;
            this.Facets = facets;
            this.Reply = reply;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Message"/> class.
        /// </summary>
        public Message()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Message"/> class.
        /// </summary>
        public Message(CBORObject obj)
        {
            if (obj["content"] is not null) this.Content = obj["content"].AsString();
            if (obj["room"] is not null) this.Room = obj["room"].ToATUri();
            if (obj["facets"] is not null) this.Facets = obj["facets"].Values.Select(n =>new Social.Psky.Richtext.Facet(n)).ToList();
            if (obj["reply"] is not null) this.Reply = new FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef(obj["reply"]);
        }

        /// <summary>
        /// Gets or sets the content.
        /// <br/> Text content.
        /// </summary>
        [JsonPropertyName("content")]
        public string? Content { get; set; }

        /// <summary>
        /// Gets or sets the room.
        /// </summary>
        [JsonPropertyName("room")]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri? Room { get; set; }

        /// <summary>
        /// Gets or sets the facets.
        /// <br/> Annotations of text (mentions, URLs, hashtags, etc)
        /// </summary>
        [JsonPropertyName("facets")]
        public List<Social.Psky.Richtext.Facet>? Facets { get; set; }

        /// <summary>
        /// Gets or sets the reply.
        /// <br/> <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef)
        /// </summary>
        [JsonPropertyName("reply")]
        public Com.Atproto.Repo.StrongRef? Reply { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "social.psky.chat.message";

        public const string RecordType = "social.psky.chat.message";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Social.Psky.Chat.Message>(this, (JsonTypeInfo<Social.Psky.Chat.Message>)SourceGenerationContext.Default.SocialPskyChatMessage)!;
        }

        public static Message FromJson(string json)
        {
            return JsonSerializer.Deserialize<Social.Psky.Chat.Message>(json, (JsonTypeInfo<Social.Psky.Chat.Message>)SourceGenerationContext.Default.SocialPskyChatMessage)!;
        }
    }
}

