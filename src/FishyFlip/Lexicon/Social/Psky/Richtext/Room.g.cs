// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Social.Psky.Richtext
{
    /// <summary>
    /// Facet feature for a room. The text usually includes a '#' prefix, but the facet reference should not (except in the case of a room tag that includes a '#' prefix) - TODO: update when rooms are actually implemented
    /// </summary>
    public partial class Room : ATObject, ICBOREncodable<Room>, IJsonEncodable<Room>, IParsable<Room>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Room"/> class.
        /// </summary>
        /// <param name="room"></param>
        public Room(string room = default)
        {
            this.RoomValue = room;
            this.Type = "social.psky.richtext.facet#room";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Room"/> class.
        /// </summary>
        public Room()
        {
            this.Type = "social.psky.richtext.facet#room";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Room"/> class.
        /// </summary>
        public Room(CBORObject obj)
        {
            if (obj["room"] is not null) this.RoomValue = obj["room"].AsString();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the room.
        /// </summary>
        [JsonPropertyName("room")]
        [JsonRequired]
        public string RoomValue { get; set; }

        public const string RecordType = "social.psky.richtext.facet#room";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Social.Psky.Richtext.Room>)SourceGenerationContext.Default.SocialPskyRichtextRoom);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Social.Psky.Richtext.Room>)SourceGenerationContext.Default.SocialPskyRichtextRoom);
        }

        public static new Room FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Social.Psky.Richtext.Room>(json, (JsonTypeInfo<FishyFlip.Lexicon.Social.Psky.Richtext.Room>)SourceGenerationContext.Default.SocialPskyRichtextRoom)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new Room FromCBORObject(CBORObject obj)
        {
            return new Room(obj);
        }

        /// <inheritdoc/>
        public static Room Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<Room>(s, (JsonTypeInfo<Room>)SourceGenerationContext.Default.SocialPskyRichtextRoom)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out Room result)
        {
            result = JsonSerializer.Deserialize<Room>(s, (JsonTypeInfo<Room>)SourceGenerationContext.Default.SocialPskyRichtextRoom);
            return result != null;
        }
    }
}

