// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Blue.Linkat
{
    /// <summary>
    /// Record containing a cards of your profile.
    /// </summary>
    public partial class Board : ATObject, ICBOREncodable<Board>, IJsonEncodable<Board>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Board"/> class.
        /// </summary>
        /// <param name="cards">List of cards in the board.</param>
        public Board(List<FishyFlip.Lexicon.Blue.Linkat.Card>? cards)
        {
            this.Cards = cards;
            this.Type = "blue.linkat.board";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Board"/> class.
        /// </summary>
        public Board()
        {
            this.Type = "blue.linkat.board";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Board"/> class.
        /// </summary>
        public Board(CBORObject obj)
        {
            if (obj["cards"] is not null) this.Cards = obj["cards"].Values.Select(n =>new FishyFlip.Lexicon.Blue.Linkat.Card(n)).ToList();
        }

        /// <summary>
        /// Gets or sets the cards.
        /// <br/> List of cards in the board.
        /// </summary>
        [JsonPropertyName("cards")]
        public List<FishyFlip.Lexicon.Blue.Linkat.Card>? Cards { get; set; }

        public const string RecordType = "blue.linkat.board";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Linkat.Board>)SourceGenerationContext.Default.BlueLinkatBoard);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Linkat.Board>)SourceGenerationContext.Default.BlueLinkatBoard);
        }

        public static new Board FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Blue.Linkat.Board>(json, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Linkat.Board>)SourceGenerationContext.Default.BlueLinkatBoard)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new Board FromCBORObject(CBORObject obj)
        {
            return new Board(obj);
        }

    }
}

