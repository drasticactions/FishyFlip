// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Blue.Maril.Stellar
{
    public partial class ReactionDef : ATObject, ICBOREncodable<ReactionDef>, IJsonEncodable<ReactionDef>, IParsable<ReactionDef>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ReactionDef"/> class.
        /// </summary>
        /// <param name="rkey"></param>
        /// <param name="subject">
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef)
        /// </param>
        /// <param name="createdAt"></param>
        /// <param name="emojiRef">
        /// <see cref="FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef"/> (blue.maril.stellar.reaction#emojiRef)
        /// </param>
        /// <param name="emoji">
        /// <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.ItemView"/> (blue.moji.collection.item#itemView)
        /// </param>
        /// <param name="actor">
        /// <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileView"/> (app.bsky.actor.defs#profileView)
        /// </param>
        public ReactionDef(string rkey = default, Com.Atproto.Repo.StrongRef subject = default, DateTime? createdAt = default, FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef? emojiRef = default, FishyFlip.Lexicon.Blue.Moji.Collection.ItemView emoji = default, FishyFlip.Lexicon.App.Bsky.Actor.ProfileView? actor = default)
        {
            this.Rkey = rkey;
            this.Subject = subject;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.EmojiRef = emojiRef;
            this.Emoji = emoji;
            this.Actor = actor;
            this.Type = "blue.maril.stellar.getReactions#reaction";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ReactionDef"/> class.
        /// </summary>
        public ReactionDef()
        {
            this.Type = "blue.maril.stellar.getReactions#reaction";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ReactionDef"/> class.
        /// </summary>
        public ReactionDef(CBORObject obj)
        {
            if (obj["rkey"] is not null) this.Rkey = obj["rkey"].AsString();
            if (obj["subject"] is not null) this.Subject = new FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef(obj["subject"]);
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["emojiRef"] is not null) this.EmojiRef = new FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef(obj["emojiRef"]);
            if (obj["emoji"] is not null) this.Emoji = new FishyFlip.Lexicon.Blue.Moji.Collection.ItemView(obj["emoji"]);
            if (obj["actor"] is not null) this.Actor = new FishyFlip.Lexicon.App.Bsky.Actor.ProfileView(obj["actor"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the rkey.
        /// </summary>
        [JsonPropertyName("rkey")]
        [JsonRequired]
        public string Rkey { get; set; }

        /// <summary>
        /// Gets or sets the subject.
        /// <br/> <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef)
        /// </summary>
        [JsonPropertyName("subject")]
        [JsonRequired]
        public Com.Atproto.Repo.StrongRef Subject { get; set; }

        /// <summary>
        /// Gets or sets the createdAt.
        /// </summary>
        [JsonPropertyName("createdAt")]
        [JsonRequired]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the emojiRef.
        /// <br/> <see cref="FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef"/> (blue.maril.stellar.reaction#emojiRef)
        /// </summary>
        [JsonPropertyName("emojiRef")]
        public FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef? EmojiRef { get; set; }

        /// <summary>
        /// Gets or sets the emoji.
        /// <br/> <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.ItemView"/> (blue.moji.collection.item#itemView)
        /// </summary>
        [JsonPropertyName("emoji")]
        [JsonRequired]
        public FishyFlip.Lexicon.Blue.Moji.Collection.ItemView Emoji { get; set; }

        /// <summary>
        /// Gets or sets the actor.
        /// <br/> <see cref="FishyFlip.Lexicon.App.Bsky.Actor.ProfileView"/> (app.bsky.actor.defs#profileView)
        /// </summary>
        [JsonPropertyName("actor")]
        public FishyFlip.Lexicon.App.Bsky.Actor.ProfileView? Actor { get; set; }

        public const string RecordType = "blue.maril.stellar.getReactions#reaction";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Maril.Stellar.ReactionDef>)SourceGenerationContext.Default.BlueMarilStellarReactionDef);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Maril.Stellar.ReactionDef>)SourceGenerationContext.Default.BlueMarilStellarReactionDef);
        }

        public static new ReactionDef FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Blue.Maril.Stellar.ReactionDef>(json, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Maril.Stellar.ReactionDef>)SourceGenerationContext.Default.BlueMarilStellarReactionDef)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new ReactionDef FromCBORObject(CBORObject obj)
        {
            return new ReactionDef(obj);
        }

        /// <inheritdoc/>
        public static ReactionDef Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<ReactionDef>(s, (JsonTypeInfo<ReactionDef>)SourceGenerationContext.Default.BlueMarilStellarReactionDef)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out ReactionDef result)
        {
            result = JsonSerializer.Deserialize<ReactionDef>(s, (JsonTypeInfo<ReactionDef>)SourceGenerationContext.Default.BlueMarilStellarReactionDef);
            return result != null;
        }
    }
}

