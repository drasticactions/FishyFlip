// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

using FishyFlip.Lexicon.Com.Atproto.Repo;

namespace FishyFlip.Lexicon
{

    /// <summary>
    /// Extension methods for blue.maril.stellar.
    /// </summary>
    public static class BlueMarilStellarExtensions
    {

        /// <summary>
        /// Create a Reaction record.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="record"></param>
        /// <param name="rkey"></param>
        /// <param name="validate"></param>
        /// <param name="swapCommit"></param>
        /// <param name="cancellationToken"></param>
        public static Task<Result<CreateRecordOutput?>> CreateReactionAsync(this FishyFlip.Lexicon.Blue.Maril.Stellar.BlueMarilStellar atp, FishyFlip.Lexicon.Blue.Maril.Stellar.Reaction record, string? rkey = default, bool? validate = default, string? swapCommit = default, CancellationToken cancellationToken = default)
        {
            return atp.ATProtocol.CreateRecordAsync(atp.ATProtocol.SessionManager.Session?.Did ?? throw new InvalidOperationException("Session did is required."), "blue.maril.stellar.reaction", record, rkey, validate, swapCommit, cancellationToken);
        }

        /// <summary>
        /// Create a Reaction record.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="subject">
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Repo.StrongRef"/> (com.atproto.repo.strongRef)
        /// </param>
        /// <param name="emoji">
        /// blue.maril.stellar.defs#emojiRef
        /// </param>
        /// <param name="rkey"></param>
        /// <param name="validate"></param>
        /// <param name="swapCommit"></param>
        /// <param name="cancellationToken"></param>
        public static Task<Result<CreateRecordOutput?>> CreateReactionAsync(this FishyFlip.Lexicon.Blue.Maril.Stellar.BlueMarilStellar atp, Com.Atproto.Repo.StrongRef? subject, FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef? emoji, string? rkey = default, bool? validate = default, string? swapCommit = default, CancellationToken cancellationToken = default)
        {
            var record = new FishyFlip.Lexicon.Blue.Maril.Stellar.Reaction();
            record.Subject = subject;
            record.Emoji = emoji;
            return atp.ATProtocol.CreateRecordAsync(atp.ATProtocol.SessionManager.Session?.Did ?? throw new InvalidOperationException("Session did is required."), "blue.maril.stellar.reaction", record, rkey, validate, swapCommit, cancellationToken);
        }

        /// <summary>
        /// Delete a Reaction record.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="rkey"></param>
        /// <param name="swapRecord"></param>
        /// <param name="swapCommit"></param>
        /// <param name="cancellationToken"></param>
        public static Task<Result<DeleteRecordOutput?>> DeleteReactionAsync(this FishyFlip.Lexicon.Blue.Maril.Stellar.BlueMarilStellar atp, string rkey, string? swapRecord = default, string? swapCommit = default, CancellationToken cancellationToken = default)
        {
            return atp.ATProtocol.DeleteRecordAsync(atp.ATProtocol.SessionManager.Session?.Did ?? throw new InvalidOperationException("Session did is required."), "blue.maril.stellar.reaction", rkey, swapRecord, swapCommit, cancellationToken);
        }

        /// <summary>
        /// Put a Reaction record.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="rkey"></param>
        /// <param name="record"></param>
        /// <param name="validate"></param>
        /// <param name="swapRecord"></param>
        /// <param name="swapCommit"></param>
        /// <param name="cancellationToken"></param>
        public static Task<Result<PutRecordOutput?>> PutReactionAsync(this FishyFlip.Lexicon.Blue.Maril.Stellar.BlueMarilStellar atp, string rkey, FishyFlip.Lexicon.Blue.Maril.Stellar.Reaction record, bool? validate = default, string? swapRecord = default, string? swapCommit = default, CancellationToken cancellationToken = default)
        {
            return atp.ATProtocol.PutRecordAsync(atp.ATProtocol.SessionManager.Session?.Did ?? throw new InvalidOperationException("Session did is required."), "blue.maril.stellar.reaction", rkey, record, validate, swapRecord, swapCommit, cancellationToken);
        }

        /// <summary>
        /// List Reaction records.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="reverse"></param>
        /// <param name="cancellationToken"></param>
        public static Task<Result<ListRecordsOutput?>> ListReactionAsync(this FishyFlip.Lexicon.Blue.Maril.Stellar.BlueMarilStellar atp, int? limit = 50, string? cursor = default, bool? reverse = default, CancellationToken cancellationToken = default)
        {
            return atp.ATProtocol.ListRecordsAsync(atp.ATProtocol.SessionManager.Session?.Did ?? throw new InvalidOperationException("Session did is required."), "blue.maril.stellar.reaction", limit, cursor, reverse, cancellationToken);
        }

        /// <summary>
        /// List Reaction records.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="repo"></param>
        /// <param name="limit"></param>
        /// <param name="cursor"></param>
        /// <param name="reverse"></param>
        /// <param name="cancellationToken"></param>
        public static Task<Result<ListRecordsOutput?>> ListReactionAsync(this FishyFlip.Lexicon.Blue.Maril.Stellar.BlueMarilStellar atp, FishyFlip.Models.ATIdentifier repo, int? limit = 50, string? cursor = default, bool? reverse = default, CancellationToken cancellationToken = default)
        {
            return atp.ATProtocol.ListRecordsAsync(repo, "blue.maril.stellar.reaction", limit, cursor, reverse, cancellationToken);
        }

        /// <summary>
        /// Get Reaction records.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="rkey"></param>
        /// <param name="cid"></param>
        /// <param name="cancellationToken"></param>
        public static Task<Result<GetRecordOutput?>> GetReactionAsync(this FishyFlip.Lexicon.Blue.Maril.Stellar.BlueMarilStellar atp, string rkey, string? cid = default, CancellationToken cancellationToken = default)
        {
            return atp.ATProtocol.GetRecordAsync(atp.ATProtocol.SessionManager.Session?.Did ?? throw new InvalidOperationException("Session did is required."), "blue.maril.stellar.reaction", rkey, cid, cancellationToken);
        }

        /// <summary>
        /// Get Reaction records.
        /// </summary>
        /// <param name="atp"></param>
        /// <param name="repo"></param>
        /// <param name="rkey"></param>
        /// <param name="cid"></param>
        /// <param name="cancellationToken"></param>
        public static Task<Result<GetRecordOutput?>> GetReactionAsync(this FishyFlip.Lexicon.Blue.Maril.Stellar.BlueMarilStellar atp, FishyFlip.Models.ATIdentifier repo, string rkey, string? cid = default, CancellationToken cancellationToken = default)
        {
            return atp.ATProtocol.GetRecordAsync(repo, "blue.maril.stellar.reaction", rkey, cid, cancellationToken);
        }
    }
}

