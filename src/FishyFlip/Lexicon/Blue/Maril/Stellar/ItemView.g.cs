// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Blue.Maril.Stellar
{
    public partial class ItemView : ATObject, ICBOREncodable<ItemView>, IJsonEncodable<ItemView>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ItemView"/> class.
        /// </summary>
        /// <param name="@ref">
        /// <see cref="FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef"/> (blue.maril.stellar.reaction#emojiRef)
        /// </param>
        /// <param name="record">
        /// <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.ItemView"/> (blue.moji.collection.item#itemView)
        /// </param>
        public ItemView(FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef @ref = default, FishyFlip.Lexicon.Blue.Moji.Collection.ItemView record = default)
        {
            this.Ref = @ref;
            this.Record = record;
            this.Type = "blue.maril.stellar.getEmojis#itemView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ItemView"/> class.
        /// </summary>
        public ItemView()
        {
            this.Type = "blue.maril.stellar.getEmojis#itemView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ItemView"/> class.
        /// </summary>
        public ItemView(CBORObject obj)
        {
            if (obj["ref"] is not null) this.Ref = new FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef(obj["ref"]);
            if (obj["record"] is not null) this.Record = new FishyFlip.Lexicon.Blue.Moji.Collection.ItemView(obj["record"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the ref.
        /// <br/> <see cref="FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef"/> (blue.maril.stellar.reaction#emojiRef)
        /// </summary>
        [JsonPropertyName("ref")]
        [JsonRequired]
        public FishyFlip.Lexicon.Blue.Maril.Stellar.EmojiRef Ref { get; set; }

        /// <summary>
        /// Gets or sets the record.
        /// <br/> <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.ItemView"/> (blue.moji.collection.item#itemView)
        /// </summary>
        [JsonPropertyName("record")]
        [JsonRequired]
        public FishyFlip.Lexicon.Blue.Moji.Collection.ItemView Record { get; set; }

        public const string RecordType = "blue.maril.stellar.getEmojis#itemView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Maril.Stellar.ItemView>)SourceGenerationContext.Default.BlueMarilStellarItemView);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Maril.Stellar.ItemView>)SourceGenerationContext.Default.BlueMarilStellarItemView);
        }

        public static new ItemView FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Blue.Maril.Stellar.ItemView>(json, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Maril.Stellar.ItemView>)SourceGenerationContext.Default.BlueMarilStellarItemView)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new ItemView FromCBORObject(CBORObject obj)
        {
            return new ItemView(obj);
        }

    }
}

