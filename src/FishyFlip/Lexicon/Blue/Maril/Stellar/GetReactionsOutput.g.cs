// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Blue.Maril.Stellar
{
    public partial class GetReactionsOutput : ATObject, ICBOREncodable<GetReactionsOutput>, IJsonEncodable<GetReactionsOutput>, IParsable<GetReactionsOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="GetReactionsOutput"/> class.
        /// </summary>
        /// <param name="uri"></param>
        /// <param name="cid"></param>
        /// <param name="cursor"></param>
        /// <param name="reactions"></param>
        public GetReactionsOutput(FishyFlip.Models.ATUri uri = default, string? cid = default, string? cursor = default, List<FishyFlip.Lexicon.Blue.Maril.Stellar.ReactionDef> reactions = default)
        {
            this.Uri = uri;
            this.Cid = cid;
            this.Cursor = cursor;
            this.Reactions = reactions;
            this.Type = "blue.maril.stellar.getReactions#GetReactionsOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetReactionsOutput"/> class.
        /// </summary>
        public GetReactionsOutput()
        {
            this.Type = "blue.maril.stellar.getReactions#GetReactionsOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="GetReactionsOutput"/> class.
        /// </summary>
        public GetReactionsOutput(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["cid"] is not null) this.Cid = obj["cid"].AsString();
            if (obj["cursor"] is not null) this.Cursor = obj["cursor"].AsString();
            if (obj["reactions"] is not null) this.Reactions = obj["reactions"].Values.Select(n =>new FishyFlip.Lexicon.Blue.Maril.Stellar.ReactionDef(n)).ToList();
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the uri.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri Uri { get; set; }

        /// <summary>
        /// Gets or sets the cid.
        /// </summary>
        [JsonPropertyName("cid")]
        public string? Cid { get; set; }

        /// <summary>
        /// Gets or sets the cursor.
        /// </summary>
        [JsonPropertyName("cursor")]
        public string? Cursor { get; set; }

        /// <summary>
        /// Gets or sets the reactions.
        /// </summary>
        [JsonPropertyName("reactions")]
        [JsonRequired]
        public List<FishyFlip.Lexicon.Blue.Maril.Stellar.ReactionDef> Reactions { get; set; }

        public const string RecordType = "blue.maril.stellar.getReactions#GetReactionsOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Maril.Stellar.GetReactionsOutput>)SourceGenerationContext.Default.BlueMarilStellarGetReactionsOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Maril.Stellar.GetReactionsOutput>)SourceGenerationContext.Default.BlueMarilStellarGetReactionsOutput);
        }

        public static new GetReactionsOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Blue.Maril.Stellar.GetReactionsOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Maril.Stellar.GetReactionsOutput>)SourceGenerationContext.Default.BlueMarilStellarGetReactionsOutput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new GetReactionsOutput FromCBORObject(CBORObject obj)
        {
            return new GetReactionsOutput(obj);
        }

        /// <inheritdoc/>
        public static GetReactionsOutput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<GetReactionsOutput>(s, (JsonTypeInfo<GetReactionsOutput>)SourceGenerationContext.Default.BlueMarilStellarGetReactionsOutput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out GetReactionsOutput result)
        {
            result = JsonSerializer.Deserialize<GetReactionsOutput>(s, (JsonTypeInfo<GetReactionsOutput>)SourceGenerationContext.Default.BlueMarilStellarGetReactionsOutput);
            return result != null;
        }
    }
}

