// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Blue.Zio.Atfile
{
    /// <summary>
    /// A fingerprint of a browser upload.
    /// </summary>
    public partial class Browser : ATObject, ICBOREncodable<Browser>, IJsonEncodable<Browser>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Browser"/> class.
        /// </summary>
        /// <param name="id"></param>
        /// <param name="userAgent"></param>
        public Browser(string? id = default, string? userAgent = default)
        {
            this.Id = id;
            this.UserAgent = userAgent;
            this.Type = "blue.zio.atfile.finger#browser";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Browser"/> class.
        /// </summary>
        public Browser()
        {
            this.Type = "blue.zio.atfile.finger#browser";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Browser"/> class.
        /// </summary>
        public Browser(CBORObject obj)
        {
            if (obj["id"] is not null) this.Id = obj["id"].AsString();
            if (obj["userAgent"] is not null) this.UserAgent = obj["userAgent"].AsString();
        }

        /// <summary>
        /// Gets or sets the id.
        /// </summary>
        [JsonPropertyName("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Gets or sets the userAgent.
        /// </summary>
        [JsonPropertyName("userAgent")]
        public string? UserAgent { get; set; }

        public const string RecordType = "blue.zio.atfile.finger#browser";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Zio.Atfile.Browser>)SourceGenerationContext.Default.BlueZioAtfileBrowser);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Zio.Atfile.Browser>)SourceGenerationContext.Default.BlueZioAtfileBrowser);
        }

        public static new Browser FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Blue.Zio.Atfile.Browser>(json, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Zio.Atfile.Browser>)SourceGenerationContext.Default.BlueZioAtfileBrowser)!;
        }

         /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

         /// <inheritdoc/>
        public static new Browser FromCBORObject(CBORObject obj)
        {
            return new Browser(obj);
        }

    }
}

