// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Blue.Moji.Collection
{
    /// <summary>
    /// A custom emoji
    /// </summary>
    public partial class Item : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Item"/> class.
        /// </summary>
        /// <param name="name">Should be in the format :emoji:</param>
        /// <param name="formats">Open union to allow for future formats
        /// <br/> Union Types: <br/>
        /// #formats_v0 <br/>
        /// </param>
        /// <param name="alt"></param>
        /// <param name="createdAt"></param>
        /// <param name="adultOnly"></param>
        /// <param name="labels">Self-label values for this emoji. Effectively content warnings.
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Label.SelfLabels"/> (com.atproto.label.defs#selfLabels) <br/>
        /// </param>
        /// <param name="copyOf"></param>
        /// <param name="fallbackText"></param>
        public Item(string? name, FishyFlip.Lexicon.Blue.Moji.Collection.FormatsV0? formats, string? alt = default, DateTime? createdAt = default, bool? adultOnly = default, FishyFlip.Lexicon.Com.Atproto.Label.SelfLabels? labels = default, FishyFlip.Models.ATUri? copyOf = default, string? fallbackText = default)
        {
            this.Name = name;
            this.Alt = alt;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.Formats = formats;
            this.AdultOnly = adultOnly;
            this.Labels = labels;
            this.CopyOf = copyOf;
            this.FallbackText = fallbackText;
            this.Type = "blue.moji.collection.item";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Item"/> class.
        /// </summary>
        public Item()
        {
            this.Type = "blue.moji.collection.item";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Item"/> class.
        /// </summary>
        public Item(CBORObject obj)
        {
            if (obj["name"] is not null) this.Name = obj["name"].AsString();
            if (obj["alt"] is not null) this.Alt = obj["alt"].AsString();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["formats"] is not null) this.Formats = new FishyFlip.Lexicon.Blue.Moji.Collection.FormatsV0(obj["formats"]);
            if (obj["adultOnly"] is not null) this.AdultOnly = obj["adultOnly"].AsBoolean();
            if (obj["labels"] is not null) this.Labels = new FishyFlip.Lexicon.Com.Atproto.Label.SelfLabels(obj["labels"]);
            if (obj["copyOf"] is not null) this.CopyOf = obj["copyOf"].ToATUri();
            if (obj["fallbackText"] is not null) this.FallbackText = obj["fallbackText"].AsString();
        }

        /// <summary>
        /// Gets or sets the name.
        /// <br/> Should be in the format :emoji:
        /// </summary>
        [JsonPropertyName("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Gets or sets the alt.
        /// </summary>
        [JsonPropertyName("alt")]
        public string? Alt { get; set; }

        /// <summary>
        /// Gets or sets the createdAt.
        /// </summary>
        [JsonPropertyName("createdAt")]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Gets or sets the formats.
        /// <br/> Open union to allow for future formats
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.FormatsV0"/> (blue.moji.collection.item#formats_v0) <br/>
        /// </summary>
        [JsonPropertyName("formats")]
        public FishyFlip.Lexicon.Blue.Moji.Collection.FormatsV0? Formats { get; set; }

        /// <summary>
        /// Gets or sets the adultOnly.
        /// </summary>
        [JsonPropertyName("adultOnly")]
        public bool? AdultOnly { get; set; } = false;

        /// <summary>
        /// Gets or sets the labels.
        /// <br/> Self-label values for this emoji. Effectively content warnings.
        /// <br/> Union Types: <br/>
        /// <see cref="FishyFlip.Lexicon.Com.Atproto.Label.SelfLabels"/> (com.atproto.label.defs#selfLabels) <br/>
        /// </summary>
        [JsonPropertyName("labels")]
        public FishyFlip.Lexicon.Com.Atproto.Label.SelfLabels? Labels { get; set; }

        /// <summary>
        /// Gets or sets the copyOf.
        /// </summary>
        [JsonPropertyName("copyOf")]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri? CopyOf { get; set; }

        /// <summary>
        /// Gets or sets the fallbackText.
        /// </summary>
        [JsonPropertyName("fallbackText")]
        public string? FallbackText { get; set; } = "â—Œ";

        public const string RecordType = "blue.moji.collection.item";

        public static Item FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Blue.Moji.Collection.Item>(json, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Moji.Collection.Item>)SourceGenerationContext.Default.BlueMojiCollectionItem)!;
        }
    }
}

