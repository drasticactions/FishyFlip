// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Blue.Moji.Collection
{
    public partial class SaveToCollectionOutput : ATObject, ICBOREncodable<SaveToCollectionOutput>, IJsonEncodable<SaveToCollectionOutput>, IParsable<SaveToCollectionOutput>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="SaveToCollectionOutput"/> class.
        /// </summary>
        /// <param name="uri"></param>
        /// <param name="item">
        /// <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.ItemView"/> (blue.moji.collection.item#itemView)
        /// </param>
        public SaveToCollectionOutput(FishyFlip.Models.ATUri uri = default, FishyFlip.Lexicon.Blue.Moji.Collection.ItemView item = default)
        {
            this.Uri = uri;
            this.Item = item;
            this.Type = "blue.moji.collection.saveToCollection#SaveToCollectionOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SaveToCollectionOutput"/> class.
        /// </summary>
        public SaveToCollectionOutput()
        {
            this.Type = "blue.moji.collection.saveToCollection#SaveToCollectionOutput";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="SaveToCollectionOutput"/> class.
        /// </summary>
        public SaveToCollectionOutput(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["item"] is not null) this.Item = new FishyFlip.Lexicon.Blue.Moji.Collection.ItemView(obj["item"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the uri.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri Uri { get; set; }

        /// <summary>
        /// Gets or sets the item.
        /// <br/> <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.ItemView"/> (blue.moji.collection.item#itemView)
        /// </summary>
        [JsonPropertyName("item")]
        [JsonRequired]
        public FishyFlip.Lexicon.Blue.Moji.Collection.ItemView Item { get; set; }

        public const string RecordType = "blue.moji.collection.saveToCollection#SaveToCollectionOutput";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Moji.Collection.SaveToCollectionOutput>)SourceGenerationContext.Default.BlueMojiCollectionSaveToCollectionOutput);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Moji.Collection.SaveToCollectionOutput>)SourceGenerationContext.Default.BlueMojiCollectionSaveToCollectionOutput);
        }

        public static new SaveToCollectionOutput FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Blue.Moji.Collection.SaveToCollectionOutput>(json, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Moji.Collection.SaveToCollectionOutput>)SourceGenerationContext.Default.BlueMojiCollectionSaveToCollectionOutput)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new SaveToCollectionOutput FromCBORObject(CBORObject obj)
        {
            return new SaveToCollectionOutput(obj);
        }

        /// <inheritdoc/>
        public static SaveToCollectionOutput Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<SaveToCollectionOutput>(s, (JsonTypeInfo<SaveToCollectionOutput>)SourceGenerationContext.Default.BlueMojiCollectionSaveToCollectionOutput)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out SaveToCollectionOutput result)
        {
            result = JsonSerializer.Deserialize<SaveToCollectionOutput>(s, (JsonTypeInfo<SaveToCollectionOutput>)SourceGenerationContext.Default.BlueMojiCollectionSaveToCollectionOutput);
            return result != null;
        }
    }
}

