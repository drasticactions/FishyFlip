// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable annotations
#nullable disable warnings

namespace FishyFlip.Lexicon.Blue.Moji.Collection
{
    public partial class ItemViewDef : ATObject, ICBOREncodable<ItemViewDef>, IJsonEncodable<ItemViewDef>, IParsable<ItemViewDef>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ItemViewDef"/> class.
        /// </summary>
        /// <param name="uri"></param>
        /// <param name="record">
        /// <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.ItemView"/> (blue.moji.collection.item#itemView)
        /// </param>
        public ItemViewDef(FishyFlip.Models.ATUri uri = default, FishyFlip.Lexicon.Blue.Moji.Collection.ItemView record = default)
        {
            this.Uri = uri;
            this.Record = record;
            this.Type = "blue.moji.collection.listCollection#itemView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ItemViewDef"/> class.
        /// </summary>
        public ItemViewDef()
        {
            this.Type = "blue.moji.collection.listCollection#itemView";
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ItemViewDef"/> class.
        /// </summary>
        public ItemViewDef(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["record"] is not null) this.Record = new FishyFlip.Lexicon.Blue.Moji.Collection.ItemView(obj["record"]);
            if (obj["$type"] is not null) this.Type = obj["$type"].AsString();
        }

        /// <summary>
        /// Gets or sets the uri.
        /// </summary>
        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri Uri { get; set; }

        /// <summary>
        /// Gets or sets the record.
        /// <br/> <see cref="FishyFlip.Lexicon.Blue.Moji.Collection.ItemView"/> (blue.moji.collection.item#itemView)
        /// </summary>
        [JsonPropertyName("record")]
        [JsonRequired]
        public FishyFlip.Lexicon.Blue.Moji.Collection.ItemView Record { get; set; }

        public const string RecordType = "blue.moji.collection.listCollection#itemView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Moji.Collection.ItemViewDef>)SourceGenerationContext.Default.BlueMojiCollectionItemViewDef);
        }

        public override byte[] ToUtf8Json()
        {
            return JsonSerializer.SerializeToUtf8Bytes(this, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Moji.Collection.ItemViewDef>)SourceGenerationContext.Default.BlueMojiCollectionItemViewDef);
        }

        public static new ItemViewDef FromJson(string json)
        {
            return JsonSerializer.Deserialize<FishyFlip.Lexicon.Blue.Moji.Collection.ItemViewDef>(json, (JsonTypeInfo<FishyFlip.Lexicon.Blue.Moji.Collection.ItemViewDef>)SourceGenerationContext.Default.BlueMojiCollectionItemViewDef)!;
        }

        /// <inheritdoc/>
        public override CBORObject ToCBORObject()
        {
            using var jsonStream = new MemoryStream(Encoding.UTF8.GetBytes(this.ToJson()));
            return CBORObject.ReadJSON(jsonStream);
        }

        /// <inheritdoc/>
        public static new ItemViewDef FromCBORObject(CBORObject obj)
        {
            return new ItemViewDef(obj);
        }

        /// <inheritdoc/>
        public static ItemViewDef Parse(string s, IFormatProvider? provider)
        {
            return JsonSerializer.Deserialize<ItemViewDef>(s, (JsonTypeInfo<ItemViewDef>)SourceGenerationContext.Default.BlueMojiCollectionItemViewDef)!;
        }

        /// <inheritdoc/>
        public static bool TryParse(string? s, IFormatProvider? provider, out ItemViewDef result)
        {
            result = JsonSerializer.Deserialize<ItemViewDef>(s, (JsonTypeInfo<ItemViewDef>)SourceGenerationContext.Default.BlueMojiCollectionItemViewDef);
            return result != null;
        }
    }
}

